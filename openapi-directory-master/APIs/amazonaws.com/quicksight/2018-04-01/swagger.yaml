swagger: '2.0'
info:
  version: '2018-04-01'
  x-release: v4
  title: Amazon QuickSight
  description: '<fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the AWS Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: quicksight
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/quicksight-2018-04-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/quicksight/'
host: quicksight.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://quicksight.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon QuickSight multi-region endpoint
  - url: 'https://quicksight.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon QuickSight multi-region endpoint
  - url: 'http://quicksight.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon QuickSight endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://quicksight.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon QuickSight endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}':
    delete:
      operationId: CancelIngestion
      description: Cancels an ongoing ingestion of data into SPICE.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelIngestionResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: CreateIngestion
      description: '<p>Creates and starts a new SPICE ingestion on a dataset</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href="https://aws.example.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the AWS Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIngestionResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          minLength: 1
          maxLength: 128
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
    get:
      operationId: DescribeIngestion
      description: Describes a SPICE ingestion.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeIngestionResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          type: string
          pattern: '^[a-zA-Z0-9-_]+$'
          minLength: 1
          maxLength: 128
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}':
    post:
      operationId: CreateDashboard
      description: '<p>Creates a dashboard from a template. To first create a template, see the CreateTemplate API operation.</p> <p>A dashboard is an entity in QuickSight that identifies QuickSight reports, created from analyses. You can share QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. The <code>CreateDashboard</code>, <code>DescribeDashboard</code>, and <code>ListDashboardsByUser</code> API operations act on the dashboard entity. If you have the correct permissions, you can create a dashboard from a template that exists in a different AWS account.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDashboardResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account where you want to create the dashboard.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: 'The ID for the dashboard, also added to the IAM policy.'
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Name
              - SourceEntity
            properties:
              Name:
                description: The display name of the dashboard.
                type: string
                pattern: '[\u0020-\u00FF]+'
                minLength: 1
                maxLength: 2048
              Parameters:
                description: Parameters.
                type: object
                properties:
                  StringParameters:
                    $ref: '#/definitions/StringParameterList'
                    description: String parameters.
                  IntegerParameters:
                    $ref: '#/definitions/IntegerParameterList'
                    description: Integer parameters.
                  DecimalParameters:
                    $ref: '#/definitions/DecimalParameterList'
                    description: Decimal parameters.
                  DateTimeParameters:
                    $ref: '#/definitions/DateTimeParameterList'
                    description: DateTime parameters.
              Permissions:
                description: A structure that contains the permissions of the dashboard. You can use this structure for granting permissions with principal and action information.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
              SourceEntity:
                description: Dashboard source entity.
                type: object
                properties:
                  SourceTemplate:
                    $ref: '#/definitions/DashboardSourceTemplate'
                    description: Source template.
              Tags:
                description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
                type: array
                items:
                  $ref: '#/definitions/Tag'
                minItems: 1
                maxItems: 200
              VersionDescription:
                description: A description for the first version of the dashboard being created.
                type: string
                minLength: 1
                maxLength: 512
              DashboardPublishOptions:
                description: Dashboard publish options.
                type: object
                properties:
                  AdHocFilteringOption:
                    $ref: '#/definitions/AdHocFilteringOption'
                    description: Ad hoc (one-time) filtering option.
                  ExportToCSVOption:
                    $ref: '#/definitions/ExportToCSVOption'
                    description: Export to .csv option.
                  SheetControlsOption:
                    $ref: '#/definitions/SheetControlsOption'
                    description: Sheet controls option.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDashboard
      description: Deletes a dashboard.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDashboardResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboard that you're deleting.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: 'The version number of the dashboard. If the version number property is provided, only the specified version of the dashboard is deleted.'
          type: integer
          minimum: 1
    get:
      operationId: DescribeDashboard
      description: Provides a summary for a dashboard.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDashboardResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboard that you're describing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: 'The version number for the dashboard. If a version number isn''t passed, the latest published dashboard version is described. '
          type: integer
          minimum: 1
        - name: alias-name
          in: query
          required: false
          description: The alias name.
          type: string
          pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
          minLength: 1
          maxLength: 2048
    put:
      operationId: UpdateDashboard
      description: Updates a dashboard in an AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDashboardResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboard that you're updating.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Name
              - SourceEntity
            properties:
              Name:
                description: The display name of the dashboard.
                type: string
                pattern: '[\u0020-\u00FF]+'
                minLength: 1
                maxLength: 2048
              SourceEntity:
                description: Dashboard source entity.
                type: object
                properties:
                  SourceTemplate:
                    $ref: '#/definitions/DashboardSourceTemplate'
                    description: Source template.
              Parameters:
                description: Parameters.
                type: object
                properties:
                  StringParameters:
                    $ref: '#/definitions/StringParameterList'
                    description: String parameters.
                  IntegerParameters:
                    $ref: '#/definitions/IntegerParameterList'
                    description: Integer parameters.
                  DecimalParameters:
                    $ref: '#/definitions/DecimalParameterList'
                    description: Decimal parameters.
                  DateTimeParameters:
                    $ref: '#/definitions/DateTimeParameterList'
                    description: DateTime parameters.
              VersionDescription:
                description: A description for the first version of the dashboard being created.
                type: string
                minLength: 1
                maxLength: 512
              DashboardPublishOptions:
                description: Dashboard publish options.
                type: object
                properties:
                  AdHocFilteringOption:
                    $ref: '#/definitions/AdHocFilteringOption'
                    description: Ad hoc (one-time) filtering option.
                  ExportToCSVOption:
                    $ref: '#/definitions/ExportToCSVOption'
                    description: Export to .csv option.
                  SheetControlsOption:
                    $ref: '#/definitions/SheetControlsOption'
                    description: Sheet controls option.
  '/accounts/{AwsAccountId}/data-sets':
    post:
      operationId: CreateDataSet
      description: Creates a dataset.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDataSetResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '487':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '488':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - DataSetId
              - Name
              - PhysicalTableMap
              - ImportMode
              - RowLevelPermissionDataSet
            properties:
              DataSetId:
                description: An ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
                type: string
              Name:
                description: The display name for the dataset.
                type: string
                minLength: 1
                maxLength: 128
              PhysicalTableMap:
                description: Declares the physical tables that are available in the underlying data sources.
                type: object
                minProperties: 1
                maxProperties: 16
                additionalProperties:
                  $ref: '#/definitions/PhysicalTable'
              LogicalTableMap:
                description: Configures the combination and transformation of the data from the physical tables.
                type: object
                minProperties: 1
                maxProperties: 32
                additionalProperties:
                  $ref: '#/definitions/LogicalTable'
              ImportMode:
                description: Indicates whether you want to import the data into SPICE.
                type: string
                enum:
                  - SPICE
                  - DIRECT_QUERY
              ColumnGroups:
                description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
                type: array
                items:
                  $ref: '#/definitions/ColumnGroup'
                minItems: 1
                maxItems: 8
              Permissions:
                description: A list of resource permissions on the dataset.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
              RowLevelPermissionDataSet:
                description: The row-level security configuration for the dataset.
                type: object
                properties:
                  Arn:
                    $ref: '#/definitions/Arn'
                    description: The Amazon Resource Name (ARN) of the permission dataset.
                  PermissionPolicy:
                    $ref: '#/definitions/RowLevelPermissionPolicy'
                    description: Permission policy.
              Tags:
                description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.
                type: array
                items:
                  $ref: '#/definitions/Tag'
                minItems: 1
                maxItems: 200
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDataSets
      description: '<p>Lists all of the datasets belonging to the current AWS account in an AWS Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDataSetsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/accounts/{AwsAccountId}/data-sources':
    post:
      operationId: CreateDataSource
      description: Creates a data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDataSourceResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '486':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - DataSourceId
              - Name
              - Type
              - VpcConnectionProperties
            properties:
              DataSourceId:
                description: 'An ID for the data source. This ID is unique per AWS Region for each AWS account. '
                type: string
              Name:
                description: A display name for the data source.
                type: string
                minLength: 1
                maxLength: 128
              Type:
                description: 'The type of the data source. Currently, the supported types for this operation are: <code>ATHENA, AURORA, AURORA_POSTGRESQL, MARIADB, MYSQL, POSTGRESQL, PRESTO, REDSHIFT, S3, SNOWFLAKE, SPARK, SQLSERVER, TERADATA</code>. Use <code>ListDataSources</code> to return a list of all data sources.'
                type: string
                enum:
                  - ADOBE_ANALYTICS
                  - AMAZON_ELASTICSEARCH
                  - ATHENA
                  - AURORA
                  - AURORA_POSTGRESQL
                  - AWS_IOT_ANALYTICS
                  - GITHUB
                  - JIRA
                  - MARIADB
                  - MYSQL
                  - POSTGRESQL
                  - PRESTO
                  - REDSHIFT
                  - S3
                  - SALESFORCE
                  - SERVICENOW
                  - SNOWFLAKE
                  - SPARK
                  - SQLSERVER
                  - TERADATA
                  - TWITTER
              DataSourceParameters:
                description: 'The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
                type: object
                properties:
                  AmazonElasticsearchParameters:
                    $ref: '#/definitions/AmazonElasticsearchParameters'
                    description: Amazon Elasticsearch Service parameters.
                  AthenaParameters:
                    $ref: '#/definitions/AthenaParameters'
                    description: Amazon Athena parameters.
                  AuroraParameters:
                    $ref: '#/definitions/AuroraParameters'
                    description: Amazon Aurora MySQL parameters.
                  AuroraPostgreSqlParameters:
                    $ref: '#/definitions/AuroraPostgreSqlParameters'
                    description: Aurora PostgreSQL parameters.
                  AwsIotAnalyticsParameters:
                    $ref: '#/definitions/AwsIotAnalyticsParameters'
                    description: AWS IoT Analytics parameters.
                  JiraParameters:
                    $ref: '#/definitions/JiraParameters'
                    description: Jira parameters.
                  MariaDbParameters:
                    $ref: '#/definitions/MariaDbParameters'
                    description: MariaDB parameters.
                  MySqlParameters:
                    $ref: '#/definitions/MySqlParameters'
                    description: MySQL parameters.
                  PostgreSqlParameters:
                    $ref: '#/definitions/PostgreSqlParameters'
                    description: PostgreSQL parameters.
                  PrestoParameters:
                    $ref: '#/definitions/PrestoParameters'
                    description: Presto parameters.
                  RdsParameters:
                    $ref: '#/definitions/RdsParameters'
                    description: Amazon RDS parameters.
                  RedshiftParameters:
                    $ref: '#/definitions/RedshiftParameters'
                    description: Amazon Redshift parameters.
                  S3Parameters:
                    $ref: '#/definitions/S3Parameters'
                    description: S3 parameters.
                  ServiceNowParameters:
                    $ref: '#/definitions/ServiceNowParameters'
                    description: ServiceNow parameters.
                  SnowflakeParameters:
                    $ref: '#/definitions/SnowflakeParameters'
                    description: Snowflake parameters.
                  SparkParameters:
                    $ref: '#/definitions/SparkParameters'
                    description: Spark parameters.
                  SqlServerParameters:
                    $ref: '#/definitions/SqlServerParameters'
                    description: SQL Server parameters.
                  TeradataParameters:
                    $ref: '#/definitions/TeradataParameters'
                    description: Teradata parameters.
                  TwitterParameters:
                    $ref: '#/definitions/TwitterParameters'
                    description: Twitter parameters.
              Credentials:
                description: Data source credentials.
                type: object
                properties:
                  CredentialPair:
                    $ref: '#/definitions/CredentialPair'
                    description: Credential pair.
              Permissions:
                description: A list of resource permissions on the data source.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
              VpcConnectionProperties:
                description: VPC connection properties.
                type: object
                properties:
                  VpcConnectionArn:
                    $ref: '#/definitions/Arn'
                    description: The Amazon Resource Name (ARN) for the VPC connection.
              SslProperties:
                description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying data source.
                type: object
                properties:
                  DisableSsl:
                    $ref: '#/definitions/Boolean'
                    description: A Boolean option to control whether SSL should be disabled.
              Tags:
                description: Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
                type: array
                items:
                  $ref: '#/definitions/Tag'
                minItems: 1
                maxItems: 200
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListDataSources
      description: Lists data sources in current AWS Region that belong to this AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDataSourcesResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups':
    post:
      operationId: CreateGroup
      description: '<p>Creates an Amazon QuickSight group.</p> <p>The permissions resource is <code>arn:aws:quicksight:us-east-1:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '488':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - GroupName
            properties:
              GroupName:
                description: A name for the group that you want to create.
                type: string
                pattern: '[\u0020-\u00FF]+'
                minLength: 1
              Description:
                description: A description for the group that you want to create.
                type: string
                minLength: 1
                maxLength: 512
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListGroups
      description: 'Lists all user groups in Amazon QuickSight. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '485':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '487':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return.
          type: integer
          minimum: 1
          maximum: 100
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}':
    put:
      operationId: CreateGroupMembership
      description: 'Adds an Amazon QuickSight user to an Amazon QuickSight group. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupMembershipResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: MemberName
          in: path
          required: true
          description: The name of the user that you want to add to the group membership.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
          maxLength: 256
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to add the user to.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteGroupMembership
      description: Removes a user from a group so that the user is no longer a member of the group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupMembershipResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: MemberName
          in: path
          required: true
          description: The name of the user that you want to delete from the group membership.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
          maxLength: 256
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to delete the user from.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/':
    post:
      operationId: CreateIAMPolicyAssignment
      description: 'Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy will be assigned to specified groups or users of Amazon QuickSight. The users and groups need to be in the same namespace. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          schema:
            $ref: '#/definitions/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account where you want to assign an IAM policy to QuickSight users or groups.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - AssignmentName
              - AssignmentStatus
            properties:
              AssignmentName:
                description: The name of the assignment. It must be unique within an AWS account.
                type: string
                pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
                minLength: 1
              AssignmentStatus:
                description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
                type: string
                enum:
                  - ENABLED
                  - DRAFT
                  - DISABLED
              PolicyArn:
                description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
                type: string
              Identities:
                description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
                type: object
                additionalProperties:
                  $ref: '#/definitions/IdentityNameList'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/templates/{TemplateId}':
    post:
      operationId: CreateTemplate
      description: <p>Creates a template from an existing QuickSight analysis or template. You can use the resulting template to create a dashboard.</p> <p>A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTemplateResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '486':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template that you want to create. This template is unique per AWS Region in each AWS account.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - SourceEntity
            properties:
              Name:
                description: A display name for the template.
                type: string
                pattern: '[\u0020-\u00FF]+'
                minLength: 1
                maxLength: 2048
              Permissions:
                description: 'A list of resource permissions to be set on the template. '
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
              SourceEntity:
                description: The source entity of the template.
                type: object
                properties:
                  SourceAnalysis:
                    $ref: '#/definitions/TemplateSourceAnalysis'
                    description: 'The source analysis, if it is based on an analysis.'
                  SourceTemplate:
                    $ref: '#/definitions/TemplateSourceTemplate'
                    description: 'The source template, if it is based on an template.'
              Tags:
                description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
                type: array
                items:
                  $ref: '#/definitions/Tag'
                minItems: 1
                maxItems: 200
              VersionDescription:
                description: 'A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
                type: string
                minLength: 1
                maxLength: 512
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTemplate
      description: Deletes a template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTemplateResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template that you're deleting.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template you want to delete.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: 'Specifies the version of the template that you want to delete. If you don''t provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. '
          type: integer
          minimum: 1
    get:
      operationId: DescribeTemplate
      description: Describes a template's metadata.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTemplateResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '486':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template that you're describing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: version-number
          in: query
          required: false
          description: '(Optional) The number for the version to describe. If a <code>VersionNumber</code> parameter value isn''t provided, the latest version of the template is described.'
          type: integer
          minimum: 1
        - name: alias-name
          in: query
          required: false
          description: 'The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn''t apply to templates.'
          type: string
          pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
          minLength: 1
          maxLength: 2048
    put:
      operationId: UpdateTemplate
      description: Updates a template from an existing Amazon QuickSight analysis or another template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTemplateResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '486':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template that you're updating.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - SourceEntity
            properties:
              SourceEntity:
                description: The source entity of the template.
                type: object
                properties:
                  SourceAnalysis:
                    $ref: '#/definitions/TemplateSourceAnalysis'
                    description: 'The source analysis, if it is based on an analysis.'
                  SourceTemplate:
                    $ref: '#/definitions/TemplateSourceTemplate'
                    description: 'The source template, if it is based on an template.'
              VersionDescription:
                description: 'A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
                type: string
                minLength: 1
                maxLength: 512
              Name:
                description: The name for the template.
                type: string
                pattern: '[\u0020-\u00FF]+'
                minLength: 1
                maxLength: 2048
  '/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}':
    post:
      operationId: CreateTemplateAlias
      description: Creates a template alias for a template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTemplateAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template that you creating an alias for.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The name that you want to give to the template alias that you''re creating. Don''t start the alias name with the <code>$</code> character. Alias names that start with <code>$</code> are reserved by QuickSight. '
          type: string
          pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - TemplateVersionNumber
            properties:
              TemplateVersionNumber:
                description: The version number of the template.
                type: integer
                minimum: 1
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTemplateAlias
      description: 'Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTemplateAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the item to delete.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template that the specified alias is for.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The name for the template alias. If you name a specific alias, you delete the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. '
          type: string
          pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
          minLength: 1
          maxLength: 2048
    get:
      operationId: DescribeTemplateAlias
      description: Describes the template alias for a template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTemplateAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template alias that you're describing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The name of the template alias that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn''t apply to templates.'
          type: string
          pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
          minLength: 1
          maxLength: 2048
    put:
      operationId: UpdateTemplateAlias
      description: Updates the template alias of a template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTemplateAliasResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template alias that you're updating.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: AliasName
          in: path
          required: true
          description: 'The alias of the template that you want to update. If you name a specific alias, you update the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn''t apply to templates.'
          type: string
          pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - TemplateVersionNumber
            properties:
              TemplateVersionNumber:
                description: The version number of the template.
                type: integer
                minimum: 1
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}':
    delete:
      operationId: DeleteDataSet
      description: Deletes a dataset.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDataSetResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDataSet
      description: 'Describes a dataset. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDataSetResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
          type: string
    put:
      operationId: UpdateDataSet
      description: Updates a dataset.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDataSetResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to update. This ID is unique per AWS Region for each AWS account.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Name
              - PhysicalTableMap
              - ImportMode
              - RowLevelPermissionDataSet
            properties:
              Name:
                description: The display name for the dataset.
                type: string
                minLength: 1
                maxLength: 128
              PhysicalTableMap:
                description: Declares the physical tables that are available in the underlying data sources.
                type: object
                minProperties: 1
                maxProperties: 16
                additionalProperties:
                  $ref: '#/definitions/PhysicalTable'
              LogicalTableMap:
                description: Configures the combination and transformation of the data from the physical tables.
                type: object
                minProperties: 1
                maxProperties: 32
                additionalProperties:
                  $ref: '#/definitions/LogicalTable'
              ImportMode:
                description: Indicates whether you want to import the data into SPICE.
                type: string
                enum:
                  - SPICE
                  - DIRECT_QUERY
              ColumnGroups:
                description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
                type: array
                items:
                  $ref: '#/definitions/ColumnGroup'
                minItems: 1
                maxItems: 8
              RowLevelPermissionDataSet:
                description: The row-level security configuration for the dataset.
                type: object
                properties:
                  Arn:
                    $ref: '#/definitions/Arn'
                    description: The Amazon Resource Name (ARN) of the permission dataset.
                  PermissionPolicy:
                    $ref: '#/definitions/RowLevelPermissionPolicy'
                    description: Permission policy.
  '/accounts/{AwsAccountId}/data-sources/{DataSourceId}':
    delete:
      operationId: DeleteDataSource
      description: Deletes the data source permanently. This action breaks all the datasets that reference the deleted data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDataSourceResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDataSource
      description: Describes a data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDataSourceResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
          type: string
    put:
      operationId: UpdateDataSource
      description: Updates a data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDataSourceResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: 'The ID of the data source. This ID is unique per AWS Region for each AWS account. '
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Name
              - VpcConnectionProperties
            properties:
              Name:
                description: A display name for the data source.
                type: string
                minLength: 1
                maxLength: 128
              DataSourceParameters:
                description: 'The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
                type: object
                properties:
                  AmazonElasticsearchParameters:
                    $ref: '#/definitions/AmazonElasticsearchParameters'
                    description: Amazon Elasticsearch Service parameters.
                  AthenaParameters:
                    $ref: '#/definitions/AthenaParameters'
                    description: Amazon Athena parameters.
                  AuroraParameters:
                    $ref: '#/definitions/AuroraParameters'
                    description: Amazon Aurora MySQL parameters.
                  AuroraPostgreSqlParameters:
                    $ref: '#/definitions/AuroraPostgreSqlParameters'
                    description: Aurora PostgreSQL parameters.
                  AwsIotAnalyticsParameters:
                    $ref: '#/definitions/AwsIotAnalyticsParameters'
                    description: AWS IoT Analytics parameters.
                  JiraParameters:
                    $ref: '#/definitions/JiraParameters'
                    description: Jira parameters.
                  MariaDbParameters:
                    $ref: '#/definitions/MariaDbParameters'
                    description: MariaDB parameters.
                  MySqlParameters:
                    $ref: '#/definitions/MySqlParameters'
                    description: MySQL parameters.
                  PostgreSqlParameters:
                    $ref: '#/definitions/PostgreSqlParameters'
                    description: PostgreSQL parameters.
                  PrestoParameters:
                    $ref: '#/definitions/PrestoParameters'
                    description: Presto parameters.
                  RdsParameters:
                    $ref: '#/definitions/RdsParameters'
                    description: Amazon RDS parameters.
                  RedshiftParameters:
                    $ref: '#/definitions/RedshiftParameters'
                    description: Amazon Redshift parameters.
                  S3Parameters:
                    $ref: '#/definitions/S3Parameters'
                    description: S3 parameters.
                  ServiceNowParameters:
                    $ref: '#/definitions/ServiceNowParameters'
                    description: ServiceNow parameters.
                  SnowflakeParameters:
                    $ref: '#/definitions/SnowflakeParameters'
                    description: Snowflake parameters.
                  SparkParameters:
                    $ref: '#/definitions/SparkParameters'
                    description: Spark parameters.
                  SqlServerParameters:
                    $ref: '#/definitions/SqlServerParameters'
                    description: SQL Server parameters.
                  TeradataParameters:
                    $ref: '#/definitions/TeradataParameters'
                    description: Teradata parameters.
                  TwitterParameters:
                    $ref: '#/definitions/TwitterParameters'
                    description: Twitter parameters.
              Credentials:
                description: Data source credentials.
                type: object
                properties:
                  CredentialPair:
                    $ref: '#/definitions/CredentialPair'
                    description: Credential pair.
              VpcConnectionProperties:
                description: VPC connection properties.
                type: object
                properties:
                  VpcConnectionArn:
                    $ref: '#/definitions/Arn'
                    description: The Amazon Resource Name (ARN) for the VPC connection.
              SslProperties:
                description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying data source.
                type: object
                properties:
                  DisableSsl:
                    $ref: '#/definitions/Boolean'
                    description: A Boolean option to control whether SSL should be disabled.
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}':
    delete:
      operationId: DeleteGroup
      description: 'Removes a user group from Amazon QuickSight. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to delete.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeGroup
      description: 'Returns an Amazon QuickSight group''s description and Amazon Resource Name (ARN). '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGroupResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to describe.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    put:
      operationId: UpdateGroup
      description: 'Changes a group description. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateGroupResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to update.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Description:
                description: The description for the group that you want to update.
                type: string
                minLength: 1
                maxLength: 512
  '/accounts/{AwsAccountId}/namespace/{Namespace}/iam-policy-assignments/{AssignmentName}':
    delete:
      operationId: DeleteIAMPolicyAssignment
      description: Deletes an existing IAM policy assignment.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          schema:
            $ref: '#/definitions/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID where you want to delete the IAM policy assignment.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: 'The name of the assignment. '
          type: string
          pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
          minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}':
    delete:
      operationId: DeleteUser
      description: 'Deletes the Amazon QuickSight user that is associated with the identity of the AWS Identity and Access Management (IAM) user or role that''s making the call. The IAM user isn''t deleted as a result of this call. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The name of the user that you want to delete.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeUser
      description: 'Returns information about a user, given the user name. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeUserResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The name of the user that you want to describe.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    put:
      operationId: UpdateUser
      description: Updates an Amazon QuickSight user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateUserResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The Amazon QuickSight user name that you want to update.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Email
              - Role
            properties:
              Email:
                description: The email address of the user that you want to update.
                type: string
              Role:
                description: '<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>'
                type: string
                enum:
                  - ADMIN
                  - AUTHOR
                  - READER
                  - RESTRICTED_AUTHOR
                  - RESTRICTED_READER
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}':
    delete:
      operationId: DeleteUserByPrincipalId
      description: 'Deletes a user identified by its principal ID. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserByPrincipalIdResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: PrincipalId
          in: path
          required: true
          description: The principal ID of the user.
          type: string
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions':
    get:
      operationId: DescribeDashboardPermissions
      description: Describes read and write permissions for a dashboard.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDashboardPermissionsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboard that you're describing permissions for.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: 'The ID for the dashboard, also added to the IAM policy.'
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateDashboardPermissions
      description: Updates read and write permissions on a dashboard.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDashboardPermissionsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboard whose permissions you're updating.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              GrantPermissions:
                description: The permissions that you want to grant on this resource.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 100
              RevokePermissions:
                description: The permissions that you want to revoke from this resource.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 100
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions':
    get:
      operationId: DescribeDataSetPermissions
      description: '<p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDataSetPermissionsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateDataSetPermissions
      description: '<p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDataSetPermissionsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset whose permissions you want to update. This ID is unique per AWS Region for each AWS account.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              GrantPermissions:
                description: The resource permissions that you want to grant to the dataset.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
              RevokePermissions:
                description: The resource permissions that you want to revoke from the dataset.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
  '/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions':
    get:
      operationId: DescribeDataSourcePermissions
      description: Describes the resource permissions for a data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDataSourcePermissionsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateDataSourcePermissions
      description: Updates the permissions to a data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDataSourcePermissionsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: 'The ID of the data source. This ID is unique per AWS Region for each AWS account. '
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              GrantPermissions:
                description: A list of resource permissions that you want to grant on the data source.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
              RevokePermissions:
                description: A list of resource permissions that you want to revoke on the data source.
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 64
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}':
    get:
      operationId: DescribeIAMPolicyAssignment
      description: 'Describes an existing IAM policy assignment, as specified by the assignment name.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the assignment that you want to describe.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: 'The name of the assignment. '
          type: string
          pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
          minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateIAMPolicyAssignment
      description: Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateIAMPolicyAssignmentResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          schema:
            $ref: '#/definitions/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the IAM policy assignment.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: The name of the assignment. This name must be unique within an AWS account.
          type: string
          pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
          minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace of the assignment.
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              AssignmentStatus:
                description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
                type: string
                enum:
                  - ENABLED
                  - DRAFT
                  - DISABLED
              PolicyArn:
                description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
                type: string
              Identities:
                description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
                type: object
                additionalProperties:
                  $ref: '#/definitions/IdentityNameList'
  '/accounts/{AwsAccountId}/templates/{TemplateId}/permissions':
    get:
      operationId: DescribeTemplatePermissions
      description: Describes read and write permissions on a template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTemplatePermissionsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template that you're describing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    put:
      operationId: UpdateTemplatePermissions
      description: Updates the resource permissions for a template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTemplatePermissionsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              GrantPermissions:
                description: 'A list of resource permissions to be granted on the template. '
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 100
              RevokePermissions:
                description: 'A list of resource permissions to be revoked from the template. '
                type: array
                items:
                  $ref: '#/definitions/ResourcePermission'
                minItems: 1
                maxItems: 100
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url#creds-type':
    get:
      operationId: GetDashboardEmbedUrl
      description: '<p>Generates a server-side embeddable URL and authorization code. For this process to work properly, first configure the dashboards and user permissions. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight User Guide</i> or <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/qs-dev-embedded-dashboards.html">Embedding Amazon QuickSight Dashboards</a> in the <i>Amazon QuickSight API Reference</i>.</p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user’s browser.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDashboardEmbedUrlResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: DomainNotWhitelistedException
          schema:
            $ref: '#/definitions/DomainNotWhitelistedException'
        '486':
          description: QuickSightUserNotFoundException
          schema:
            $ref: '#/definitions/QuickSightUserNotFoundException'
        '487':
          description: IdentityTypeNotSupportedException
          schema:
            $ref: '#/definitions/IdentityTypeNotSupportedException'
        '488':
          description: SessionLifetimeInMinutesInvalidException
          schema:
            $ref: '#/definitions/SessionLifetimeInMinutesInvalidException'
        '489':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '490':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the AWS account that contains the dashboard that you're embedding.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: 'The ID for the dashboard, also added to the IAM policy.'
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: creds-type
          in: query
          required: true
          description: The authentication method that the user uses to sign in.
          type: string
          enum:
            - IAM
            - QUICKSIGHT
        - name: session-lifetime
          in: query
          required: false
          description: How many minutes the session is valid. The session lifetime must be 15-600 minutes.
          type: integer
          minimum: 15
          maximum: 600
        - name: undo-redo-disabled
          in: query
          required: false
          description: 'Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables the undo/redo button.'
          type: boolean
        - name: reset-disabled
          in: query
          required: false
          description: 'Remove the reset button on the embedded dashboard. The default is FALSE, which enables the reset button.'
          type: boolean
        - name: user-arn
          in: query
          required: false
          description: '<p>The Amazon QuickSight user''s Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any Amazon QuickSight users in your account (readers, authors, or admins) authenticated as one of the following:</p> <ul> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation.</p> </li> </ul>'
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions':
    get:
      operationId: ListDashboardVersions
      description: Lists all the versions of the dashboards in the QuickSight subscription.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDashboardVersionsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboard that you're listing versions for.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards':
    get:
      operationId: ListDashboards
      description: Lists dashboards in an AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDashboardsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboards that you're listing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members':
    get:
      operationId: ListGroupMemberships
      description: Lists member users in a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupMembershipsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '485':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '487':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to see a membership list of.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          type: integer
          minimum: 1
          maximum: 100
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the group is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments':
    get:
      operationId: ListIAMPolicyAssignments
      description: Lists IAM policy assignments in the current Amazon QuickSight account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIAMPolicyAssignmentsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains these IAM policy assignments.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace for the assignments.
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              AssignmentStatus:
                description: The status of the assignments.
                type: string
                enum:
                  - ENABLED
                  - DRAFT
                  - DISABLED
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments':
    get:
      operationId: ListIAMPolicyAssignmentsForUser
      description: 'Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIAMPolicyAssignmentsForUserResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConcurrentUpdatingException
          schema:
            $ref: '#/definitions/ConcurrentUpdatingException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the assignments.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: UserName
          in: path
          required: true
          description: The name of the user.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: Namespace
          in: path
          required: true
          description: The namespace of the assignment.
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions':
    get:
      operationId: ListIngestions
      description: Lists the history of SPICE ingestions for a dataset.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIngestionsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '485':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          type: string
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: AwsAccountId
          in: path
          required: true
          description: The AWS account ID.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/resources/{ResourceArn}/tags':
    get:
      operationId: ListTagsForResource
      description: Lists the tags assigned to a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want a list of tags for.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: '<p>Assigns one or more tags (key-value pairs) to the specified QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for QuickSight works in a similar way to tagging for other AWS services, except for the following:</p> <ul> <li> <p>You can''t use tags to track AWS costs for QuickSight. This restriction is because QuickSight costs are based on users and SPICE capacity, which aren''t taggable resources.</p> </li> <li> <p>QuickSight doesn''t currently support the Tag Editor for AWS Resource Groups.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to tag.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Tags
            properties:
              Tags:
                description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
                type: array
                items:
                  $ref: '#/definitions/Tag'
                minItems: 1
                maxItems: 200
  '/accounts/{AwsAccountId}/templates/{TemplateId}/aliases':
    get:
      operationId: ListTemplateAliases
      description: Lists all the aliases of a template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTemplateAliasesResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the template aliases that you're listing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/templates/{TemplateId}/versions':
    get:
      operationId: ListTemplateVersions
      description: Lists all the versions of the templates in the current Amazon QuickSight account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTemplateVersionsResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the templates that you're listing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/templates':
    get:
      operationId: ListTemplates
      description: Lists all the templates in the current Amazon QuickSight account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTemplatesResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the templates that you're listing.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: next-token
          in: query
          required: false
          description: 'The token for the next set of results, or null if there are no more results.'
          type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups':
    get:
      operationId: ListUserGroups
      description: Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUserGroupsResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: UserName
          in: path
          required: true
          description: The Amazon QuickSight user name that you want to list group memberships for.
          type: string
          pattern: '[\u0020-\u00FF]+'
          minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: 'The AWS account ID that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          type: integer
          minimum: 1
          maximum: 100
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/namespaces/{Namespace}/users':
    get:
      operationId: ListUsers
      description: 'Returns a list of all of the Amazon QuickSight users belonging to this account. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUsersResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          type: integer
          minimum: 1
          maximum: 100
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: RegisterUser
      description: 'Creates an Amazon QuickSight user, whose identity is associated with the AWS Identity and Access Management (IAM) identity or role specified in the request. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterUserResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '485':
          description: ResourceExistsException
          schema:
            $ref: '#/definitions/ResourceExistsException'
        '486':
          description: PreconditionNotMetException
          schema:
            $ref: '#/definitions/PreconditionNotMetException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '488':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: 'The ID for the AWS account that the user is in. Currently, you use the ID for the AWS account that contains your Amazon QuickSight account.'
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: 'The namespace. Currently, you should set this to <code>default</code>.'
          type: string
          pattern: '^[a-zA-Z0-9._-]*$'
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - IdentityType
              - Email
              - UserRole
            properties:
              IdentityType:
                description: '<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>'
                type: string
                enum:
                  - IAM
                  - QUICKSIGHT
              Email:
                description: The email address of the user that you want to register.
                type: string
              UserRole:
                description: '<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn''t currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn''t currently available for use.</p> </li> </ul>'
                type: string
                enum:
                  - ADMIN
                  - AUTHOR
                  - READER
                  - RESTRICTED_AUTHOR
                  - RESTRICTED_READER
              IamArn:
                description: 'The ARN of the IAM user or role that you are registering with Amazon QuickSight. '
                type: string
              SessionName:
                description: 'You need to use this parameter only when you register one or more users using an assumed IAM role. You don''t need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href="https://docs.aws.example.com/cli/latest/reference/sts/assume-role.html"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> '
                type: string
                pattern: '[\w+=.@-]*'
                minLength: 2
                maxLength: 64
              UserName:
                description: The Amazon QuickSight user name that you want to create for the user you are registering.
                type: string
                pattern: '[\u0020-\u00FF]+'
                minLength: 1
  '/resources/{ResourceArn}/tags#keys':
    delete:
      operationId: UntagResource
      description: Removes a tag or tags from a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to untag.
          type: string
        - name: keys
          in: query
          required: true
          description: The keys of the key-value pairs for the resource tag or tags assigned to the resource.
          type: array
          items:
            type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}':
    put:
      operationId: UpdateDashboardPublishedVersion
      description: Updates the published version of a dashboard.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDashboardPublishedVersionResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: UnsupportedUserEditionException
          schema:
            $ref: '#/definitions/UnsupportedUserEditionException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the AWS account that contains the dashboard that you're updating.
          type: string
          pattern: '^[0-9]{12}$'
          minLength: 12
          maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          type: string
          pattern: '[\w\-]+'
          minLength: 1
          maxLength: 2048
        - name: VersionNumber
          in: path
          required: true
          description: The version number of the dashboard.
          type: integer
          minimum: 1
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CancelIngestionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the data ingestion.
      IngestionId:
        $ref: '#/definitions/IngestionId'
        description: An ID for the ingestion.
      RequestId:
        $ref: '#/definitions/string'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  AccessDeniedException: {}
  InvalidParameterValueException: {}
  ResourceNotFoundException: {}
  ThrottlingException: {}
  ResourceExistsException: {}
  InternalFailureException: {}
  CreateDashboardResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      VersionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the dashboard, including the version number of the first version that is created.'
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the dashboard.
      CreationStatus:
        $ref: '#/definitions/ResourceStatus'
        description: The status of the dashboard creation request.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  StringParameterList:
    type: array
    items:
      $ref: '#/definitions/StringParameter'
    maxItems: 100
  IntegerParameterList:
    type: array
    items:
      $ref: '#/definitions/IntegerParameter'
    maxItems: 100
  DecimalParameterList:
    type: array
    items:
      $ref: '#/definitions/DecimalParameter'
    maxItems: 100
  DateTimeParameterList:
    type: array
    items:
      $ref: '#/definitions/DateTimeParameter'
    maxItems: 100
  ResourcePermission:
    type: object
    required:
      - Principal
      - Actions
    properties:
      Principal:
        $ref: '#/definitions/Principal'
        description: 'The Amazon Resource Name (ARN) of an Amazon QuickSight user or group, or an IAM ARN. If you are using cross-account resource sharing, this is the IAM ARN of an account root. Otherwise, it is the ARN of a QuickSight user or group. .'
      Actions:
        $ref: '#/definitions/ActionList'
        description: 'The action to grant or revoke permissions on, for example <code>"quicksight:DescribeDashboard"</code>.'
    description: Permission for the resource.
  DashboardSourceTemplate:
    type: object
    required:
      - DataSetReferences
      - Arn
    properties:
      DataSetReferences:
        $ref: '#/definitions/DataSetReferenceList'
        description: Dataset references.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
    description: Dashboard source template.
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: Tag key.
      Value:
        $ref: '#/definitions/TagValue'
        description: Tag value.
    description: The key or keys of the key-value pairs for the resource tag or tags assigned to the resource.
  AdHocFilteringOption:
    type: object
    properties:
      AvailabilityStatus:
        $ref: '#/definitions/DashboardBehavior'
        description: Availability status.
    description: Ad hoc (one-time) filtering option.
  ExportToCSVOption:
    type: object
    properties:
      AvailabilityStatus:
        $ref: '#/definitions/DashboardBehavior'
        description: Availability status.
    description: Export to .csv option.
  SheetControlsOption:
    type: object
    properties:
      VisibilityState:
        $ref: '#/definitions/DashboardUIState'
        description: Visibility state.
    description: Sheet controls option.
  ConflictException: {}
  UnsupportedUserEditionException: {}
  CreateDataSetResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
      IngestionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
      IngestionId:
        $ref: '#/definitions/ResourceId'
        description: 'The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  PhysicalTable:
    type: object
    properties:
      RelationalTable:
        $ref: '#/definitions/RelationalTable'
        description: A physical table type for relational data sources.
      CustomSql:
        $ref: '#/definitions/CustomSql'
        description: A physical table type built from the results of the custom SQL query.
      S3Source:
        $ref: '#/definitions/S3Source'
        description: A physical table type for as S3 data source.
    description: 'A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
  LogicalTable:
    type: object
    required:
      - Alias
      - Source
    properties:
      Alias:
        $ref: '#/definitions/LogicalTableAlias'
        description: A display name for the logical table.
      DataTransforms:
        $ref: '#/definitions/TransformOperationList'
        description: Transform operations that act on this logical table.
      Source:
        $ref: '#/definitions/LogicalTableSource'
        description: Source of this logical table.
    description: 'A <i>logical table</i> is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.'
  ColumnGroup:
    type: object
    properties:
      GeoSpatialColumnGroup:
        $ref: '#/definitions/GeoSpatialColumnGroup'
        description: Geospatial column group that denotes a hierarchy.
    description: 'Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
  Arn:
    type: string
  RowLevelPermissionPolicy:
    type: string
    enum:
      - GRANT_ACCESS
      - DENY_ACCESS
  LimitExceededException: {}
  CreateDataSourceResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the data source.
      DataSourceId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
      CreationStatus:
        $ref: '#/definitions/ResourceStatus'
        description: The status of creating the data source.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  AmazonElasticsearchParameters:
    type: object
    required:
      - Domain
    properties:
      Domain:
        $ref: '#/definitions/Domain'
        description: The Amazon Elasticsearch Service domain.
    description: Amazon Elasticsearch Service parameters.
  AthenaParameters:
    type: object
    properties:
      WorkGroup:
        $ref: '#/definitions/WorkGroup'
        description: The workgroup that Amazon Athena uses.
    description: Amazon Athena parameters.
  AuroraParameters:
    type: object
    required:
      - Host
      - Port
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: Amazon Aurora parameters.
  AuroraPostgreSqlParameters:
    type: object
    required:
      - Host
      - Port
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: Amazon Aurora with PostgreSQL compatibility parameters.
  AwsIotAnalyticsParameters:
    type: object
    required:
      - DataSetName
    properties:
      DataSetName:
        $ref: '#/definitions/DataSetName'
        description: Dataset name.
    description: AWS IoT Analytics parameters.
  JiraParameters:
    type: object
    required:
      - SiteBaseUrl
    properties:
      SiteBaseUrl:
        $ref: '#/definitions/SiteBaseUrl'
        description: The base URL of the Jira site.
    description: Jira parameters.
  MariaDbParameters:
    type: object
    required:
      - Host
      - Port
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: MariaDB parameters.
  MySqlParameters:
    type: object
    required:
      - Host
      - Port
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: MySQL parameters.
  PostgreSqlParameters:
    type: object
    required:
      - Host
      - Port
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: PostgreSQL parameters.
  PrestoParameters:
    type: object
    required:
      - Host
      - Port
      - Catalog
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Catalog:
        $ref: '#/definitions/Catalog'
        description: Catalog.
    description: Presto parameters.
  RdsParameters:
    type: object
    required:
      - InstanceId
      - Database
    properties:
      InstanceId:
        $ref: '#/definitions/InstanceId'
        description: Instance ID.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: Amazon RDS parameters.
  RedshiftParameters:
    type: object
    required:
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host. This field can be blank if <code>ClusterId</code> is provided.
      Port:
        $ref: '#/definitions/OptionalPort'
        description: Port. This field can be blank if the <code>ClusterId</code> is provided.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
      ClusterId:
        $ref: '#/definitions/ClusterId'
        description: Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are provided.
    description: Amazon Redshift parameters. The <code>ClusterId</code> field can be blank if <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.
  S3Parameters:
    type: object
    required:
      - ManifestFileLocation
    properties:
      ManifestFileLocation:
        $ref: '#/definitions/ManifestFileLocation'
        description: Location of the Amazon S3 manifest file. This is NULL if the manifest file was uploaded in the console.
    description: S3 parameters.
  ServiceNowParameters:
    type: object
    required:
      - SiteBaseUrl
    properties:
      SiteBaseUrl:
        $ref: '#/definitions/SiteBaseUrl'
        description: URL of the base site.
    description: ServiceNow parameters.
  SnowflakeParameters:
    type: object
    required:
      - Host
      - Database
      - Warehouse
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
      Warehouse:
        $ref: '#/definitions/Warehouse'
        description: Warehouse.
    description: Snowflake parameters.
  SparkParameters:
    type: object
    required:
      - Host
      - Port
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
    description: Spark parameters.
  SqlServerParameters:
    type: object
    required:
      - Host
      - Port
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: SQL Server parameters.
  TeradataParameters:
    type: object
    required:
      - Host
      - Port
      - Database
    properties:
      Host:
        $ref: '#/definitions/Host'
        description: Host.
      Port:
        $ref: '#/definitions/Port'
        description: Port.
      Database:
        $ref: '#/definitions/Database'
        description: Database.
    description: Teradata parameters.
  TwitterParameters:
    type: object
    required:
      - Query
      - MaxRows
    properties:
      Query:
        $ref: '#/definitions/Query'
        description: Twitter query string.
      MaxRows:
        $ref: '#/definitions/PositiveInteger'
        description: Maximum number of rows to query Twitter.
    description: Twitter parameters.
  CredentialPair:
    type: object
    required:
      - Username
      - Password
    properties:
      Username:
        $ref: '#/definitions/Username'
        description: User name.
      Password:
        $ref: '#/definitions/Password'
        description: Password.
    description: The combination of user name and password that are used as credentials.
  Boolean:
    type: boolean
  CreateGroupResponse:
    type: object
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: The name of the group.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
    description: The response object for this operation.
  PreconditionNotMetException: {}
  ResourceUnavailableException: {}
  CreateGroupMembershipResponse:
    type: object
    properties:
      GroupMember:
        $ref: '#/definitions/GroupMember'
        description: The group member.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  CreateIAMPolicyAssignmentResponse:
    type: object
    properties:
      AssignmentName:
        $ref: '#/definitions/IAMPolicyAssignmentName'
        description: The name of the assignment. This name must be unique within the AWS account.
      AssignmentId:
        $ref: '#/definitions/String'
        description: The ID for the assignment.
      AssignmentStatus:
        $ref: '#/definitions/AssignmentStatus'
        description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
      PolicyArn:
        $ref: '#/definitions/Arn'
        description: The ARN for the IAM policy that is applied to the QuickSight users and groups specified in this assignment.
      Identities:
        $ref: '#/definitions/IdentityMap'
        description: 'The QuickSight users, groups, or both that the IAM policy is assigned to.'
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  IdentityNameList:
    type: array
    items:
      $ref: '#/definitions/IdentityName'
  ConcurrentUpdatingException: {}
  CreateIngestionResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the data ingestion.
      IngestionId:
        $ref: '#/definitions/IngestionId'
        description: An ID for the ingestion.
      IngestionStatus:
        $ref: '#/definitions/IngestionStatus'
        description: The ingestion status.
      RequestId:
        $ref: '#/definitions/string'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  CreateTemplateResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN for the template.
      VersionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN for the template, including the version information of the first version.'
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID of the template.
      CreationStatus:
        $ref: '#/definitions/ResourceStatus'
        description: The template creation status.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  TemplateSourceAnalysis:
    type: object
    required:
      - Arn
      - DataSetReferences
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      DataSetReferences:
        $ref: '#/definitions/DataSetReferenceList'
        description: A structure containing information about the dataset references used as placeholders in the template.
    description: The source analysis of the template.
  TemplateSourceTemplate:
    type: object
    required:
      - Arn
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
    description: The source template of the template.
  CreateTemplateAliasResponse:
    type: object
    properties:
      TemplateAlias:
        $ref: '#/definitions/TemplateAlias'
        description: Information about the template alias.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  DeleteDashboardResponse:
    type: object
    properties:
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Secure Socket Layer (SSL) properties that apply for the resource.
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID of the dashboard.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  DeleteDataSetResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DeleteDataSourceResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the data source that you deleted.
      DataSourceId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DeleteGroupResponse:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DeleteGroupMembershipResponse:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DeleteIAMPolicyAssignmentResponse:
    type: object
    properties:
      AssignmentName:
        $ref: '#/definitions/IAMPolicyAssignmentName'
        description: 'The name of the assignment. '
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DeleteTemplateResponse:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: An ID for the template.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DeleteTemplateAliasResponse:
    type: object
    properties:
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: An ID for the template associated with the deletion.
      AliasName:
        $ref: '#/definitions/AliasName'
        description: The name for the template alias.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  DeleteUserResponse:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DeleteUserByPrincipalIdResponse:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeDashboardResponse:
    type: object
    properties:
      Dashboard:
        $ref: '#/definitions/Dashboard'
        description: Information about the dashboard.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of this request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  DescribeDashboardPermissionsResponse:
    type: object
    properties:
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the dashboard.
      DashboardArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A structure that contains the permissions for the dashboard.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  DescribeDataSetResponse:
    type: object
    properties:
      DataSet:
        $ref: '#/definitions/DataSet'
        description: Information on the dataset.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeDataSetPermissionsResponse:
    type: object
    properties:
      DataSetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A list of resource permissions on the dataset.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeDataSourceResponse:
    type: object
    properties:
      DataSource:
        $ref: '#/definitions/DataSource'
        description: The information on the data source.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeDataSourcePermissionsResponse:
    type: object
    properties:
      DataSourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the data source.
      DataSourceId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A list of resource permissions on the data source.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeGroupResponse:
    type: object
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: The name of the group.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeIAMPolicyAssignmentResponse:
    type: object
    properties:
      IAMPolicyAssignment:
        $ref: '#/definitions/IAMPolicyAssignment'
        description: Information describing the IAM policy assignment.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  InvalidNextTokenException: {}
  DescribeIngestionResponse:
    type: object
    properties:
      Ingestion:
        $ref: '#/definitions/Ingestion'
        description: Information about the ingestion.
      RequestId:
        $ref: '#/definitions/string'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeTemplateResponse:
    type: object
    properties:
      Template:
        $ref: '#/definitions/Template'
        description: The template structure for the object you want to describe.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeTemplateAliasResponse:
    type: object
    properties:
      TemplateAlias:
        $ref: '#/definitions/TemplateAlias'
        description: Information about the template alias.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  DescribeTemplatePermissionsResponse:
    type: object
    properties:
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the template.
      TemplateArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the template.
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: 'A list of resource permissions to be set on the template. '
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  DescribeUserResponse:
    type: object
    properties:
      User:
        $ref: '#/definitions/User'
        description: The user name.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  GetDashboardEmbedUrlResponse:
    type: object
    properties:
      EmbedUrl:
        $ref: '#/definitions/EmbeddingUrl'
        description: 'An URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes, and the resulting session is valid for 10 hours. The API provides the URL with an <code>auth_code</code> value that enables a single sign-on session. '
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  DomainNotWhitelistedException: {}
  QuickSightUserNotFoundException: {}
  IdentityTypeNotSupportedException: {}
  SessionLifetimeInMinutesInvalidException: {}
  ListDashboardVersionsResponse:
    type: object
    properties:
      DashboardVersionSummaryList:
        $ref: '#/definitions/DashboardVersionSummaryList'
        description: A structure that contains information about each version of the dashboard.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  ListDashboardsResponse:
    type: object
    properties:
      DashboardSummaryList:
        $ref: '#/definitions/DashboardSummaryList'
        description: A structure that contains all of the dashboards shared with the user. This structure provides basic information about the dashboards.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  ListDataSetsResponse:
    type: object
    properties:
      DataSetSummaries:
        $ref: '#/definitions/DataSetSummaryList'
        description: The list of dataset summaries.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListDataSourcesResponse:
    type: object
    properties:
      DataSources:
        $ref: '#/definitions/DataSourceList'
        description: A list of data sources.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListGroupMembershipsResponse:
    type: object
    properties:
      GroupMemberList:
        $ref: '#/definitions/GroupMemberList'
        description: The list of the members of the group.
      NextToken:
        $ref: '#/definitions/String'
        description: A pagination token that can be used in a subsequent request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListGroupsResponse:
    type: object
    properties:
      GroupList:
        $ref: '#/definitions/GroupList'
        description: The list of the groups.
      NextToken:
        $ref: '#/definitions/String'
        description: A pagination token that can be used in a subsequent request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListIAMPolicyAssignmentsResponse:
    type: object
    properties:
      IAMPolicyAssignments:
        $ref: '#/definitions/IAMPolicyAssignmentSummaryList'
        description: Information describing the IAM policy assignments.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListIAMPolicyAssignmentsForUserResponse:
    type: object
    properties:
      ActiveAssignments:
        $ref: '#/definitions/ActiveIAMPolicyAssignmentList'
        description: The active assignments for this user.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListIngestionsResponse:
    type: object
    properties:
      Ingestions:
        $ref: '#/definitions/Ingestions'
        description: A list of the ingestions.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The token for the next set of results, or null if there are no more results.'
      RequestId:
        $ref: '#/definitions/string'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListTagsForResourceResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListTemplateAliasesResponse:
    type: object
    properties:
      TemplateAliasList:
        $ref: '#/definitions/TemplateAliasList'
        description: A structure containing the list of the template's aliases.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
  ListTemplateVersionsResponse:
    type: object
    properties:
      TemplateVersionSummaryList:
        $ref: '#/definitions/TemplateVersionSummaryList'
        description: A structure containing a list of all the versions of the specified template.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  ListTemplatesResponse:
    type: object
    properties:
      TemplateSummaryList:
        $ref: '#/definitions/TemplateSummaryList'
        description: A structure containing information about the templates in the list.
      NextToken:
        $ref: '#/definitions/String'
        description: 'The token for the next set of results, or null if there are no more results.'
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  ListUserGroupsResponse:
    type: object
    properties:
      GroupList:
        $ref: '#/definitions/GroupList'
        description: The list of groups the user is a member of.
      NextToken:
        $ref: '#/definitions/String'
        description: A pagination token that can be used in a subsequent request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  ListUsersResponse:
    type: object
    properties:
      UserList:
        $ref: '#/definitions/UserList'
        description: The list of users.
      NextToken:
        $ref: '#/definitions/String'
        description: A pagination token that can be used in a subsequent request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  RegisterUserResponse:
    type: object
    properties:
      User:
        $ref: '#/definitions/User'
        description: The user name.
      UserInvitationUrl:
        $ref: '#/definitions/String'
        description: The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  TagResourceResponse:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UntagResourceResponse:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  TagKey:
    type: string
    minLength: 1
    maxLength: 128
  UpdateDashboardResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      VersionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN of the dashboard, including the version number.'
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the dashboard.
      CreationStatus:
        $ref: '#/definitions/ResourceStatus'
        description: The creation status of the request.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  UpdateDashboardPermissionsResponse:
    type: object
    properties:
      DashboardArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the dashboard.
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: Information about the permissions on the dashboard.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateDashboardPublishedVersionResponse:
    type: object
    properties:
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the dashboard.
      DashboardArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  UpdateDataSetResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: The ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
      IngestionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
      IngestionId:
        $ref: '#/definitions/ResourceId'
        description: 'The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.'
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateDataSetPermissionsResponse:
    type: object
    properties:
      DataSetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: The ID for the dataset whose permissions you want to update. This ID is unique per AWS Region for each AWS account.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateDataSourceResponse:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the data source.
      DataSourceId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
      UpdateStatus:
        $ref: '#/definitions/ResourceStatus'
        description: The update status of the data source's last update.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateDataSourcePermissionsResponse:
    type: object
    properties:
      DataSourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the data source.
      DataSourceId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateGroupResponse:
    type: object
    properties:
      Group:
        $ref: '#/definitions/Group'
        description: The name of the group.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateIAMPolicyAssignmentResponse:
    type: object
    properties:
      AssignmentName:
        $ref: '#/definitions/IAMPolicyAssignmentName'
        description: 'The name of the assignment. '
      AssignmentId:
        $ref: '#/definitions/String'
        description: The ID of the assignment.
      PolicyArn:
        $ref: '#/definitions/Arn'
        description: The ARN for the IAM policy applied to the QuickSight users and groups specified in this assignment.
      Identities:
        $ref: '#/definitions/IdentityMap'
        description: 'The QuickSight users, groups, or both that the IAM policy is assigned to.'
      AssignmentStatus:
        $ref: '#/definitions/AssignmentStatus'
        description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateTemplateResponse:
    type: object
    properties:
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the template.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the template.
      VersionArn:
        $ref: '#/definitions/Arn'
        description: 'The ARN for the template, including the version information of the first version.'
      CreationStatus:
        $ref: '#/definitions/ResourceStatus'
        description: The creation status of the template.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  UpdateTemplateAliasResponse:
    type: object
    properties:
      TemplateAlias:
        $ref: '#/definitions/TemplateAlias'
        description: The template alias.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
  UpdateTemplatePermissionsResponse:
    type: object
    properties:
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the template.
      TemplateArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the template.
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A list of resource permissions to be set on the template.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  UpdateUserResponse:
    type: object
    properties:
      User:
        $ref: '#/definitions/User'
        description: The Amazon QuickSight user.
      RequestId:
        $ref: '#/definitions/String'
        description: The AWS request ID for this operation.
      Status:
        $ref: '#/definitions/StatusCode'
        description: The HTTP status of the request.
  String:
    type: string
  ActionList:
    type: array
    items:
      $ref: '#/definitions/String'
    minItems: 1
    maxItems: 16
  IAMPolicyAssignmentName:
    type: string
    pattern: '(?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$'
    minLength: 1
  ActiveIAMPolicyAssignment:
    type: object
    properties:
      AssignmentName:
        $ref: '#/definitions/IAMPolicyAssignmentName'
        description: A name for the IAM policy assignment.
      PolicyArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
    description: The active AWS Identity and Access Management (IAM) policy assignment.
  ActiveIAMPolicyAssignmentList:
    type: array
    items:
      $ref: '#/definitions/ActiveIAMPolicyAssignment'
  DashboardBehavior:
    type: string
    enum:
      - ENABLED
      - DISABLED
  AliasName:
    type: string
    pattern: '[\w\-]+|(\$LATEST)|(\$PUBLISHED)'
    minLength: 1
    maxLength: 2048
  Domain:
    type: string
    minLength: 1
    maxLength: 64
  AssignmentStatus:
    type: string
    enum:
      - ENABLED
      - DRAFT
      - DISABLED
  WorkGroup:
    type: string
    minLength: 1
    maxLength: 128
  Host:
    type: string
    minLength: 1
    maxLength: 256
  Port:
    type: integer
    minimum: 1
    maximum: 65535
  Database:
    type: string
    minLength: 1
    maxLength: 128
  AwsAccountId:
    type: string
    pattern: '^[0-9]{12}$'
    minLength: 12
    maxLength: 12
  DataSetName:
    type: string
    minLength: 1
    maxLength: 128
  ColumnName:
    type: string
    minLength: 1
    maxLength: 128
  ColumnId:
    type: string
    minLength: 1
    maxLength: 64
  Expression:
    type: string
    minLength: 1
    maxLength: 4096
  CalculatedColumn:
    type: object
    required:
      - ColumnName
      - ColumnId
      - Expression
    properties:
      ColumnName:
        $ref: '#/definitions/ColumnName'
        description: Column name.
      ColumnId:
        $ref: '#/definitions/ColumnId'
        description: 'A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.'
      Expression:
        $ref: '#/definitions/Expression'
        description: An expression that defines the calculated column.
    description: A calculated column for a dataset.
  CalculatedColumnList:
    type: array
    items:
      $ref: '#/definitions/CalculatedColumn'
    minItems: 1
    maxItems: 128
  string:
    type: string
  IngestionId:
    type: string
    pattern: '^[a-zA-Z0-9-_]+$'
    minLength: 1
    maxLength: 128
  CancelIngestionRequest:
    type: object
    properties: {}
  StatusCode:
    type: integer
  ColumnDataType:
    type: string
    enum:
      - STRING
      - INTEGER
      - DECIMAL
      - DATETIME
  TypeCastFormat:
    type: string
    maxLength: 32
  CastColumnTypeOperation:
    type: object
    required:
      - ColumnName
      - NewColumnType
    properties:
      ColumnName:
        $ref: '#/definitions/ColumnName'
        description: Column name.
      NewColumnType:
        $ref: '#/definitions/ColumnDataType'
        description: New column data type.
      Format:
        $ref: '#/definitions/TypeCastFormat'
        description: 'When casting a column from string to datetime type, you can supply a string in a format supported by Amazon QuickSight to denote the source data format.'
    description: A transform operation that casts a column to a different type.
  Catalog:
    type: string
    maxLength: 128
  ClusterId:
    type: string
    minLength: 1
    maxLength: 64
  GeoSpatialColumnGroup:
    type: object
    required:
      - Name
      - CountryCode
      - Columns
    properties:
      Name:
        $ref: '#/definitions/ColumnGroupName'
        description: A display name for the hierarchy.
      CountryCode:
        $ref: '#/definitions/GeoSpatialCountryCode'
        description: Country code.
      Columns:
        $ref: '#/definitions/ColumnList'
        description: Columns in this hierarchy.
    description: Geospatial column group that denotes a hierarchy.
  ColumnGroupColumnSchema:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the column group's column schema.
    description: 'A structure describing the name, data type, and geographic role of the columns.'
  ColumnGroupColumnSchemaList:
    type: array
    items:
      $ref: '#/definitions/ColumnGroupColumnSchema'
    maxItems: 500
  ColumnGroupList:
    type: array
    items:
      $ref: '#/definitions/ColumnGroup'
    minItems: 1
    maxItems: 8
  ColumnGroupName:
    type: string
    minLength: 1
    maxLength: 64
  ColumnGroupSchema:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the column group schema.
      ColumnGroupColumnSchemaList:
        $ref: '#/definitions/ColumnGroupColumnSchemaList'
        description: A structure containing the list of schemas for column group columns.
    description: The column group schema.
  ColumnGroupSchemaList:
    type: array
    items:
      $ref: '#/definitions/ColumnGroupSchema'
    maxItems: 500
  ColumnList:
    type: array
    items:
      $ref: '#/definitions/ColumnName'
    minItems: 1
    maxItems: 16
  ColumnSchema:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: The name of the column schema.
      DataType:
        $ref: '#/definitions/String'
        description: The data type of the column schema.
      GeographicRole:
        $ref: '#/definitions/String'
        description: The geographic role of the column schema.
    description: The column schema.
  ColumnSchemaList:
    type: array
    items:
      $ref: '#/definitions/ColumnSchema'
    maxItems: 500
  GeoSpatialDataRole:
    type: string
    enum:
      - COUNTRY
      - STATE
      - COUNTY
      - CITY
      - POSTCODE
      - LONGITUDE
      - LATITUDE
  ColumnTag:
    type: object
    properties:
      ColumnGeographicRole:
        $ref: '#/definitions/GeoSpatialDataRole'
        description: A geospatial role for a column.
    description: 'A tag for a column in a <code>TagColumnOperation</code> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
  ColumnTagList:
    type: array
    items:
      $ref: '#/definitions/ColumnTag'
    minItems: 1
    maxItems: 16
  CreateColumnsOperation:
    type: object
    required:
      - Columns
    properties:
      Columns:
        $ref: '#/definitions/CalculatedColumnList'
        description: Calculated columns to create.
    description: A transform operation that creates calculated columns. Columns created in one such operation form a lexical closure.
  RestrictiveResourceId:
    type: string
    pattern: '[\w\-]+'
    minLength: 1
    maxLength: 2048
  DashboardName:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
    maxLength: 2048
  Parameters:
    type: object
    properties:
      StringParameters:
        $ref: '#/definitions/StringParameterList'
        description: String parameters.
      IntegerParameters:
        $ref: '#/definitions/IntegerParameterList'
        description: Integer parameters.
      DecimalParameters:
        $ref: '#/definitions/DecimalParameterList'
        description: Decimal parameters.
      DateTimeParameters:
        $ref: '#/definitions/DateTimeParameterList'
        description: DateTime parameters.
    description: Parameters.
  ResourcePermissionList:
    type: array
    items:
      $ref: '#/definitions/ResourcePermission'
    minItems: 1
    maxItems: 64
  DashboardSourceEntity:
    type: object
    properties:
      SourceTemplate:
        $ref: '#/definitions/DashboardSourceTemplate'
        description: Source template.
    description: Dashboard source entity.
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 200
  VersionDescription:
    type: string
    minLength: 1
    maxLength: 512
  DashboardPublishOptions:
    type: object
    properties:
      AdHocFilteringOption:
        $ref: '#/definitions/AdHocFilteringOption'
        description: Ad hoc (one-time) filtering option.
      ExportToCSVOption:
        $ref: '#/definitions/ExportToCSVOption'
        description: Export to .csv option.
      SheetControlsOption:
        $ref: '#/definitions/SheetControlsOption'
        description: Sheet controls option.
    description: Dashboard publish options.
  CreateDashboardRequest:
    type: object
    required:
      - Name
      - SourceEntity
    properties:
      Name:
        $ref: '#/definitions/DashboardName'
        description: The display name of the dashboard.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: 'A structure that contains the parameters of the dashboard. These are parameter overrides for a dashboard. A dashboard can have any type of parameters, and some parameters might accept multiple values. You can use the dashboard permissions structure described following to override two string parameters that accept multiple values. '
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A structure that contains the permissions of the dashboard. You can use this structure for granting permissions with principal and action information.
      SourceEntity:
        $ref: '#/definitions/DashboardSourceEntity'
        description: '<p>The source entity from which the dashboard is created. The source entity accepts the Amazon Resource Name (ARN) of the source template or analysis and also references the replacement datasets for the placeholders set when creating the template. The replacement datasets need to follow the same schema as the datasets for which placeholders were created when creating the template. </p> <p>If you are creating a dashboard from a source entity in a different AWS account, use the ARN of the source template.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
      VersionDescription:
        $ref: '#/definitions/VersionDescription'
        description: A description for the first version of the dashboard being created.
      DashboardPublishOptions:
        $ref: '#/definitions/DashboardPublishOptions'
        description: '<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .csv format isn''t enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. The sheet controls pane is collapsed by default when set to true. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>'
  ResourceStatus:
    type: string
    enum:
      - CREATION_IN_PROGRESS
      - CREATION_SUCCESSFUL
      - CREATION_FAILED
      - UPDATE_IN_PROGRESS
      - UPDATE_SUCCESSFUL
      - UPDATE_FAILED
  ResourceId:
    type: string
  ResourceName:
    type: string
    minLength: 1
    maxLength: 128
  PhysicalTableMap:
    type: object
    minProperties: 1
    maxProperties: 16
    additionalProperties:
      $ref: '#/definitions/PhysicalTable'
  LogicalTableMap:
    type: object
    minProperties: 1
    maxProperties: 32
    additionalProperties:
      $ref: '#/definitions/LogicalTable'
  DataSetImportMode:
    type: string
    enum:
      - SPICE
      - DIRECT_QUERY
  RowLevelPermissionDataSet:
    type: object
    required:
      - Arn
      - PermissionPolicy
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the permission dataset.
      PermissionPolicy:
        $ref: '#/definitions/RowLevelPermissionPolicy'
        description: Permission policy.
    description: The row-level security configuration for the dataset.
  CreateDataSetRequest:
    type: object
    required:
      - DataSetId
      - Name
      - PhysicalTableMap
      - ImportMode
    properties:
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: An ID for the dataset that you want to create. This ID is unique per AWS Region for each AWS account.
      Name:
        $ref: '#/definitions/ResourceName'
        description: The display name for the dataset.
      PhysicalTableMap:
        $ref: '#/definitions/PhysicalTableMap'
        description: Declares the physical tables that are available in the underlying data sources.
      LogicalTableMap:
        $ref: '#/definitions/LogicalTableMap'
        description: Configures the combination and transformation of the data from the physical tables.
      ImportMode:
        $ref: '#/definitions/DataSetImportMode'
        description: Indicates whether you want to import the data into SPICE.
      ColumnGroups:
        $ref: '#/definitions/ColumnGroupList'
        description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A list of resource permissions on the dataset.
      RowLevelPermissionDataSet:
        $ref: '#/definitions/RowLevelPermissionDataSet'
        description: The row-level security configuration for the data that you want to create.
      Tags:
        $ref: '#/definitions/TagList'
        description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.
  DataSourceType:
    type: string
    enum:
      - ADOBE_ANALYTICS
      - AMAZON_ELASTICSEARCH
      - ATHENA
      - AURORA
      - AURORA_POSTGRESQL
      - AWS_IOT_ANALYTICS
      - GITHUB
      - JIRA
      - MARIADB
      - MYSQL
      - POSTGRESQL
      - PRESTO
      - REDSHIFT
      - S3
      - SALESFORCE
      - SERVICENOW
      - SNOWFLAKE
      - SPARK
      - SQLSERVER
      - TERADATA
      - TWITTER
  DataSourceParameters:
    type: object
    properties:
      AmazonElasticsearchParameters:
        $ref: '#/definitions/AmazonElasticsearchParameters'
        description: Amazon Elasticsearch Service parameters.
      AthenaParameters:
        $ref: '#/definitions/AthenaParameters'
        description: Amazon Athena parameters.
      AuroraParameters:
        $ref: '#/definitions/AuroraParameters'
        description: Amazon Aurora MySQL parameters.
      AuroraPostgreSqlParameters:
        $ref: '#/definitions/AuroraPostgreSqlParameters'
        description: Aurora PostgreSQL parameters.
      AwsIotAnalyticsParameters:
        $ref: '#/definitions/AwsIotAnalyticsParameters'
        description: AWS IoT Analytics parameters.
      JiraParameters:
        $ref: '#/definitions/JiraParameters'
        description: Jira parameters.
      MariaDbParameters:
        $ref: '#/definitions/MariaDbParameters'
        description: MariaDB parameters.
      MySqlParameters:
        $ref: '#/definitions/MySqlParameters'
        description: MySQL parameters.
      PostgreSqlParameters:
        $ref: '#/definitions/PostgreSqlParameters'
        description: PostgreSQL parameters.
      PrestoParameters:
        $ref: '#/definitions/PrestoParameters'
        description: Presto parameters.
      RdsParameters:
        $ref: '#/definitions/RdsParameters'
        description: Amazon RDS parameters.
      RedshiftParameters:
        $ref: '#/definitions/RedshiftParameters'
        description: Amazon Redshift parameters.
      S3Parameters:
        $ref: '#/definitions/S3Parameters'
        description: S3 parameters.
      ServiceNowParameters:
        $ref: '#/definitions/ServiceNowParameters'
        description: ServiceNow parameters.
      SnowflakeParameters:
        $ref: '#/definitions/SnowflakeParameters'
        description: Snowflake parameters.
      SparkParameters:
        $ref: '#/definitions/SparkParameters'
        description: Spark parameters.
      SqlServerParameters:
        $ref: '#/definitions/SqlServerParameters'
        description: SQL Server parameters.
      TeradataParameters:
        $ref: '#/definitions/TeradataParameters'
        description: Teradata parameters.
      TwitterParameters:
        $ref: '#/definitions/TwitterParameters'
        description: Twitter parameters.
    description: 'The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
  DataSourceCredentials:
    type: object
    properties:
      CredentialPair:
        $ref: '#/definitions/CredentialPair'
        description: Credential pair.
    description: Data source credentials.
  VpcConnectionProperties:
    type: object
    required:
      - VpcConnectionArn
    properties:
      VpcConnectionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the VPC connection.
    description: VPC connection properties.
  SslProperties:
    type: object
    properties:
      DisableSsl:
        $ref: '#/definitions/Boolean'
        description: A Boolean option to control whether SSL should be disabled.
    description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying data source.
  CreateDataSourceRequest:
    type: object
    required:
      - DataSourceId
      - Name
      - Type
    properties:
      DataSourceId:
        $ref: '#/definitions/ResourceId'
        description: 'An ID for the data source. This ID is unique per AWS Region for each AWS account. '
      Name:
        $ref: '#/definitions/ResourceName'
        description: A display name for the data source.
      Type:
        $ref: '#/definitions/DataSourceType'
        description: 'The type of the data source. Currently, the supported types for this operation are: <code>ATHENA, AURORA, AURORA_POSTGRESQL, MARIADB, MYSQL, POSTGRESQL, PRESTO, REDSHIFT, S3, SNOWFLAKE, SPARK, SQLSERVER, TERADATA</code>. Use <code>ListDataSources</code> to return a list of all data sources.'
      DataSourceParameters:
        $ref: '#/definitions/DataSourceParameters'
        description: The parameters that QuickSight uses to connect to your underlying source.
      Credentials:
        $ref: '#/definitions/DataSourceCredentials'
        description: 'The credentials QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.'
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A list of resource permissions on the data source.
      VpcConnectionProperties:
        $ref: '#/definitions/VpcConnectionProperties'
        description: Use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.
      SslProperties:
        $ref: '#/definitions/SslProperties'
        description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.
      Tags:
        $ref: '#/definitions/TagList'
        description: Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
  GroupMemberName:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
    maxLength: 256
  GroupName:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
  Namespace:
    type: string
    pattern: '^[a-zA-Z0-9._-]*$'
    maxLength: 64
  CreateGroupMembershipRequest:
    type: object
    properties: {}
  GroupMember:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the group member (user).
      MemberName:
        $ref: '#/definitions/GroupMemberName'
        description: The name of the group member (user).
    description: 'A member of an Amazon QuickSight group. Currently, group members must be users. Groups can''t be members of another group. .'
  GroupDescription:
    type: string
    minLength: 1
    maxLength: 512
  CreateGroupRequest:
    type: object
    required:
      - GroupName
    properties:
      GroupName:
        $ref: '#/definitions/GroupName'
        description: A name for the group that you want to create.
      Description:
        $ref: '#/definitions/GroupDescription'
        description: A description for the group that you want to create.
    description: 'The request object for this operation. '
  Group:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the group.
      GroupName:
        $ref: '#/definitions/GroupName'
        description: The name of the group.
      Description:
        $ref: '#/definitions/GroupDescription'
        description: The group description.
      PrincipalId:
        $ref: '#/definitions/String'
        description: The principal ID of the group.
    description: 'A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. Currently, an Amazon QuickSight subscription can''t contain more than 500 Amazon QuickSight groups.'
  IdentityMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/IdentityNameList'
  CreateIAMPolicyAssignmentRequest:
    type: object
    required:
      - AssignmentName
      - AssignmentStatus
    properties:
      AssignmentName:
        $ref: '#/definitions/IAMPolicyAssignmentName'
        description: The name of the assignment. It must be unique within an AWS account.
      AssignmentStatus:
        $ref: '#/definitions/AssignmentStatus'
        description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
      PolicyArn:
        $ref: '#/definitions/Arn'
        description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
      Identities:
        $ref: '#/definitions/IdentityMap'
        description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
  CreateIngestionRequest:
    type: object
    properties: {}
  IngestionStatus:
    type: string
    enum:
      - INITIALIZED
      - QUEUED
      - RUNNING
      - FAILED
      - COMPLETED
      - CANCELLED
  VersionNumber:
    type: integer
    minimum: 1
  CreateTemplateAliasRequest:
    type: object
    required:
      - TemplateVersionNumber
    properties:
      TemplateVersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: The version number of the template.
  TemplateAlias:
    type: object
    properties:
      AliasName:
        $ref: '#/definitions/AliasName'
        description: The display name of the template alias.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the template alias.
      TemplateVersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: The version number of the template alias.
    description: The template alias.
  TemplateName:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
    maxLength: 2048
  TemplateSourceEntity:
    type: object
    properties:
      SourceAnalysis:
        $ref: '#/definitions/TemplateSourceAnalysis'
        description: 'The source analysis, if it is based on an analysis.'
      SourceTemplate:
        $ref: '#/definitions/TemplateSourceTemplate'
        description: 'The source template, if it is based on an template.'
    description: The source entity of the template.
  CreateTemplateRequest:
    type: object
    required:
      - SourceEntity
    properties:
      Name:
        $ref: '#/definitions/TemplateName'
        description: A display name for the template.
      Permissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: 'A list of resource permissions to be set on the template. '
      SourceEntity:
        $ref: '#/definitions/TemplateSourceEntity'
        description: 'The Amazon Resource Name (ARN) of the source entity from which this template is being created. Currently, you can create a template from an analysis or another template. If the ARN is for an analysis, include its dataset references. '
      Tags:
        $ref: '#/definitions/TagList'
        description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
      VersionDescription:
        $ref: '#/definitions/VersionDescription'
        description: 'A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
  Username:
    type: string
    minLength: 1
    maxLength: 64
  Password:
    type: string
    minLength: 1
    maxLength: 1024
  CustomSqlName:
    type: string
    minLength: 1
    maxLength: 64
  SqlQuery:
    type: string
    minLength: 1
    maxLength: 65536
  InputColumnList:
    type: array
    items:
      $ref: '#/definitions/InputColumn'
    minItems: 1
    maxItems: 2048
  CustomSql:
    type: object
    required:
      - DataSourceArn
      - Name
      - SqlQuery
    properties:
      DataSourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the data source.
      Name:
        $ref: '#/definitions/CustomSqlName'
        description: A display name for the SQL query result.
      SqlQuery:
        $ref: '#/definitions/SqlQuery'
        description: The SQL query.
      Columns:
        $ref: '#/definitions/InputColumnList'
        description: The column schema from the SQL query result set.
    description: A physical table type built from the results of the custom SQL query.
  DashboardVersion:
    type: object
    properties:
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this dashboard version was created.
      Errors:
        $ref: '#/definitions/DashboardErrorList'
        description: Errors.
      VersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: Version number.
      Status:
        $ref: '#/definitions/ResourceStatus'
        description: The HTTP status of the request.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      SourceEntityArn:
        $ref: '#/definitions/Arn'
        description: Source entity ARN.
      Description:
        $ref: '#/definitions/VersionDescription'
        description: Description.
    description: Dashboard version.
  Timestamp:
    type: string
    format: date-time
  Dashboard:
    type: object
    properties:
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: Dashboard ID.
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      Name:
        $ref: '#/definitions/DashboardName'
        description: A display name for the dataset.
      Version:
        $ref: '#/definitions/DashboardVersion'
        description: Version.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this dataset was created.
      LastPublishedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this dataset was published.
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this dataset was updated.
    description: Dashboard.
  DashboardErrorType:
    type: string
    enum:
      - DATA_SET_NOT_FOUND
      - INTERNAL_FAILURE
      - PARAMETER_VALUE_INCOMPATIBLE
      - PARAMETER_TYPE_INVALID
      - PARAMETER_NOT_FOUND
      - COLUMN_TYPE_MISMATCH
      - COLUMN_GEOGRAPHIC_ROLE_MISMATCH
      - COLUMN_REPLACEMENT_MISSING
  NonEmptyString:
    type: string
    pattern: .*\S.*
  DashboardError:
    type: object
    properties:
      Type:
        $ref: '#/definitions/DashboardErrorType'
        description: Type.
      Message:
        $ref: '#/definitions/NonEmptyString'
        description: Message.
    description: Dashboard error.
  DashboardErrorList:
    type: array
    items:
      $ref: '#/definitions/DashboardError'
    minItems: 1
  DataSetReferenceList:
    type: array
    items:
      $ref: '#/definitions/DataSetReference'
    minItems: 1
  DashboardSummary:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      DashboardId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: Dashboard ID.
      Name:
        $ref: '#/definitions/DashboardName'
        description: A display name for the dashboard.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this dashboard was created.
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this dashboard was updated.
      PublishedVersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: Published version number.
      LastPublishedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this dashboard was published.
    description: Dashboard summary.
  DashboardSummaryList:
    type: array
    items:
      $ref: '#/definitions/DashboardSummary'
    maxItems: 100
  DashboardUIState:
    type: string
    enum:
      - EXPANDED
      - COLLAPSED
  DashboardVersionSummary:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this dashboard version was created.
      VersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: Version number.
      Status:
        $ref: '#/definitions/ResourceStatus'
        description: The HTTP status of the request.
      SourceEntityArn:
        $ref: '#/definitions/Arn'
        description: Source entity ARN.
      Description:
        $ref: '#/definitions/VersionDescription'
        description: Description.
    description: Dashboard version summary.
  DashboardVersionSummaryList:
    type: array
    items:
      $ref: '#/definitions/DashboardVersionSummary'
    maxItems: 100
  OutputColumnList:
    type: array
    items:
      $ref: '#/definitions/OutputColumn'
  Long:
    type: integer
  DataSet:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the dataset.
      Name:
        $ref: '#/definitions/ResourceName'
        description: A display name for the dataset.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this dataset was created.
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this dataset was updated.
      PhysicalTableMap:
        $ref: '#/definitions/PhysicalTableMap'
        description: Declares the physical tables that are available in the underlying data sources.
      LogicalTableMap:
        $ref: '#/definitions/LogicalTableMap'
        description: Configures the combination and transformation of the data from the physical tables.
      OutputColumns:
        $ref: '#/definitions/OutputColumnList'
        description: 'The list of columns after all transforms. These columns are available in templates, analyses, and dashboards.'
      ImportMode:
        $ref: '#/definitions/DataSetImportMode'
        description: Indicates whether you want to import the data into SPICE.
      ConsumedSpiceCapacityInBytes:
        $ref: '#/definitions/Long'
        description: The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't imported into SPICE.
      ColumnGroups:
        $ref: '#/definitions/ColumnGroupList'
        description: 'Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.'
      RowLevelPermissionDataSet:
        $ref: '#/definitions/RowLevelPermissionDataSet'
        description: The row-level security configuration for the dataset.
    description: Dataset.
  DataSetSchema:
    type: object
    properties:
      ColumnSchemaList:
        $ref: '#/definitions/ColumnSchemaList'
        description: A structure containing the list of column schemas.
    description: Dataset schema.
  DataSetConfiguration:
    type: object
    properties:
      Placeholder:
        $ref: '#/definitions/String'
        description: Placeholder.
      DataSetSchema:
        $ref: '#/definitions/DataSetSchema'
        description: Dataset schema.
      ColumnGroupSchemaList:
        $ref: '#/definitions/ColumnGroupSchemaList'
        description: A structure containing the list of column group schemas.
    description: Dataset configuration.
  DataSetConfigurationList:
    type: array
    items:
      $ref: '#/definitions/DataSetConfiguration'
    maxItems: 30
  DataSetReference:
    type: object
    required:
      - DataSetPlaceholder
      - DataSetArn
    properties:
      DataSetPlaceholder:
        $ref: '#/definitions/NonEmptyString'
        description: Dataset placeholder.
      DataSetArn:
        $ref: '#/definitions/Arn'
        description: Dataset Amazon Resource Name (ARN).
    description: Dataset reference.
  DataSetSummary:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      DataSetId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the dataset.
      Name:
        $ref: '#/definitions/ResourceName'
        description: A display name for the dataset.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this dataset was created.
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this dataset was updated.
      ImportMode:
        $ref: '#/definitions/DataSetImportMode'
        description: Indicates whether you want to import the data into SPICE.
      RowLevelPermissionDataSet:
        $ref: '#/definitions/RowLevelPermissionDataSet'
        description: The row-level security configuration for the dataset.
    description: Dataset summary.
  DataSetSummaryList:
    type: array
    items:
      $ref: '#/definitions/DataSetSummary'
  DataSourceErrorInfo:
    type: object
    properties:
      Type:
        $ref: '#/definitions/DataSourceErrorInfoType'
        description: Error type.
      Message:
        $ref: '#/definitions/String'
        description: Error message.
    description: Error information for the data source creation or update.
  DataSource:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the data source.
      DataSourceId:
        $ref: '#/definitions/ResourceId'
        description: The ID of the data source. This ID is unique per AWS Region for each AWS account.
      Name:
        $ref: '#/definitions/ResourceName'
        description: A display name for the data source.
      Type:
        $ref: '#/definitions/DataSourceType'
        description: The type of the data source. This type indicates which database engine the data source connects to.
      Status:
        $ref: '#/definitions/ResourceStatus'
        description: The HTTP status of the request.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this data source was created.
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this data source was updated.
      DataSourceParameters:
        $ref: '#/definitions/DataSourceParameters'
        description: 'The parameters that Amazon QuickSight uses to connect to your underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
      VpcConnectionProperties:
        $ref: '#/definitions/VpcConnectionProperties'
        description: The VPC connection information. You need to use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.
      SslProperties:
        $ref: '#/definitions/SslProperties'
        description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.
      ErrorInfo:
        $ref: '#/definitions/DataSourceErrorInfo'
        description: Error information from the last update or the creation of the data source.
    description: The structure of a data source.
  DataSourceErrorInfoType:
    type: string
    enum:
      - TIMEOUT
      - ENGINE_VERSION_NOT_SUPPORTED
      - UNKNOWN_HOST
      - GENERIC_SQL_FAILURE
      - CONFLICT
      - UNKNOWN
  DataSourceList:
    type: array
    items:
      $ref: '#/definitions/DataSource'
  TimestampList:
    type: array
    items:
      $ref: '#/definitions/Timestamp'
  DateTimeParameter:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/NonEmptyString'
        description: A display name for the dataset.
      Values:
        $ref: '#/definitions/TimestampList'
        description: Values.
    description: Date time parameter.
  DoubleList:
    type: array
    items:
      $ref: '#/definitions/Double'
  DecimalParameter:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/NonEmptyString'
        description: A display name for the dataset.
      Values:
        $ref: '#/definitions/DoubleList'
        description: Values.
    description: Decimal parameter.
  DeleteDashboardRequest:
    type: object
    properties: {}
  DeleteDataSetRequest:
    type: object
    properties: {}
  DeleteDataSourceRequest:
    type: object
    properties: {}
  DeleteGroupMembershipRequest:
    type: object
    properties: {}
  DeleteGroupRequest:
    type: object
    properties: {}
  DeleteIAMPolicyAssignmentRequest:
    type: object
    properties: {}
  DeleteTemplateAliasRequest:
    type: object
    properties: {}
  DeleteTemplateRequest:
    type: object
    properties: {}
  DeleteUserByPrincipalIdRequest:
    type: object
    properties: {}
    description: <p/>
  UserName:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
  DeleteUserRequest:
    type: object
    properties: {}
  Delimiter:
    type: string
    minLength: 1
    maxLength: 1
  DescribeDashboardPermissionsRequest:
    type: object
    properties: {}
  DescribeDashboardRequest:
    type: object
    properties: {}
  DescribeDataSetPermissionsRequest:
    type: object
    properties: {}
  DescribeDataSetRequest:
    type: object
    properties: {}
  DescribeDataSourcePermissionsRequest:
    type: object
    properties: {}
  DescribeDataSourceRequest:
    type: object
    properties: {}
  DescribeGroupRequest:
    type: object
    properties: {}
  DescribeIAMPolicyAssignmentRequest:
    type: object
    properties: {}
  IAMPolicyAssignment:
    type: object
    properties:
      AwsAccountId:
        $ref: '#/definitions/AwsAccountId'
        description: The AWS account ID.
      AssignmentId:
        $ref: '#/definitions/String'
        description: Assignment ID.
      AssignmentName:
        $ref: '#/definitions/IAMPolicyAssignmentName'
        description: Assignment name.
      PolicyArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the IAM policy.
      Identities:
        $ref: '#/definitions/IdentityMap'
        description: Identities.
      AssignmentStatus:
        $ref: '#/definitions/AssignmentStatus'
        description: Assignment status.
    description: An IAM policy assignment.
  DescribeIngestionRequest:
    type: object
    properties: {}
  Ingestion:
    type: object
    required:
      - Arn
      - IngestionStatus
      - CreatedTime
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the resource.
      IngestionId:
        $ref: '#/definitions/IngestionId'
        description: Ingestion ID.
      IngestionStatus:
        $ref: '#/definitions/IngestionStatus'
        description: Ingestion status.
      ErrorInfo:
        $ref: '#/definitions/ErrorInfo'
        description: Error information for this ingestion.
      RowInfo:
        $ref: '#/definitions/RowInfo'
      QueueInfo:
        $ref: '#/definitions/QueueInfo'
      CreatedTime:
        $ref: '#/definitions/timestamp'
        description: The time that this ingestion started.
      IngestionTimeInSeconds:
        $ref: '#/definitions/long'
        description: 'The time that this ingestion took, measured in seconds.'
      IngestionSizeInBytes:
        $ref: '#/definitions/long'
        description: 'The size of the data ingested, in bytes.'
      RequestSource:
        $ref: '#/definitions/IngestionRequestSource'
        description: Event source for this ingestion.
      RequestType:
        $ref: '#/definitions/IngestionRequestType'
        description: Type of this ingestion.
    description: Information about the SPICE ingestion for a dataset.
  DescribeTemplateAliasRequest:
    type: object
    properties: {}
  DescribeTemplatePermissionsRequest:
    type: object
    properties: {}
  DescribeTemplateRequest:
    type: object
    properties: {}
  Template:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the template.
      Name:
        $ref: '#/definitions/TemplateName'
        description: The display name of the template.
      Version:
        $ref: '#/definitions/TemplateVersion'
        description: A structure describing the versions of the template.
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID for the template. This is unique per AWS Region for each AWS account.
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: Time when this was last updated.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: Time when this was created.
    description: <p>A template object. A <i>template</i> is an entity in QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p> <p>You can share templates across AWS accounts by allowing users in other AWS accounts to create a template or a dashboard from an existing template.</p>
  DescribeUserRequest:
    type: object
    properties: {}
  User:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the user.
      UserName:
        $ref: '#/definitions/UserName'
        description: The user's user name.
      Email:
        $ref: '#/definitions/String'
        description: The user's email address.
      Role:
        $ref: '#/definitions/UserRole'
        description: '<p>The Amazon QuickSight role for the user. The user role can be one of the following:.</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn''t currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn''t currently available for use.</p> </li> </ul>'
      IdentityType:
        $ref: '#/definitions/IdentityType'
        description: The type of identity authentication used by the user.
      Active:
        $ref: '#/definitions/Boolean'
        description: 'The active status of user. When you create an Amazon QuickSight user that’s not an IAM user or an Active Directory user, that user is inactive until they sign in and provide a password.'
      PrincipalId:
        $ref: '#/definitions/String'
        description: The principal ID of the user.
    description: 'A registered user of Amazon QuickSight. Currently, an Amazon QuickSight subscription can''t contain more than 20 million users.'
  Double:
    type: number
    format: double
  EmbeddingUrl:
    type: string
    format: password
  IngestionErrorType:
    type: string
    enum:
      - FAILURE_TO_ASSUME_ROLE
      - INGESTION_SUPERSEDED
      - INGESTION_CANCELED
      - DATA_SET_DELETED
      - DATA_SET_NOT_SPICE
      - S3_UPLOADED_FILE_DELETED
      - S3_MANIFEST_ERROR
      - DATA_TOLERANCE_EXCEPTION
      - SPICE_TABLE_NOT_FOUND
      - DATA_SET_SIZE_LIMIT_EXCEEDED
      - ROW_SIZE_LIMIT_EXCEEDED
      - ACCOUNT_CAPACITY_LIMIT_EXCEEDED
      - CUSTOMER_ERROR
      - DATA_SOURCE_NOT_FOUND
      - IAM_ROLE_NOT_AVAILABLE
      - CONNECTION_FAILURE
      - SQL_TABLE_NOT_FOUND
      - PERMISSION_DENIED
      - SSL_CERTIFICATE_VALIDATION_FAILURE
      - OAUTH_TOKEN_FAILURE
      - SOURCE_API_LIMIT_EXCEEDED_FAILURE
      - PASSWORD_AUTHENTICATION_FAILURE
      - SQL_SCHEMA_MISMATCH_ERROR
      - INVALID_DATE_FORMAT
      - INVALID_DATAPREP_SYNTAX
      - SOURCE_RESOURCE_LIMIT_EXCEEDED
      - SQL_INVALID_PARAMETER_VALUE
      - QUERY_TIMEOUT
      - SQL_NUMERIC_OVERFLOW
      - UNRESOLVABLE_HOST
      - UNROUTABLE_HOST
      - SQL_EXCEPTION
      - S3_FILE_INACCESSIBLE
      - IOT_FILE_NOT_FOUND
      - IOT_DATA_SET_FILE_EMPTY
      - INVALID_DATA_SOURCE_CONFIG
      - DATA_SOURCE_AUTH_FAILED
      - DATA_SOURCE_CONNECTION_FAILED
      - FAILURE_TO_PROCESS_JSON_FILE
      - INTERNAL_SERVICE_ERROR
  ErrorInfo:
    type: object
    properties:
      Type:
        $ref: '#/definitions/IngestionErrorType'
        description: Error type.
      Message:
        $ref: '#/definitions/string'
        description: Error message.
    description: Error information for the SPICE ingestion of a dataset.
  FileFormat:
    type: string
    enum:
      - CSV
      - TSV
      - CLF
      - ELF
      - XLSX
      - JSON
  FilterOperation:
    type: object
    required:
      - ConditionExpression
    properties:
      ConditionExpression:
        $ref: '#/definitions/Expression'
        description: An expression that must evaluate to a Boolean value. Rows for which the expression evaluates to true are kept in the dataset.
    description: A transform operation that filters rows based on a condition.
  GeoSpatialCountryCode:
    type: string
    enum:
      - US
  IdentityType:
    type: string
    enum:
      - IAM
      - QUICKSIGHT
  SessionLifetimeInMinutes:
    type: integer
    minimum: 15
    maximum: 600
  boolean:
    type: boolean
  GetDashboardEmbedUrlRequest:
    type: object
    properties: {}
  GroupList:
    type: array
    items:
      $ref: '#/definitions/Group'
  GroupMemberList:
    type: array
    items:
      $ref: '#/definitions/GroupMember'
  IAMPolicyAssignmentSummary:
    type: object
    properties:
      AssignmentName:
        $ref: '#/definitions/IAMPolicyAssignmentName'
        description: Assignment name.
      AssignmentStatus:
        $ref: '#/definitions/AssignmentStatus'
        description: Assignment status.
    description: IAM policy assignment summary.
  IAMPolicyAssignmentSummaryList:
    type: array
    items:
      $ref: '#/definitions/IAMPolicyAssignmentSummary'
  IdentityName:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
  RowInfo:
    type: object
    properties:
      RowsIngested:
        $ref: '#/definitions/long'
        description: The number of rows that were ingested.
      RowsDropped:
        $ref: '#/definitions/long'
        description: The number of rows that were not ingested.
    description: Information about rows for a data set SPICE ingestion.
  QueueInfo:
    type: object
    required:
      - WaitingOnIngestion
      - QueuedIngestion
    properties:
      WaitingOnIngestion:
        $ref: '#/definitions/string'
        description: The ID of the queued ingestion.
      QueuedIngestion:
        $ref: '#/definitions/string'
        description: The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.
    description: Information about a queued dataset SPICE ingestion.
  timestamp:
    type: string
    format: date-time
  long:
    type: integer
  IngestionRequestSource:
    type: string
    enum:
      - MANUAL
      - SCHEDULED
  IngestionRequestType:
    type: string
    enum:
      - INITIAL_INGESTION
      - EDIT
      - INCREMENTAL_REFRESH
      - FULL_REFRESH
  IngestionMaxResults:
    type: integer
    minimum: 1
    maximum: 100
  Ingestions:
    type: array
    items:
      $ref: '#/definitions/Ingestion'
  InputColumnDataType:
    type: string
    enum:
      - STRING
      - INTEGER
      - DECIMAL
      - DATETIME
      - BIT
      - BOOLEAN
      - JSON
  InputColumn:
    type: object
    required:
      - Name
      - Type
    properties:
      Name:
        $ref: '#/definitions/ColumnName'
        description: The name of this column in the underlying data source.
      Type:
        $ref: '#/definitions/InputColumnDataType'
        description: The data type of the column.
    description: Metadata for a column that is used as the input of a transform operation.
  InstanceId:
    type: string
    minLength: 1
    maxLength: 64
  LongList:
    type: array
    items:
      $ref: '#/definitions/Long'
  IntegerParameter:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/NonEmptyString'
        description: A display name for the dataset.
      Values:
        $ref: '#/definitions/LongList'
        description: Values.
    description: Integer parameter.
  SiteBaseUrl:
    type: string
    minLength: 1
    maxLength: 1024
  LogicalTableId:
    type: string
    pattern: '[0-9a-zA-Z-]*'
    minLength: 1
    maxLength: 64
  JoinType:
    type: string
    enum:
      - INNER
      - OUTER
      - LEFT
      - RIGHT
  OnClause:
    type: string
    minLength: 1
    maxLength: 512
  JoinInstruction:
    type: object
    required:
      - LeftOperand
      - RightOperand
      - Type
      - OnClause
    properties:
      LeftOperand:
        $ref: '#/definitions/LogicalTableId'
        description: Left operand.
      RightOperand:
        $ref: '#/definitions/LogicalTableId'
        description: Right operand.
      Type:
        $ref: '#/definitions/JoinType'
        description: Type.
      OnClause:
        $ref: '#/definitions/OnClause'
        description: On Clause.
    description: Join instruction.
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  ListDashboardVersionsRequest:
    type: object
    properties: {}
  ListDashboardsRequest:
    type: object
    properties: {}
  ListDataSetsRequest:
    type: object
    properties: {}
  ListDataSourcesRequest:
    type: object
    properties: {}
  ListGroupMembershipsRequest:
    type: object
    properties: {}
  ListGroupsRequest:
    type: object
    properties: {}
  ListIAMPolicyAssignmentsForUserRequest:
    type: object
    properties: {}
  ListIAMPolicyAssignmentsRequest:
    type: object
    properties:
      AssignmentStatus:
        $ref: '#/definitions/AssignmentStatus'
        description: The status of the assignments.
  ListIngestionsRequest:
    type: object
    properties: {}
  ListTagsForResourceRequest:
    type: object
    properties: {}
  ListTemplateAliasesRequest:
    type: object
    properties: {}
  TemplateAliasList:
    type: array
    items:
      $ref: '#/definitions/TemplateAlias'
    maxItems: 100
  ListTemplateVersionsRequest:
    type: object
    properties: {}
  TemplateVersionSummaryList:
    type: array
    items:
      $ref: '#/definitions/TemplateVersionSummary'
    maxItems: 100
  ListTemplatesRequest:
    type: object
    properties: {}
  TemplateSummaryList:
    type: array
    items:
      $ref: '#/definitions/TemplateSummary'
    maxItems: 100
  ListUserGroupsRequest:
    type: object
    properties: {}
  ListUsersRequest:
    type: object
    properties: {}
  UserList:
    type: array
    items:
      $ref: '#/definitions/User'
  LogicalTableAlias:
    type: string
    minLength: 1
    maxLength: 64
  TransformOperationList:
    type: array
    items:
      $ref: '#/definitions/TransformOperation'
    minItems: 1
    maxItems: 2048
  LogicalTableSource:
    type: object
    properties:
      JoinInstruction:
        $ref: '#/definitions/JoinInstruction'
        description: Specifies the result of a join of two logical tables.
      PhysicalTableId:
        $ref: '#/definitions/PhysicalTableId'
        description: Physical table ID.
    description: 'Information about the source of a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
  PhysicalTableId:
    type: string
    pattern: '[0-9a-zA-Z-]*'
    minLength: 1
    maxLength: 64
  S3Bucket:
    type: string
    minLength: 1
    maxLength: 1024
  S3Key:
    type: string
    minLength: 1
    maxLength: 1024
  ManifestFileLocation:
    type: object
    required:
      - Bucket
      - Key
    properties:
      Bucket:
        $ref: '#/definitions/S3Bucket'
        description: Amazon S3 bucket.
      Key:
        $ref: '#/definitions/S3Key'
        description: Amazon S3 key that identifies an object.
    description: Amazon S3 manifest file location.
  OptionalPort:
    type: integer
    minimum: 0
    maximum: 65535
  OutputColumn:
    type: object
    properties:
      Name:
        $ref: '#/definitions/ColumnName'
        description: A display name for the dataset.
      Type:
        $ref: '#/definitions/ColumnDataType'
        description: Type.
    description: Output column.
  RelationalTable:
    type: object
    required:
      - DataSourceArn
      - Name
      - InputColumns
    properties:
      DataSourceArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) for the data source.
      Schema:
        $ref: '#/definitions/RelationalTableSchema'
        description: The schema name. This name applies to certain relational database engines.
      Name:
        $ref: '#/definitions/RelationalTableName'
        description: The name of the relational table.
      InputColumns:
        $ref: '#/definitions/InputColumnList'
        description: The column schema of the table.
    description: A physical table type for relational data sources.
  S3Source:
    type: object
    required:
      - DataSourceArn
      - InputColumns
    properties:
      DataSourceArn:
        $ref: '#/definitions/Arn'
        description: The amazon Resource Name (ARN) for the data source.
      UploadSettings:
        $ref: '#/definitions/UploadSettings'
        description: Information about the format for the S3 source file or files.
      InputColumns:
        $ref: '#/definitions/InputColumnList'
        description: A physical table type for as S3 data source.
    description: A physical table type for as S3 data source.
  PositiveInteger:
    type: integer
    minimum: 1
  Principal:
    type: string
    minLength: 1
    maxLength: 256
  ProjectedColumnList:
    type: array
    items:
      $ref: '#/definitions/String'
    minItems: 1
    maxItems: 2000
  ProjectOperation:
    type: object
    required:
      - ProjectedColumns
    properties:
      ProjectedColumns:
        $ref: '#/definitions/ProjectedColumnList'
        description: Projected columns.
    description: A transform operation that projects columns. Operations that come after a projection can only refer to projected columns.
  Query:
    type: string
    minLength: 1
    maxLength: 256
  UserRole:
    type: string
    enum:
      - ADMIN
      - AUTHOR
      - READER
      - RESTRICTED_AUTHOR
      - RESTRICTED_READER
  RoleSessionName:
    type: string
    pattern: '[\w+=.@-]*'
    minLength: 2
    maxLength: 64
  RegisterUserRequest:
    type: object
    required:
      - IdentityType
      - Email
      - UserRole
    properties:
      IdentityType:
        $ref: '#/definitions/IdentityType'
        description: '<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>'
      Email:
        $ref: '#/definitions/String'
        description: The email address of the user that you want to register.
      UserRole:
        $ref: '#/definitions/UserRole'
        description: '<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn''t currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn''t currently available for use.</p> </li> </ul>'
      IamArn:
        $ref: '#/definitions/String'
        description: 'The ARN of the IAM user or role that you are registering with Amazon QuickSight. '
      SessionName:
        $ref: '#/definitions/RoleSessionName'
        description: 'You need to use this parameter only when you register one or more users using an assumed IAM role. You don''t need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href="https://docs.aws.example.com/cli/latest/reference/sts/assume-role.html"> <code>assume-role</code> </a> in the <i>AWS CLI Reference.</i> '
      UserName:
        $ref: '#/definitions/UserName'
        description: The Amazon QuickSight user name that you want to create for the user you are registering.
  RelationalTableSchema:
    type: string
    maxLength: 64
  RelationalTableName:
    type: string
    minLength: 1
    maxLength: 64
  RenameColumnOperation:
    type: object
    required:
      - ColumnName
      - NewColumnName
    properties:
      ColumnName:
        $ref: '#/definitions/ColumnName'
        description: The name of the column to be renamed.
      NewColumnName:
        $ref: '#/definitions/ColumnName'
        description: The new name for the column.
    description: A transform operation that renames a column.
  UploadSettings:
    type: object
    properties:
      Format:
        $ref: '#/definitions/FileFormat'
        description: File format.
      StartFromRow:
        $ref: '#/definitions/PositiveInteger'
        description: A row number to start reading data from.
      ContainsHeader:
        $ref: '#/definitions/Boolean'
        description: 'Whether the file has a header row, or the files each have a header row.'
      TextQualifier:
        $ref: '#/definitions/TextQualifier'
        description: Text qualifier.
      Delimiter:
        $ref: '#/definitions/Delimiter'
        description: The delimiter between values in the file.
    description: Information about the format for a source file or files.
  Warehouse:
    type: string
    maxLength: 128
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  StringParameter:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/NonEmptyString'
        description: A display name for the dataset.
      Values:
        $ref: '#/definitions/StringList'
        description: Values.
    description: String parameter.
  TagValue:
    type: string
    minLength: 1
    maxLength: 256
  TagColumnOperation:
    type: object
    required:
      - ColumnName
      - Tags
    properties:
      ColumnName:
        $ref: '#/definitions/ColumnName'
        description: The column that this operation acts on.
      Tags:
        $ref: '#/definitions/ColumnTagList'
        description: '<p>The dataset column tag, currently only used for geospatial type tagging. .</p> <note> <p>This is not tags for the AWS tagging feature. .</p> </note>'
    description: A transform operation that tags a column with additional information.
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 200
  TagResourceRequest:
    type: object
    required:
      - Tags
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
  TemplateVersion:
    type: object
    properties:
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this template version was created.
      Errors:
        $ref: '#/definitions/TemplateErrorList'
        description: Errors associated with the template.
      VersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: The version number of the template.
      Status:
        $ref: '#/definitions/ResourceStatus'
        description: The HTTP status of the request.
      DataSetConfigurations:
        $ref: '#/definitions/DataSetConfigurationList'
        description: Schema of the dataset identified by the placeholder. The idea is that any dashboard created from the template should be bound to new datasets matching the same schema described through this API. .
      Description:
        $ref: '#/definitions/VersionDescription'
        description: The description of the template.
      SourceEntityArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the analysis or template which was used to create this template.
    description: A version of a template.
  TemplateErrorType:
    type: string
    enum:
      - DATA_SET_NOT_FOUND
      - INTERNAL_FAILURE
  TemplateError:
    type: object
    properties:
      Type:
        $ref: '#/definitions/TemplateErrorType'
        description: Type of error.
      Message:
        $ref: '#/definitions/NonEmptyString'
        description: Description of the error type.
    description: List of errors that occurred when the template version creation failed.
  TemplateErrorList:
    type: array
    items:
      $ref: '#/definitions/TemplateError'
    minItems: 1
  TemplateSummary:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: A summary of a template.
      TemplateId:
        $ref: '#/definitions/RestrictiveResourceId'
        description: The ID of the template. This ID is unique per AWS Region for each AWS account.
      Name:
        $ref: '#/definitions/TemplateName'
        description: A display name for the template.
      LatestVersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: A structure containing a list of version numbers for the template summary.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this template was created.
      LastUpdatedTime:
        $ref: '#/definitions/Timestamp'
        description: The last time that this template was updated.
    description: The template summary.
  TemplateVersionSummary:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/Arn'
        description: The ARN of the template version.
      VersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: The version number of the template version.
      CreatedTime:
        $ref: '#/definitions/Timestamp'
        description: The time that this template version was created.
      Status:
        $ref: '#/definitions/ResourceStatus'
        description: The status of the template version.
      Description:
        $ref: '#/definitions/VersionDescription'
        description: The description of the template version.
    description: The template version.
  TextQualifier:
    type: string
    enum:
      - DOUBLE_QUOTE
      - SINGLE_QUOTE
  TransformOperation:
    type: object
    properties:
      ProjectOperation:
        $ref: '#/definitions/ProjectOperation'
        description: An operation that projects columns. Operations that come after a projection can only refer to projected columns.
      FilterOperation:
        $ref: '#/definitions/FilterOperation'
        description: An operation that filters rows based on some condition.
      CreateColumnsOperation:
        $ref: '#/definitions/CreateColumnsOperation'
        description: An operation that creates calculated columns. Columns created in one such operation form a lexical closure.
      RenameColumnOperation:
        $ref: '#/definitions/RenameColumnOperation'
        description: An operation that renames a column.
      CastColumnTypeOperation:
        $ref: '#/definitions/CastColumnTypeOperation'
        description: A transform operation that casts a column to a different type.
      TagColumnOperation:
        $ref: '#/definitions/TagColumnOperation'
        description: An operation that tags a column with additional information.
    description: 'A data transformation on a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.'
  UntagResourceRequest:
    type: object
    properties: {}
  UpdateResourcePermissionList:
    type: array
    items:
      $ref: '#/definitions/ResourcePermission'
    minItems: 1
    maxItems: 100
  UpdateDashboardPermissionsRequest:
    type: object
    properties:
      GrantPermissions:
        $ref: '#/definitions/UpdateResourcePermissionList'
        description: The permissions that you want to grant on this resource.
      RevokePermissions:
        $ref: '#/definitions/UpdateResourcePermissionList'
        description: The permissions that you want to revoke from this resource.
  UpdateDashboardPublishedVersionRequest:
    type: object
    properties: {}
  UpdateDashboardRequest:
    type: object
    required:
      - Name
      - SourceEntity
    properties:
      Name:
        $ref: '#/definitions/DashboardName'
        description: The display name of the dashboard.
      SourceEntity:
        $ref: '#/definitions/DashboardSourceEntity'
        description: The template or analysis from which the dashboard is created. The <code>SouceTemplate</code> entity accepts the Amazon Resource Name (ARN) of the template and also references to replacement datasets for the placeholders set when creating the template. The replacement datasets need to follow the same schema as the datasets for which placeholders were created when creating the template.
      Parameters:
        $ref: '#/definitions/Parameters'
        description: A structure that contains the parameters of the dashboard.
      VersionDescription:
        $ref: '#/definitions/VersionDescription'
        description: A description for the first version of the dashboard being created.
      DashboardPublishOptions:
        $ref: '#/definitions/DashboardPublishOptions'
        description: '<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .csv format isn''t enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. The sheet controls pane is collapsed by default when set to true. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>'
  UpdateDataSetPermissionsRequest:
    type: object
    properties:
      GrantPermissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: The resource permissions that you want to grant to the dataset.
      RevokePermissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: The resource permissions that you want to revoke from the dataset.
  UpdateDataSetRequest:
    type: object
    required:
      - Name
      - PhysicalTableMap
      - ImportMode
    properties:
      Name:
        $ref: '#/definitions/ResourceName'
        description: The display name for the dataset.
      PhysicalTableMap:
        $ref: '#/definitions/PhysicalTableMap'
        description: Declares the physical tables that are available in the underlying data sources.
      LogicalTableMap:
        $ref: '#/definitions/LogicalTableMap'
        description: Configures the combination and transformation of the data from the physical tables.
      ImportMode:
        $ref: '#/definitions/DataSetImportMode'
        description: Indicates whether you want to import the data into SPICE.
      ColumnGroups:
        $ref: '#/definitions/ColumnGroupList'
        description: 'Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.'
      RowLevelPermissionDataSet:
        $ref: '#/definitions/RowLevelPermissionDataSet'
        description: The row-level security configuration for the data you want to create.
  UpdateDataSourcePermissionsRequest:
    type: object
    properties:
      GrantPermissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A list of resource permissions that you want to grant on the data source.
      RevokePermissions:
        $ref: '#/definitions/ResourcePermissionList'
        description: A list of resource permissions that you want to revoke on the data source.
  UpdateDataSourceRequest:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/ResourceName'
        description: A display name for the data source.
      DataSourceParameters:
        $ref: '#/definitions/DataSourceParameters'
        description: The parameters that QuickSight uses to connect to your underlying source.
      Credentials:
        $ref: '#/definitions/DataSourceCredentials'
        description: 'The credentials that QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.'
      VpcConnectionProperties:
        $ref: '#/definitions/VpcConnectionProperties'
        description: Use this parameter only when you want QuickSight to use a VPC connection when connecting to your underlying source.
      SslProperties:
        $ref: '#/definitions/SslProperties'
        description: Secure Socket Layer (SSL) properties that apply when QuickSight connects to your underlying source.
  UpdateGroupRequest:
    type: object
    properties:
      Description:
        $ref: '#/definitions/GroupDescription'
        description: The description for the group that you want to update.
  UpdateIAMPolicyAssignmentRequest:
    type: object
    properties:
      AssignmentStatus:
        $ref: '#/definitions/AssignmentStatus'
        description: '<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn''t used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn''t used when creating the data source.</p> </li> </ul>'
      PolicyArn:
        $ref: '#/definitions/Arn'
        description: The ARN for the IAM policy to apply to the QuickSight users and groups specified in this assignment.
      Identities:
        $ref: '#/definitions/IdentityMap'
        description: 'The QuickSight users, groups, or both that you want to assign the policy to.'
  UpdateTemplateAliasRequest:
    type: object
    required:
      - TemplateVersionNumber
    properties:
      TemplateVersionNumber:
        $ref: '#/definitions/VersionNumber'
        description: The version number of the template.
  UpdateTemplatePermissionsRequest:
    type: object
    properties:
      GrantPermissions:
        $ref: '#/definitions/UpdateResourcePermissionList'
        description: 'A list of resource permissions to be granted on the template. '
      RevokePermissions:
        $ref: '#/definitions/UpdateResourcePermissionList'
        description: 'A list of resource permissions to be revoked from the template. '
  UpdateTemplateRequest:
    type: object
    required:
      - SourceEntity
    properties:
      SourceEntity:
        $ref: '#/definitions/TemplateSourceEntity'
        description: The source QuickSight entity from which this template is being updated. You can currently update templates from an Analysis or another template.
      VersionDescription:
        $ref: '#/definitions/VersionDescription'
        description: 'A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.'
      Name:
        $ref: '#/definitions/TemplateName'
        description: The name for the template.
  UpdateUserRequest:
    type: object
    required:
      - Email
      - Role
    properties:
      Email:
        $ref: '#/definitions/String'
        description: The email address of the user that you want to update.
      Role:
        $ref: '#/definitions/UserRole'
        description: '<p>The Amazon QuickSight role of the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul>'
