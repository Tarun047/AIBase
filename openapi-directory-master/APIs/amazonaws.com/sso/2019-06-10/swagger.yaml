swagger: '2.0'
info:
  version: '2019-06-10'
  x-release: v4
  title: AWS Single Sign-On
  description: '<p>AWS Single Sign-On Portal is a web service that makes it easy for you to assign user access to AWS SSO resources such as the user portal. Users can get AWS account applications and roles assigned to them and get federated into the application.</p> <p>For general information about AWS SSO, see <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html">What is AWS Single Sign-On?</a> in the <i>AWS SSO User Guide</i>.</p> <p>This API reference guide describes the AWS SSO Portal operations that you can call programatically and includes detailed information on data types and errors.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a convenient way to create programmatic access to AWS SSO and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: sso
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sso-2019-06-10.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/sso/'
host: portal.sso.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://portal.sso.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SSO multi-region endpoint
  - url: 'https://portal.sso.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SSO multi-region endpoint
  - url: 'http://portal.sso.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SSO endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://portal.sso.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SSO endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/federation/credentials#role_name&account_id&x-amz-sso_bearer_token':
    get:
      operationId: GetRoleCredentials
      description: Returns the STS short-term credentials for a given role name that is assigned to the user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRoleCredentialsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: role_name
          in: query
          required: true
          description: The friendly name of the role that is assigned to the user.
          type: string
        - name: account_id
          in: query
          required: true
          description: The identifier for the AWS account that is assigned to the user.
          type: string
        - name: x-amz-sso_bearer_token
          in: header
          required: true
          description: 'The token issued by the <code>CreateToken</code> API call. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.'
          type: string
          format: password
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/assignment/roles#x-amz-sso_bearer_token&account_id':
    get:
      operationId: ListAccountRoles
      description: Lists all roles that are assigned to the user for a given AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAccountRolesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: next_token
          in: query
          required: false
          description: The page token from the previous response output when you request subsequent pages.
          type: string
        - name: max_result
          in: query
          required: false
          description: The number of items that clients can request per page.
          type: integer
          minimum: 1
          maximum: 100
        - name: x-amz-sso_bearer_token
          in: header
          required: true
          description: 'The token issued by the <code>CreateToken</code> API call. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.'
          type: string
          format: password
        - name: account_id
          in: query
          required: true
          description: The identifier for the AWS account that is assigned to the user.
          type: string
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/assignment/accounts#x-amz-sso_bearer_token':
    get:
      operationId: ListAccounts
      description: 'Lists all AWS accounts assigned to the user. These AWS accounts are assigned by the administrator of the account. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/userguide/useraccess.html#assignusers">Assign User Access</a> in the <i>AWS SSO User Guide</i>. This operation returns a paginated response.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAccountsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: next_token
          in: query
          required: false
          description: '(Optional) When requesting subsequent pages, this is the page token from the previous response output.'
          type: string
        - name: max_result
          in: query
          required: false
          description: This is the number of items clients can request per page.
          type: integer
          minimum: 1
          maximum: 100
        - name: x-amz-sso_bearer_token
          in: header
          required: true
          description: 'The token issued by the <code>CreateToken</code> API call. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.'
          type: string
          format: password
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/logout#x-amz-sso_bearer_token':
    post:
      operationId: Logout
      description: Removes the client- and server-side session that is associated with the user.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: x-amz-sso_bearer_token
          in: header
          required: true
          description: 'The token issued by the <code>CreateToken</code> API call. For more information, see <a href="https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html">CreateToken</a> in the <i>AWS SSO OIDC API Reference Guide</i>.'
          type: string
          format: password
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  GetRoleCredentialsResponse:
    type: object
    properties:
      roleCredentials:
        $ref: '#/definitions/RoleCredentials'
        description: The credentials for the role that is assigned to the user.
  InvalidRequestException: {}
  UnauthorizedException: {}
  TooManyRequestsException: {}
  ResourceNotFoundException: {}
  ListAccountRolesResponse:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextTokenType'
        description: The page token client that is used to retrieve the list of accounts.
      roleList:
        $ref: '#/definitions/RoleListType'
        description: A paginated response with the list of roles and the next token if more results are available.
  ListAccountsResponse:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextTokenType'
        description: The page token client that is used to retrieve the list of accounts.
      accountList:
        $ref: '#/definitions/AccountListType'
        description: A paginated response with the list of account information and the next token if more results are available.
  AccessKeyType:
    type: string
  AccessTokenType:
    type: string
    format: password
  AccountIdType:
    type: string
  AccountNameType:
    type: string
  EmailAddressType:
    type: string
    minLength: 1
    maxLength: 254
  AccountInfo:
    type: object
    properties:
      accountId:
        $ref: '#/definitions/AccountIdType'
        description: The identifier of the AWS account that is assigned to the user.
      accountName:
        $ref: '#/definitions/AccountNameType'
        description: The display name of the AWS account that is assigned to the user.
      emailAddress:
        $ref: '#/definitions/EmailAddressType'
        description: The email address of the AWS account that is assigned to the user.
    description: Provides information about your AWS account.
  AccountListType:
    type: array
    items:
      $ref: '#/definitions/AccountInfo'
  ExpirationTimestampType:
    type: integer
  RoleNameType:
    type: string
  GetRoleCredentialsRequest:
    type: object
    properties: {}
  RoleCredentials:
    type: object
    properties:
      accessKeyId:
        $ref: '#/definitions/AccessKeyType'
        description: 'The identifier used for the temporary security credentials. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">Using Temporary Security Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.'
      secretAccessKey:
        $ref: '#/definitions/SecretAccessKeyType'
        description: 'The key that is used to sign the request. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">Using Temporary Security Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.'
      sessionToken:
        $ref: '#/definitions/SessionTokenType'
        description: 'The token used for temporary credentials. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html">Using Temporary Security Credentials to Request Access to AWS Resources</a> in the <i>AWS IAM User Guide</i>.'
      expiration:
        $ref: '#/definitions/ExpirationTimestampType'
        description: The date on which temporary security credentials expire.
    description: Provides information about the role credentials that are assigned to the user.
  NextTokenType:
    type: string
  MaxResultType:
    type: integer
    minimum: 1
    maximum: 100
  ListAccountRolesRequest:
    type: object
    properties: {}
  RoleListType:
    type: array
    items:
      $ref: '#/definitions/RoleInfo'
  ListAccountsRequest:
    type: object
    properties: {}
  LogoutRequest:
    type: object
    properties: {}
  SecretAccessKeyType:
    type: string
    format: password
  SessionTokenType:
    type: string
    format: password
  RoleInfo:
    type: object
    properties:
      roleName:
        $ref: '#/definitions/RoleNameType'
        description: The friendly name of the role that is assigned to the user.
      accountId:
        $ref: '#/definitions/AccountIdType'
        description: The identifier of the AWS account assigned to the user.
    description: Provides information about the role that is assigned to the user.
