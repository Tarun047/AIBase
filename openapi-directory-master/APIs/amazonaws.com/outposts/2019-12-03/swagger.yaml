swagger: '2.0'
info:
  version: '2019-12-03'
  x-release: v4
  title: AWS Outposts
  description: 'AWS Outposts is a fully-managed service that extends AWS infrastructure, APIs, and tools to customer premises. By providing local access to AWS-managed infrastructure, AWS Outposts enables customers to build and run applications on premises using the same programming interfaces as in AWS Regions, while using local compute and storage resources for lower latency and local data processing needs.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: outposts
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/outposts-2019-12-03.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/outposts/'
host: outposts.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://outposts.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Outposts multi-region endpoint
  - url: 'https://outposts.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Outposts multi-region endpoint
  - url: 'http://outposts.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Outposts endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://outposts.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Outposts endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /outposts:
    post:
      operationId: CreateOutpost
      description: Creates an Outpost.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOutpostOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
        '484':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - SiteId
            properties:
              Name:
                description: The name of the Outpost.
                type: string
                pattern: '^[\S ]+$'
                minLength: 1
                maxLength: 255
              Description:
                description: The Outpost description.
                type: string
                pattern: '^[\S ]+$'
                minLength: 1
                maxLength: 1000
              SiteId:
                description: The ID of the site.
                type: string
                pattern: 'os-[a-f0-9]{17}'
                minLength: 1
                maxLength: 255
              AvailabilityZone:
                description: The Availability Zone.
                type: string
                pattern: '[a-z\d-]+'
                minLength: 1
                maxLength: 1000
              AvailabilityZoneId:
                description: The ID of the Availability Zone.
                type: string
                pattern: '[a-z]+[0-9]+-az[0-9]+'
                minLength: 1
                maxLength: 255
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListOutposts
      description: List the Outposts for your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOutpostsOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: The pagination token.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 1005
        - name: MaxResults
          in: query
          required: false
          description: The maximum page size.
          type: integer
          minimum: 1
          maximum: 1000
  '/outposts/{OutpostId}':
    get:
      operationId: GetOutpost
      description: Gets information about the specified Outpost.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOutpostOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: OutpostId
          in: path
          required: true
          description: The ID of the Outpost.
          type: string
          pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$'
          minLength: 1
          maxLength: 180
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/outposts/{OutpostId}/instanceTypes':
    get:
      operationId: GetOutpostInstanceTypes
      description: Lists the instance types for the specified Outpost.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOutpostInstanceTypesOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: OutpostId
          in: path
          required: true
          description: The ID of the Outpost.
          type: string
          pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$'
          minLength: 1
          maxLength: 180
        - name: NextToken
          in: query
          required: false
          description: The pagination token.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 1005
        - name: MaxResults
          in: query
          required: false
          description: The maximum page size.
          type: integer
          minimum: 1
          maximum: 1000
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /sites:
    get:
      operationId: ListSites
      description: Lists the sites for the specified AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSitesOutput'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '482':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: The pagination token.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 1005
        - name: MaxResults
          in: query
          required: false
          description: The maximum page size.
          type: integer
          minimum: 1
          maximum: 1000
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateOutpostOutput:
    type: object
    properties:
      Outpost:
        $ref: '#/definitions/Outpost'
  ValidationException: {}
  NotFoundException: {}
  AccessDeniedException: {}
  InternalServerException: {}
  ServiceQuotaExceededException: {}
  GetOutpostOutput:
    type: object
    properties:
      Outpost:
        $ref: '#/definitions/Outpost'
  GetOutpostInstanceTypesOutput:
    type: object
    properties:
      InstanceTypes:
        $ref: '#/definitions/InstanceTypeListDefinition'
      NextToken:
        $ref: '#/definitions/Token'
      OutpostId:
        $ref: '#/definitions/OutpostId'
      OutpostArn:
        $ref: '#/definitions/OutpostArn'
  ListOutpostsOutput:
    type: object
    properties:
      Outposts:
        $ref: '#/definitions/outpostListDefinition'
      NextToken:
        $ref: '#/definitions/Token'
  ListSitesOutput:
    type: object
    properties:
      Sites:
        $ref: '#/definitions/siteListDefinition'
      NextToken:
        $ref: '#/definitions/Token'
  AccountId:
    type: string
    description: The ID of the AWS account.
    minLength: 12
    maxLength: 12
  AvailabilityZone:
    type: string
    pattern: '[a-z\d-]+'
    description: The Availability Zone.
    minLength: 1
    maxLength: 1000
  AvailabilityZoneId:
    type: string
    pattern: '[a-z]+[0-9]+-az[0-9]+'
    description: The ID of the Availability Zone.
    minLength: 1
    maxLength: 255
  OutpostName:
    type: string
    pattern: '^[\S ]+$'
    description: The name of the Outpost.
    minLength: 1
    maxLength: 255
  OutpostDescription:
    type: string
    pattern: '^[\S ]+$'
    description: The Outpost description.
    minLength: 1
    maxLength: 1000
  SiteId:
    type: string
    pattern: 'os-[a-f0-9]{17}'
    description: The ID of the site.
    minLength: 1
    maxLength: 255
  CreateOutpostInput:
    type: object
    required:
      - SiteId
    properties:
      Name:
        $ref: '#/definitions/OutpostName'
      Description:
        $ref: '#/definitions/OutpostDescription'
      SiteId:
        $ref: '#/definitions/SiteId'
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
      AvailabilityZoneId:
        $ref: '#/definitions/AvailabilityZoneId'
  Outpost:
    type: object
    properties:
      OutpostId:
        $ref: '#/definitions/OutpostId'
      OwnerId:
        $ref: '#/definitions/OwnerId'
      OutpostArn:
        $ref: '#/definitions/OutpostArn'
      SiteId:
        $ref: '#/definitions/SiteId'
      Name:
        $ref: '#/definitions/OutpostName'
      Description:
        $ref: '#/definitions/OutpostDescription'
      LifeCycleStatus:
        $ref: '#/definitions/LifeCycleStatus'
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
      AvailabilityZoneId:
        $ref: '#/definitions/AvailabilityZoneId'
    description: Information about an Outpost.
  OutpostId:
    type: string
    pattern: '^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$'
    description: The ID of the Outpost.
    minLength: 1
    maxLength: 180
  GetOutpostInput:
    type: object
    properties: {}
  Token:
    type: string
    pattern: .*\S.*
    description: The pagination token.
    minLength: 1
    maxLength: 1005
  MaxResults1000:
    type: integer
    description: The maximum page size.
    minimum: 1
    maximum: 1000
  GetOutpostInstanceTypesInput:
    type: object
    properties: {}
  InstanceTypeListDefinition:
    type: array
    description: Information about the instance types.
    items:
      $ref: '#/definitions/InstanceTypeItem'
  OutpostArn:
    type: string
    pattern: '^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$'
    description: The Amazon Resource Name (ARN) of the Outpost.
    minLength: 1
    maxLength: 255
  InstanceType:
    type: string
    description: The instance type.
  InstanceTypeItem:
    type: object
    properties:
      InstanceType:
        $ref: '#/definitions/InstanceType'
    description: Information about an instance type.
  LifeCycleStatus:
    type: string
    description: The life cycle status.
  ListOutpostsInput:
    type: object
    properties: {}
  outpostListDefinition:
    type: array
    description: Information about the Outposts.
    items:
      $ref: '#/definitions/Outpost'
  ListSitesInput:
    type: object
    properties: {}
  siteListDefinition:
    type: array
    description: Information about the sites.
    items:
      $ref: '#/definitions/Site'
  OwnerId:
    type: string
    pattern: '\d{12}'
    description: The AWS account ID of the Outpost owner.
    minLength: 12
    maxLength: 12
  SiteName:
    type: string
    pattern: '^[\S ]+$'
    description: The name of the site.
    minLength: 1
    maxLength: 1000
  SiteDescription:
    type: string
    pattern: '^[\S ]+$'
    description: The description of the site.
    minLength: 1
    maxLength: 1000
  Site:
    type: object
    properties:
      SiteId:
        $ref: '#/definitions/SiteId'
      AccountId:
        $ref: '#/definitions/AccountId'
      Name:
        $ref: '#/definitions/SiteName'
      Description:
        $ref: '#/definitions/SiteDescription'
    description: Information about a site.
