swagger: '2.0'
info:
  version: '2018-05-22'
  x-release: v4
  title: Amazon Personalize
  description: Amazon Personalize is a machine learning service that makes it easy to add individualized recommendations to customers.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: personalize
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/personalize-2018-05-22.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/personalize/'
host: personalize.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://personalize.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Personalize multi-region endpoint
  - url: 'https://personalize.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Personalize multi-region endpoint
  - url: 'http://personalize.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://personalize.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Personalize endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#X-Amz-Target=AmazonPersonalize.CreateBatchInferenceJob':
    post:
      operationId: CreateBatchInferenceJob
      description: 'Creates a batch inference job. The operation can handle up to 50 million records and the input file must be in JSON format. For more information, see <a>recommendations-batch</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBatchInferenceJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateBatchInferenceJobRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateBatchInferenceJob
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateCampaign':
    post:
      operationId: CreateCampaign
      description: '<p>Creates a campaign by deploying a solution version. When a client calls the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> and <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetPersonalizedRanking.html">GetPersonalizedRanking</a> APIs, a campaign is specified in the request.</p> <p> <b>Minimum Provisioned TPS and Auto-Scaling</b> </p> <p>A transaction is a single <code>GetRecommendations</code> or <code>GetPersonalizedRanking</code> call. Transactions per second (TPS) is the throughput and unit of billing for Amazon Personalize. The minimum provisioned TPS (<code>minProvisionedTPS</code>) specifies the baseline throughput provisioned by Amazon Personalize, and thus, the minimum billing charge. If your TPS increases beyond <code>minProvisionedTPS</code>, Amazon Personalize auto-scales the provisioned capacity up and down, but never below <code>minProvisionedTPS</code>, to maintain a 70% utilization. There''s a short time delay while the capacity is increased that might cause loss of transactions. It''s recommended to start with a low <code>minProvisionedTPS</code>, track your usage using Amazon CloudWatch metrics, and then increase the <code>minProvisionedTPS</code> as necessary.</p> <p> <b>Status</b> </p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the campaign status, call <a>DescribeCampaign</a>.</p> <note> <p>Wait until the <code>status</code> of the campaign is <code>ACTIVE</code> before asking the campaign for recommendations.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListCampaigns</a> </p> </li> <li> <p> <a>DescribeCampaign</a> </p> </li> <li> <p> <a>UpdateCampaign</a> </p> </li> <li> <p> <a>DeleteCampaign</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCampaignResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCampaignRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateCampaign
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateDataset':
    post:
      operationId: CreateDataset
      description: '<p>Creates an empty dataset and adds it to the specified dataset group. Use <a>CreateDatasetImportJob</a> to import your training data to a dataset.</p> <p>There are three types of datasets:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p>Each dataset type has an associated schema with required field types. Only the <code>Interactions</code> dataset is required in order to train a model (also referred to as creating a solution).</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the dataset, call <a>DescribeDataset</a>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>CreateDatasetGroup</a> </p> </li> <li> <p> <a>ListDatasets</a> </p> </li> <li> <p> <a>DescribeDataset</a> </p> </li> <li> <p> <a>DeleteDataset</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatasetRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateDataset
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateDatasetGroup':
    post:
      operationId: CreateDatasetGroup
      description: '<p>Creates an empty dataset group. A dataset group contains related datasets that supply data for training a model. A dataset group can contain at most three datasets, one for each type of dataset:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul> <p>To train a model (create a solution), a dataset group that contains an <code>Interactions</code> dataset is required. Call <a>CreateDataset</a> to add a dataset to the group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul> <p>To get the status of the dataset group, call <a>DescribeDatasetGroup</a>. If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the creation failed.</p> <note> <p>You must wait until the <code>status</code> of the dataset group is <code>ACTIVE</code> before adding a dataset to the group.</p> </note> <p>You can specify an AWS Key Management Service (KMS) key to encrypt the datasets in the group. If you specify a KMS key, you must also include an AWS Identity and Access Management (IAM) role that has permission to access the key.</p> <p class="title"> <b>APIs that require a dataset group ARN in the request</b> </p> <ul> <li> <p> <a>CreateDataset</a> </p> </li> <li> <p> <a>CreateEventTracker</a> </p> </li> <li> <p> <a>CreateSolution</a> </p> </li> </ul> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListDatasetGroups</a> </p> </li> <li> <p> <a>DescribeDatasetGroup</a> </p> </li> <li> <p> <a>DeleteDatasetGroup</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetGroupResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatasetGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateDatasetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateDatasetImportJob':
    post:
      operationId: CreateDatasetImportJob
      description: '<p>Creates a job that imports training data from your data source (an Amazon S3 bucket) to an Amazon Personalize dataset. To allow Amazon Personalize to import the training data, you must specify an AWS Identity and Access Management (IAM) role that has permission to read from the data source.</p> <important> <p>The dataset import job replaces any previous data in the dataset.</p> </important> <p> <b>Status</b> </p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul> <p>To get the status of the import job, call <a>DescribeDatasetImportJob</a>, providing the Amazon Resource Name (ARN) of the dataset import job. The dataset import is complete when the status shows as ACTIVE. If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the job failed.</p> <note> <p>Importing takes time. You must wait until the status shows as ACTIVE before training a model using the dataset.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListDatasetImportJobs</a> </p> </li> <li> <p> <a>DescribeDatasetImportJob</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDatasetImportJobRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateDatasetImportJob
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateEventTracker':
    post:
      operationId: CreateEventTracker
      description: '<p>Creates an event tracker that you use when sending event data to the specified dataset group using the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.</p> <p>When Amazon Personalize creates an event tracker, it also creates an <i>event-interactions</i> dataset in the dataset group associated with the event tracker. The event-interactions dataset stores the event data from the <code>PutEvents</code> call. The contents of this dataset are not available to the user.</p> <note> <p>Only one event tracker can be associated with a dataset group. You will get an error if you call <code>CreateEventTracker</code> using the same dataset group as an existing event tracker.</p> </note> <p>When you send event data you include your tracking ID. The tracking ID identifies the customer and authorizes the customer to send the data.</p> <p>The event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the event tracker, call <a>DescribeEventTracker</a>.</p> <note> <p>The event tracker must be in the ACTIVE state before using the tracking ID.</p> </note> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListEventTrackers</a> </p> </li> <li> <p> <a>DescribeEventTracker</a> </p> </li> <li> <p> <a>DeleteEventTracker</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventTrackerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateEventTrackerRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateEventTracker
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateSchema':
    post:
      operationId: CreateSchema
      description: <p>Creates an Amazon Personalize schema from the specified schema string. The schema you create must be in Avro JSON format.</p> <p>Amazon Personalize recognizes three schema variants. Each schema is associated with a dataset type and has a set of required field and keywords. You specify a schema when you call <a>CreateDataset</a>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSchemas</a> </p> </li> <li> <p> <a>DescribeSchema</a> </p> </li> <li> <p> <a>DeleteSchema</a> </p> </li> </ul>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSchemaResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSchemaRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateSchema
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateSolution':
    post:
      operationId: CreateSolution
      description: '<p>Creates the configuration for training a model. A trained model is known as a solution. After the configuration is created, you train the model (create a solution) by calling the <a>CreateSolutionVersion</a> operation. Every time you call <code>CreateSolutionVersion</code>, a new version of the solution is created.</p> <p>After creating a solution version, you check its accuracy by calling <a>GetSolutionMetrics</a>. When you are satisfied with the version, you deploy it using <a>CreateCampaign</a>. The campaign provides recommendations to a client through the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> API.</p> <p>To train a model, Amazon Personalize requires training data and a recipe. The training data comes from the dataset group that you provide in the request. A recipe specifies the training algorithm and a feature transformation. You can specify one of the predefined recipes provided by Amazon Personalize. Alternatively, you can specify <code>performAutoML</code> and Amazon Personalize will analyze your data and select the optimum USER_PERSONALIZATION recipe for you.</p> <p> <b>Status</b> </p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>To get the status of the solution, call <a>DescribeSolution</a>. Wait until the status shows as ACTIVE before calling <code>CreateSolutionVersion</code>.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSolutions</a> </p> </li> <li> <p> <a>CreateSolutionVersion</a> </p> </li> <li> <p> <a>DescribeSolution</a> </p> </li> <li> <p> <a>DeleteSolution</a> </p> </li> </ul> <ul> <li> <p> <a>ListSolutionVersions</a> </p> </li> <li> <p> <a>DescribeSolutionVersion</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSolutionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSolutionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateSolution
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.CreateSolutionVersion':
    post:
      operationId: CreateSolutionVersion
      description: '<p>Trains or retrains an active solution. A solution is created using the <a>CreateSolution</a> operation and must be in the ACTIVE state before calling <code>CreateSolutionVersion</code>. A new version of the solution is created every time you call this operation.</p> <p> <b>Status</b> </p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul> <p>To get the status of the version, call <a>DescribeSolutionVersion</a>. Wait until the status shows as ACTIVE before calling <code>CreateCampaign</code>.</p> <p>If the status shows as CREATE FAILED, the response includes a <code>failureReason</code> key, which describes why the job failed.</p> <p class="title"> <b>Related APIs</b> </p> <ul> <li> <p> <a>ListSolutionVersions</a> </p> </li> <li> <p> <a>DescribeSolutionVersion</a> </p> </li> </ul> <ul> <li> <p> <a>ListSolutions</a> </p> </li> <li> <p> <a>CreateSolution</a> </p> </li> <li> <p> <a>DescribeSolution</a> </p> </li> <li> <p> <a>DeleteSolution</a> </p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSolutionVersionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSolutionVersionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.CreateSolutionVersion
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DeleteCampaign':
    post:
      operationId: DeleteCampaign
      description: 'Removes a campaign by deleting the solution deployment. The solution that the campaign is based on is not deleted and can be redeployed when needed. A deleted campaign can no longer be specified in a <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> request. For more information on campaigns, see <a>CreateCampaign</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteCampaignRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DeleteCampaign
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DeleteDataset':
    post:
      operationId: DeleteDataset
      description: 'Deletes a dataset. You can''t delete a dataset if an associated <code>DatasetImportJob</code> or <code>SolutionVersion</code> is in the CREATE PENDING or IN PROGRESS state. For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDatasetRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DeleteDataset
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DeleteDatasetGroup':
    post:
      operationId: DeleteDatasetGroup
      description: '<p>Deletes a dataset group. Before you delete a dataset group, you must delete the following:</p> <ul> <li> <p>All associated event trackers.</p> </li> <li> <p>All associated solutions.</p> </li> <li> <p>All datasets in the dataset group.</p> </li> </ul>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDatasetGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DeleteDatasetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DeleteEventTracker':
    post:
      operationId: DeleteEventTracker
      description: 'Deletes the event tracker. Does not delete the event-interactions dataset from the associated dataset group. For more information on event trackers, see <a>CreateEventTracker</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEventTrackerRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DeleteEventTracker
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DeleteSchema':
    post:
      operationId: DeleteSchema
      description: 'Deletes a schema. Before deleting a schema, you must delete all datasets referencing the schema. For more information on schemas, see <a>CreateSchema</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSchemaRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DeleteSchema
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DeleteSolution':
    post:
      operationId: DeleteSolution
      description: 'Deletes all versions of a solution and the <code>Solution</code> object itself. Before deleting a solution, you must delete all campaigns based on the solution. To determine what campaigns are using the solution, call <a>ListCampaigns</a> and supply the Amazon Resource Name (ARN) of the solution. You can''t delete a solution if an associated <code>SolutionVersion</code> is in the CREATE PENDING or IN PROGRESS state. For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSolutionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DeleteSolution
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeAlgorithm':
    post:
      operationId: DescribeAlgorithm
      description: Describes the given algorithm.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlgorithmResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeAlgorithmRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeAlgorithm
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeBatchInferenceJob':
    post:
      operationId: DescribeBatchInferenceJob
      description: 'Gets the properties of a batch inference job including name, Amazon Resource Name (ARN), status, input and output configurations, and the ARN of the solution version used to generate the recommendations.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBatchInferenceJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeBatchInferenceJobRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeBatchInferenceJob
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeCampaign':
    post:
      operationId: DescribeCampaign
      description: '<p>Describes the given campaign, including its status.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul> <p>When the <code>status</code> is <code>CREATE FAILED</code>, the response includes the <code>failureReason</code> key, which describes why.</p> <p>For more information on campaigns, see <a>CreateCampaign</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCampaignResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCampaignRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeCampaign
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeDataset':
    post:
      operationId: DescribeDataset
      description: 'Describes the given dataset. For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDatasetRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeDataset
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeDatasetGroup':
    post:
      operationId: DescribeDatasetGroup
      description: 'Describes the given dataset group. For more information on dataset groups, see <a>CreateDatasetGroup</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetGroupResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDatasetGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeDatasetGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeDatasetImportJob':
    post:
      operationId: DescribeDatasetImportJob
      description: 'Describes the dataset import job created by <a>CreateDatasetImportJob</a>, including the import job status.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDatasetImportJobResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDatasetImportJobRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeDatasetImportJob
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeEventTracker':
    post:
      operationId: DescribeEventTracker
      description: 'Describes an event tracker. The response includes the <code>trackingId</code> and <code>status</code> of the event tracker. For more information on event trackers, see <a>CreateEventTracker</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventTrackerResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventTrackerRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeEventTracker
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeFeatureTransformation':
    post:
      operationId: DescribeFeatureTransformation
      description: Describes the given feature transformation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFeatureTransformationResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFeatureTransformationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeFeatureTransformation
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeRecipe':
    post:
      operationId: DescribeRecipe
      description: '<p>Describes a recipe.</p> <p>A recipe contains three items:</p> <ul> <li> <p>An algorithm that trains a model.</p> </li> <li> <p>Hyperparameters that govern the training.</p> </li> <li> <p>Feature transformation information for modifying the input data before training.</p> </li> </ul> <p>Amazon Personalize provides a set of predefined recipes. You specify a recipe when you create a solution with the <a>CreateSolution</a> API. <code>CreateSolution</code> trains a model by using the algorithm in the specified recipe and a training dataset. The solution, when deployed as a campaign, can provide recommendations using the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> API.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecipeResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeRecipeRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeRecipe
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeSchema':
    post:
      operationId: DescribeSchema
      description: 'Describes a schema. For more information on schemas, see <a>CreateSchema</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSchemaResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSchemaRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeSchema
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeSolution':
    post:
      operationId: DescribeSolution
      description: 'Describes a solution. For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSolutionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSolutionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeSolution
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.DescribeSolutionVersion':
    post:
      operationId: DescribeSolutionVersion
      description: 'Describes a specific version of a solution. For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSolutionVersionResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSolutionVersionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.DescribeSolutionVersion
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.GetSolutionMetrics':
    post:
      operationId: GetSolutionMetrics
      description: Gets the metrics for the specified solution version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSolutionMetricsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSolutionMetricsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.GetSolutionMetrics
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListBatchInferenceJobs':
    post:
      operationId: ListBatchInferenceJobs
      description: Gets a list of the batch inference jobs that have been performed off of a solution version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBatchInferenceJobsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListBatchInferenceJobsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListBatchInferenceJobs
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListCampaigns':
    post:
      operationId: ListCampaigns
      description: 'Returns a list of campaigns that use the given solution. When a solution is not specified, all the campaigns associated with the account are listed. The response provides the properties for each campaign, including the Amazon Resource Name (ARN). For more information on campaigns, see <a>CreateCampaign</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCampaignsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCampaignsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListCampaigns
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListDatasetGroups':
    post:
      operationId: ListDatasetGroups
      description: 'Returns a list of dataset groups. The response provides the properties for each dataset group, including the Amazon Resource Name (ARN). For more information on dataset groups, see <a>CreateDatasetGroup</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetGroupsResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDatasetGroupsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListDatasetGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListDatasetImportJobs':
    post:
      operationId: ListDatasetImportJobs
      description: 'Returns a list of dataset import jobs that use the given dataset. When a dataset is not specified, all the dataset import jobs associated with the account are listed. The response provides the properties for each dataset import job, including the Amazon Resource Name (ARN). For more information on dataset import jobs, see <a>CreateDatasetImportJob</a>. For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetImportJobsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDatasetImportJobsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListDatasetImportJobs
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListDatasets':
    post:
      operationId: ListDatasets
      description: 'Returns the list of datasets contained in the given dataset group. The response provides the properties for each dataset, including the Amazon Resource Name (ARN). For more information on datasets, see <a>CreateDataset</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDatasetsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDatasetsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListDatasets
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListEventTrackers':
    post:
      operationId: ListEventTrackers
      description: 'Returns the list of event trackers associated with the account. The response provides the properties for each event tracker, including the Amazon Resource Name (ARN) and tracking ID. For more information on event trackers, see <a>CreateEventTracker</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEventTrackersResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListEventTrackersRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListEventTrackers
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListRecipes':
    post:
      operationId: ListRecipes
      description: 'Returns a list of available recipes. The response provides the properties for each recipe, including the recipe''s Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecipesResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListRecipesRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListRecipes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListSchemas':
    post:
      operationId: ListSchemas
      description: 'Returns the list of schemas associated with the account. The response provides the properties for each schema, including the Amazon Resource Name (ARN). For more information on schemas, see <a>CreateSchema</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSchemasResponse'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSchemasRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListSchemas
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListSolutionVersions':
    post:
      operationId: ListSolutionVersions
      description: 'Returns a list of solution versions for the given solution. When a solution is not specified, all the solution versions associated with the account are listed. The response provides the properties for each solution version, including the Amazon Resource Name (ARN). For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSolutionVersionsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSolutionVersionsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListSolutionVersions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.ListSolutions':
    post:
      operationId: ListSolutions
      description: 'Returns a list of solutions that use the given dataset group. When a dataset group is not specified, all the solutions associated with the account are listed. The response provides the properties for each solution, including the Amazon Resource Name (ARN). For more information on solutions, see <a>CreateSolution</a>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSolutionsResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSolutionsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.ListSolutions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AmazonPersonalize.UpdateCampaign':
    post:
      operationId: UpdateCampaign
      description: '<p>Updates a campaign by either deploying a new solution or changing the value of the campaign''s <code>minProvisionedTPS</code> parameter.</p> <p>To update a campaign, the campaign status must be ACTIVE or CREATE FAILED. Check the campaign status using the <a>DescribeCampaign</a> API.</p> <note> <p>You must wait until the <code>status</code> of the updated campaign is <code>ACTIVE</code> before asking the campaign for recommendations.</p> </note> <p>For more information on campaigns, see <a>CreateCampaign</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateCampaignResponse'
        '480':
          description: InvalidInputException
          schema:
            $ref: '#/definitions/InvalidInputException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateCampaignRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AmazonPersonalize.UpdateCampaign
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateBatchInferenceJobResponse:
    type: object
    properties:
      batchInferenceJobArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the batch inference job.
  CreateBatchInferenceJobRequest:
    type: object
    required:
      - jobName
      - solutionVersionArn
      - jobInput
      - jobOutput
      - roleArn
    properties:
      jobName:
        $ref: '#/definitions/Name'
        description: The name of the batch inference job to create.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version that will be used to generate the batch inference recommendations.
      numResults:
        $ref: '#/definitions/NumBatchResults'
        description: The number of recommendations to retreive.
      jobInput:
        $ref: '#/definitions/BatchInferenceJobInput'
        description: The Amazon S3 path that leads to the input file to base your recommendations on. The input material must be in JSON format.
      jobOutput:
        $ref: '#/definitions/BatchInferenceJobOutput'
        description: The path to the Amazon S3 bucket where the job's output will be stored.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the Amazon Identity and Access Management role that has permissions to read and write to your input and out Amazon S3 buckets respectively.
  InvalidInputException: {}
  ResourceAlreadyExistsException: {}
  LimitExceededException: {}
  ResourceNotFoundException: {}
  ResourceInUseException: {}
  CreateCampaignResponse:
    type: object
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
  CreateCampaignRequest:
    type: object
    required:
      - name
      - solutionVersionArn
      - minProvisionedTPS
    properties:
      name:
        $ref: '#/definitions/Name'
        description: A name for the new campaign. The campaign name must be unique within your account.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version to deploy.
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
  CreateDatasetResponse:
    type: object
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset.
  CreateDatasetRequest:
    type: object
    required:
      - name
      - schemaArn
      - datasetGroupArn
      - datasetType
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name for the dataset.
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the schema to associate with the dataset. The schema defines the dataset fields.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group to add the dataset to.
      datasetType:
        $ref: '#/definitions/DatasetType'
        description: '<p>The type of dataset.</p> <p>One of the following (case insensitive) values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul>'
  CreateDatasetGroupResponse:
    type: object
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the new dataset group.
  CreateDatasetGroupRequest:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name for the new dataset group.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that has permissions to access the KMS key. Supplying an IAM role is only valid when also specifying a KMS key.
      kmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of a KMS key used to encrypt the datasets.
  CreateDatasetImportJobResponse:
    type: object
    properties:
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset import job.
  CreateDatasetImportJobRequest:
    type: object
    required:
      - jobName
      - datasetArn
      - dataSource
      - roleArn
    properties:
      jobName:
        $ref: '#/definitions/Name'
        description: The name for the dataset import job.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset that receives the imported data.
      dataSource:
        $ref: '#/definitions/DataSource'
        description: The Amazon S3 bucket that contains the training data to import.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that has permissions to read from the Amazon S3 data source.
  CreateEventTrackerResponse:
    type: object
    properties:
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the event tracker.
      trackingId:
        $ref: '#/definitions/TrackingId'
        description: 'The ID of the event tracker. Include this ID in requests to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.'
  CreateEventTrackerRequest:
    type: object
    required:
      - name
      - datasetGroupArn
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name for the event tracker.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that receives the event data.
  CreateSchemaResponse:
    type: object
    properties:
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the created schema.
  CreateSchemaRequest:
    type: object
    required:
      - name
      - schema
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name for the schema.
      schema:
        $ref: '#/definitions/AvroSchema'
        description: A schema in Avro JSON format.
  CreateSolutionResponse:
    type: object
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution.
  CreateSolutionRequest:
    type: object
    required:
      - name
      - datasetGroupArn
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name for the solution.
      performHPO:
        $ref: '#/definitions/Boolean'
        description: '<p>Whether to perform hyperparameter optimization (HPO) on the specified or selected recipe. The default is <code>false</code>.</p> <p>When performing AutoML, this parameter is always <code>true</code> and you should not set it to <code>false</code>.</p>'
      performAutoML:
        $ref: '#/definitions/PerformAutoML'
        description: '<p>Whether to perform automated machine learning (AutoML). The default is <code>false</code>. For this case, you must specify <code>recipeArn</code>.</p> <p>When set to <code>true</code>, Amazon Personalize analyzes your training data and selects the optimal USER_PERSONALIZATION recipe and hyperparameters. In this case, you must omit <code>recipeArn</code>. Amazon Personalize determines the optimal recipe by running tests with different values for the hyperparameters. AutoML lengthens the training process as compared to selecting a specific recipe.</p>'
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the recipe to use for model training. Only specified when <code>performAutoML</code> is false.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that provides the training data.
      eventType:
        $ref: '#/definitions/EventType'
        description: 'When your have multiple event types (using an <code>EVENT_TYPE</code> schema field), this parameter specifies which event type (for example, ''click'' or ''like'') is used for training the model.'
      solutionConfig:
        $ref: '#/definitions/SolutionConfig'
        description: 'The configuration to use with the solution. When <code>performAutoML</code> is set to true, Amazon Personalize only evaluates the <code>autoMLConfig</code> section of the solution configuration.'
  CreateSolutionVersionResponse:
    type: object
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the new solution version.
  CreateSolutionVersionRequest:
    type: object
    required:
      - solutionArn
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution containing the training configuration information.
      trainingMode:
        $ref: '#/definitions/TrainingMode'
        description: '<p>The scope of training to be performed when creating the solution version. The <code>FULL</code> option trains the solution version based on the entirety of the input solution''s training data, while the <code>UPDATE</code> option processes only the data that has changed in comparison to the input solution. Choose <code>UPDATE</code> when you want to incrementally update your solution version instead of creating an entirely new one.</p> <important> <p>The <code>UPDATE</code> option can only be used when you already have an active solution version created from the input solution using the <code>FULL</code> option and the input solution was trained with the <a>native-recipe-hrnn-coldstart</a> recipe.</p> </important>'
  DeleteCampaignRequest:
    type: object
    required:
      - campaignArn
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign to delete.
  DeleteDatasetRequest:
    type: object
    required:
      - datasetArn
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset to delete.
  DeleteDatasetGroupRequest:
    type: object
    required:
      - datasetGroupArn
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset group to delete.
  DeleteEventTrackerRequest:
    type: object
    required:
      - eventTrackerArn
    properties:
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event tracker to delete.
  DeleteSchemaRequest:
    type: object
    required:
      - schemaArn
    properties:
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema to delete.
  DeleteSolutionRequest:
    type: object
    required:
      - solutionArn
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution to delete.
  DescribeAlgorithmResponse:
    type: object
    properties:
      algorithm:
        $ref: '#/definitions/Algorithm'
        description: A listing of the properties of the algorithm.
  DescribeAlgorithmRequest:
    type: object
    required:
      - algorithmArn
    properties:
      algorithmArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the algorithm to describe.
  DescribeBatchInferenceJobResponse:
    type: object
    properties:
      batchInferenceJob:
        $ref: '#/definitions/BatchInferenceJob'
        description: Information on the specified batch inference job.
  DescribeBatchInferenceJobRequest:
    type: object
    required:
      - batchInferenceJobArn
    properties:
      batchInferenceJobArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the batch inference job to describe.
  DescribeCampaignResponse:
    type: object
    properties:
      campaign:
        $ref: '#/definitions/Campaign'
        description: The properties of the campaign.
  DescribeCampaignRequest:
    type: object
    required:
      - campaignArn
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
  DescribeDatasetResponse:
    type: object
    properties:
      dataset:
        $ref: '#/definitions/Dataset'
        description: A listing of the dataset's properties.
  DescribeDatasetRequest:
    type: object
    required:
      - datasetArn
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset to describe.
  DescribeDatasetGroupResponse:
    type: object
    properties:
      datasetGroup:
        $ref: '#/definitions/DatasetGroup'
        description: A listing of the dataset group's properties.
  DescribeDatasetGroupRequest:
    type: object
    required:
      - datasetGroupArn
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group to describe.
  DescribeDatasetImportJobResponse:
    type: object
    properties:
      datasetImportJob:
        $ref: '#/definitions/DatasetImportJob'
        description: '<p>Information about the dataset import job, including the status.</p> <p>The status is one of the following values:</p> <ul> <li> <p>CREATE PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
  DescribeDatasetImportJobRequest:
    type: object
    required:
      - datasetImportJobArn
    properties:
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset import job to describe.
  DescribeEventTrackerResponse:
    type: object
    properties:
      eventTracker:
        $ref: '#/definitions/EventTracker'
        description: An object that describes the event tracker.
  DescribeEventTrackerRequest:
    type: object
    required:
      - eventTrackerArn
    properties:
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event tracker to describe.
  DescribeFeatureTransformationResponse:
    type: object
    properties:
      featureTransformation:
        $ref: '#/definitions/FeatureTransformation'
        description: A listing of the FeatureTransformation properties.
  DescribeFeatureTransformationRequest:
    type: object
    required:
      - featureTransformationArn
    properties:
      featureTransformationArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the feature transformation to describe.
  DescribeRecipeResponse:
    type: object
    properties:
      recipe:
        $ref: '#/definitions/Recipe'
        description: An object that describes the recipe.
  DescribeRecipeRequest:
    type: object
    required:
      - recipeArn
    properties:
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the recipe to describe.
  DescribeSchemaResponse:
    type: object
    properties:
      schema:
        $ref: '#/definitions/DatasetSchema'
        description: The requested schema.
  DescribeSchemaRequest:
    type: object
    required:
      - schemaArn
    properties:
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema to retrieve.
  DescribeSolutionResponse:
    type: object
    properties:
      solution:
        $ref: '#/definitions/Solution'
        description: An object that describes the solution.
  DescribeSolutionRequest:
    type: object
    required:
      - solutionArn
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution to describe.
  DescribeSolutionVersionResponse:
    type: object
    properties:
      solutionVersion:
        $ref: '#/definitions/SolutionVersion'
        description: The solution version.
  DescribeSolutionVersionRequest:
    type: object
    required:
      - solutionVersionArn
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version.
  GetSolutionMetricsResponse:
    type: object
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The same solution version ARN as specified in the request.
      metrics:
        $ref: '#/definitions/Metrics'
        description: The metrics for the solution version.
  GetSolutionMetricsRequest:
    type: object
    required:
      - solutionVersionArn
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version for which to get metrics.
  ListBatchInferenceJobsResponse:
    type: object
    properties:
      batchInferenceJobs:
        $ref: '#/definitions/BatchInferenceJobs'
        description: A list containing information on each job that is returned.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retreive the next page of results. The value is <code>null</code> when there are no more results to return.
  ListBatchInferenceJobsRequest:
    type: object
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version from which the batch inference jobs were created.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token to request the next page of results.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of batch inference job results to return in each page. The default value is 100.
  InvalidNextTokenException: {}
  ListCampaignsResponse:
    type: object
    properties:
      campaigns:
        $ref: '#/definitions/Campaigns'
        description: A list of the campaigns.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of campaigns (if they exist).
  ListCampaignsRequest:
    type: object
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) of the solution to list the campaigns for. When a solution is not specified, all the campaigns associated with the account are listed.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListCampaigns</code> for getting the next set of campaigns (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of campaigns to return.
  ListDatasetGroupsResponse:
    type: object
    properties:
      datasetGroups:
        $ref: '#/definitions/DatasetGroups'
        description: The list of your dataset groups.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of dataset groups (if they exist).
  ListDatasetGroupsRequest:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListDatasetGroups</code> for getting the next set of dataset groups (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of dataset groups to return.
  ListDatasetImportJobsResponse:
    type: object
    properties:
      datasetImportJobs:
        $ref: '#/definitions/DatasetImportJobs'
        description: The list of dataset import jobs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of dataset import jobs (if they exist).
  ListDatasetImportJobsRequest:
    type: object
    properties:
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset to list the dataset import jobs for.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListDatasetImportJobs</code> for getting the next set of dataset import jobs (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of dataset import jobs to return.
  ListDatasetsResponse:
    type: object
    properties:
      datasets:
        $ref: '#/definitions/Datasets'
        description: An array of <code>Dataset</code> objects. Each object provides metadata information.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of datasets (if they exist).
  ListDatasetsRequest:
    type: object
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that contains the datasets to list.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListDatasetImportJobs</code> for getting the next set of dataset import jobs (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of datasets to return.
  ListEventTrackersResponse:
    type: object
    properties:
      eventTrackers:
        $ref: '#/definitions/EventTrackers'
        description: A list of event trackers.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of event trackers (if they exist).
  ListEventTrackersRequest:
    type: object
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The ARN of a dataset group used to filter the response.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListEventTrackers</code> for getting the next set of event trackers (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of event trackers to return.
  ListRecipesResponse:
    type: object
    properties:
      recipes:
        $ref: '#/definitions/Recipes'
        description: The list of available recipes.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of recipes.
  ListRecipesRequest:
    type: object
    properties:
      recipeProvider:
        $ref: '#/definitions/RecipeProvider'
        description: The default is <code>SERVICE</code>.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListRecipes</code> for getting the next set of recipes (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of recipes to return.
  ListSchemasResponse:
    type: object
    properties:
      schemas:
        $ref: '#/definitions/Schemas'
        description: A list of schemas.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token used to get the next set of schemas (if they exist).
  ListSchemasRequest:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListSchemas</code> for getting the next set of schemas (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of schemas to return.
  ListSolutionVersionsResponse:
    type: object
    properties:
      solutionVersions:
        $ref: '#/definitions/SolutionVersions'
        description: A list of solution versions describing the version properties.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of solution versions (if they exist).
  ListSolutionVersionsRequest:
    type: object
    properties:
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListSolutionVersions</code> for getting the next set of solution versions (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of solution versions to return.
  ListSolutionsResponse:
    type: object
    properties:
      solutions:
        $ref: '#/definitions/Solutions'
        description: A list of the current solutions.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token for getting the next set of solutions (if they exist).
  ListSolutionsRequest:
    type: object
    properties:
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token returned from the previous call to <code>ListSolutions</code> for getting the next set of solutions (if they exist).
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of solutions to return.
  UpdateCampaignResponse:
    type: object
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The same campaign ARN as given in the request.
  UpdateCampaignRequest:
    type: object
    required:
      - campaignArn
    properties:
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of a new solution version to deploy.
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
  AccountId:
    type: string
    maxLength: 256
  Name:
    type: string
    pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-_]*'
    minLength: 1
    maxLength: 63
  Arn:
    type: string
    pattern: 'arn:([a-z\d-]+):personalize:.*:.*:.+'
    maxLength: 256
  AlgorithmImage:
    type: object
    required:
      - dockerURI
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the algorithm image.
      dockerURI:
        $ref: '#/definitions/DockerURI'
        description: The URI of the Docker container for the algorithm image.
    description: Describes an algorithm image.
  HyperParameters:
    type: object
    maxProperties: 100
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
  DefaultHyperParameterRanges:
    type: object
    properties:
      integerHyperParameterRanges:
        $ref: '#/definitions/DefaultIntegerHyperParameterRanges'
        description: The integer-valued hyperparameters and their default ranges.
      continuousHyperParameterRanges:
        $ref: '#/definitions/DefaultContinuousHyperParameterRanges'
        description: The continuous hyperparameters and their default ranges.
      categoricalHyperParameterRanges:
        $ref: '#/definitions/DefaultCategoricalHyperParameterRanges'
        description: The categorical hyperparameters and their default ranges.
    description: 'Specifies the hyperparameters and their default ranges. Hyperparameters can be categorical, continuous, or integer-valued.'
  ResourceConfig:
    type: object
    maxProperties: 100
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
  TrainingInputMode:
    type: string
    maxLength: 256
  Date:
    type: string
    format: date-time
  Algorithm:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the algorithm.
      algorithmArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the algorithm.
      algorithmImage:
        $ref: '#/definitions/AlgorithmImage'
        description: The URI of the Docker container for the algorithm image.
      defaultHyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: Specifies the default hyperparameters.
      defaultHyperParameterRanges:
        $ref: '#/definitions/DefaultHyperParameterRanges'
        description: 'Specifies the default hyperparameters, their ranges, and whether they are tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).'
      defaultResourceConfig:
        $ref: '#/definitions/ResourceConfig'
        description: Specifies the default maximum number of training jobs and parallel training jobs.
      trainingInputMode:
        $ref: '#/definitions/TrainingInputMode'
        description: The training input mode.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the role.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the algorithm was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the algorithm was last updated.
    description: Describes a custom algorithm.
  DockerURI:
    type: string
    maxLength: 256
  ArnList:
    type: array
    items:
      $ref: '#/definitions/Arn'
    maxItems: 100
  MetricName:
    type: string
    maxLength: 256
  AutoMLConfig:
    type: object
    properties:
      metricName:
        $ref: '#/definitions/MetricName'
        description: The metric to optimize.
      recipeList:
        $ref: '#/definitions/ArnList'
        description: The list of candidate recipes.
    description: 'When the solution performs AutoML (<code>performAutoML</code> is true in <a>CreateSolution</a>), Amazon Personalize determines which recipe, from the specified list, optimizes the given metric. Amazon Personalize then uses that recipe for the solution.'
  AutoMLResult:
    type: object
    properties:
      bestRecipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the best recipe.
    description: 'When the solution performs AutoML (<code>performAutoML</code> is true in <a>CreateSolution</a>), specifies the recipe that best optimized the specified metric.'
  AvroSchema:
    type: string
    maxLength: 10000
  FailureReason:
    type: string
  NumBatchResults:
    type: integer
  BatchInferenceJobInput:
    type: object
    required:
      - s3DataSource
    properties:
      s3DataSource:
        $ref: '#/definitions/S3DataConfig'
        description: The URI of the Amazon S3 location that contains your input data. The Amazon S3 bucket must be in the same region as the API endpoint you are calling.
    description: The input configuration of a batch inference job.
  BatchInferenceJobOutput:
    type: object
    required:
      - s3DataDestination
    properties:
      s3DataDestination:
        $ref: '#/definitions/S3DataConfig'
        description: Information on the Amazon S3 bucket in which the batch inference job's output is stored.
    description: The output configuration parameters of a batch inference job.
  RoleArn:
    type: string
    pattern: 'arn:([a-z\d-]+):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+'
    maxLength: 256
  Status:
    type: string
    maxLength: 256
  BatchInferenceJob:
    type: object
    properties:
      jobName:
        $ref: '#/definitions/Name'
        description: The name of the batch inference job.
      batchInferenceJobArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the batch inference job.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the batch inference job failed, the reason for the failure.'
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version from which the batch inference job was created.
      numResults:
        $ref: '#/definitions/NumBatchResults'
        description: The number of recommendations generated by the batch inference job. This number includes the error messages generated for failed input records.
      jobInput:
        $ref: '#/definitions/BatchInferenceJobInput'
        description: The Amazon S3 path that leads to the input data used to generate the batch inference job.
      jobOutput:
        $ref: '#/definitions/BatchInferenceJobOutput'
        description: The Amazon S3 bucket that contains the output data generated by the batch inference job.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the Amazon Identity and Access Management (IAM) role that requested the batch inference job.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the batch inference job. The status is one of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The time at which the batch inference job was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The time at which the batch inference job was last updated.
    description: Contains information on a batch inference job.
  S3DataConfig:
    type: object
    required:
      - path
    properties:
      path:
        $ref: '#/definitions/S3Location'
        description: The file path of the Amazon S3 bucket.
      kmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of the Amazon Key Management Service (KMS) key that Amazon Personalize uses to encrypt or decrypt the input and output files of a batch inference job.
    description: The configuration details of an Amazon S3 input or output bucket.
  BatchInferenceJobSummary:
    type: object
    properties:
      batchInferenceJobArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the batch inference job.
      jobName:
        $ref: '#/definitions/Name'
        description: The name of the batch inference job.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the batch inference job. The status is one of the following values:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>IN PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The time at which the batch inference job was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The time at which the batch inference job was last updated.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If the batch inference job failed, the reason for the failure.'
    description: A truncated version of the <a>BatchInferenceJob</a> datatype. The <a>ListBatchInferenceJobs</a> operation returns a list of batch inference job summaries.
  BatchInferenceJobs:
    type: array
    items:
      $ref: '#/definitions/BatchInferenceJobSummary'
    maxItems: 100
  Boolean:
    type: boolean
  TransactionsPerSecond:
    type: integer
    minimum: 1
  CampaignUpdateSummary:
    type: object
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the deployed solution version.
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second that Amazon Personalize will support.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the campaign update.</p> <p>A campaign update can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a campaign update fails, the reason behind the failure.'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign update was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign update was last updated.
    description: 'Provides a summary of the properties of a campaign update. For a complete listing, call the <a>DescribeCampaign</a> API.'
  Campaign:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the campaign.
      campaignArn:
        $ref: '#/definitions/Arn'
        description: 'The Amazon Resource Name (ARN) of the campaign. '
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of a specific version of the solution.
      minProvisionedTPS:
        $ref: '#/definitions/TransactionsPerSecond'
        description: Specifies the requested minimum provisioned transactions (recommendations) per second.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the campaign.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a campaign fails, the reason behind the failure.'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the campaign was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the campaign was last updated.
      latestCampaignUpdate:
        $ref: '#/definitions/CampaignUpdateSummary'
    description: 'Describes a deployed solution version, otherwise known as a campaign. For more information on campaigns, see <a>CreateCampaign</a>.'
  CampaignSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the campaign.
      campaignArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the campaign.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the campaign.</p> <p>A campaign can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the campaign was last updated.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a campaign fails, the reason behind the failure.'
    description: 'Provides a summary of the properties of a campaign. For a complete listing, call the <a>DescribeCampaign</a> API.'
  Campaigns:
    type: array
    items:
      $ref: '#/definitions/CampaignSummary'
    maxItems: 100
  ParameterName:
    type: string
    maxLength: 256
  CategoricalValues:
    type: array
    items:
      $ref: '#/definitions/CategoricalValue'
    maxItems: 100
  CategoricalHyperParameterRange:
    type: object
    properties:
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      values:
        $ref: '#/definitions/CategoricalValues'
        description: A list of the categories for the hyperparameter.
    description: Provides the name and range of a categorical hyperparameter.
  CategoricalHyperParameterRanges:
    type: array
    items:
      $ref: '#/definitions/CategoricalHyperParameterRange'
    maxItems: 100
  CategoricalValue:
    type: string
    maxLength: 1000
  ContinuousMinValue:
    type: number
    format: double
    minimum: -1000000
  ContinuousMaxValue:
    type: number
    format: double
    minimum: -1000000
  ContinuousHyperParameterRange:
    type: object
    properties:
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      minValue:
        $ref: '#/definitions/ContinuousMinValue'
        description: The minimum allowable value for the hyperparameter.
      maxValue:
        $ref: '#/definitions/ContinuousMaxValue'
        description: The maximum allowable value for the hyperparameter.
    description: Provides the name and range of a continuous hyperparameter.
  ContinuousHyperParameterRanges:
    type: array
    items:
      $ref: '#/definitions/ContinuousHyperParameterRange'
    maxItems: 100
  KmsKeyArn:
    type: string
  DataSource:
    type: object
    properties:
      dataLocation:
        $ref: '#/definitions/S3Location'
        description: '<p>The path to the Amazon S3 bucket where the data that you want to upload to your dataset is stored. For example: </p> <p> <code>s3://bucket-name/training-data.csv</code> </p>'
    description: Describes the data source that contains the data to upload to a dataset.
  DatasetType:
    type: string
    maxLength: 256
  TrackingId:
    type: string
    maxLength: 256
  PerformAutoML:
    type: boolean
  EventType:
    type: string
    maxLength: 256
  SolutionConfig:
    type: object
    properties:
      eventValueThreshold:
        $ref: '#/definitions/EventValueThreshold'
        description: Only events with a value greater than or equal to this threshold are used for training a model.
      hpoConfig:
        $ref: '#/definitions/HPOConfig'
        description: Describes the properties for hyperparameter optimization (HPO).
      algorithmHyperParameters:
        $ref: '#/definitions/HyperParameters'
        description: Lists the hyperparameter names and ranges.
      featureTransformationParameters:
        $ref: '#/definitions/FeatureTransformationParameters'
        description: Lists the feature transformation parameters.
      autoMLConfig:
        $ref: '#/definitions/AutoMLConfig'
        description: The <a>AutoMLConfig</a> object containing a list of recipes to search when AutoML is performed.
    description: Describes the configuration properties for the solution.
  TrainingMode:
    type: string
    enum:
      - FULL
      - UPDATE
  S3Location:
    type: string
    maxLength: 256
  Dataset:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset that you want metadata for.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      datasetType:
        $ref: '#/definitions/DatasetType'
        description: '<p>One of the following values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> </ul>'
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the associated schema.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset.</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the dataset.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: A time stamp that shows when the dataset was updated.
    description: Provides metadata for a dataset.
  DatasetGroup:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset group.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The current status of the dataset group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul>'
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that has permissions to create the dataset group.
      kmsKeyArn:
        $ref: '#/definitions/KmsKeyArn'
        description: The Amazon Resource Name (ARN) of the KMS key used to encrypt the datasets.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the dataset group.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The last update date and time (in Unix time) of the dataset group.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If creating a dataset group fails, provides the reason why.'
    description: '<p>A dataset group is a collection of related datasets (Interactions, User, and Item). You create a dataset group by calling <a>CreateDatasetGroup</a>. You then create a dataset and add it to a dataset group by calling <a>CreateDataset</a>. The dataset group is used to create and train a solution by calling <a>CreateSolution</a>. A dataset group can contain only one of each type of dataset.</p> <p>You can specify an AWS Key Management Service (KMS) key to encrypt the datasets in the group.</p>'
  DatasetGroupSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset group.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset group.</p> <p>A dataset group can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset group was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset group was last updated.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If creating a dataset group fails, the reason behind the failure.'
    description: 'Provides a summary of the properties of a dataset group. For a complete listing, call the <a>DescribeDatasetGroup</a> API.'
  DatasetGroups:
    type: array
    items:
      $ref: '#/definitions/DatasetGroupSummary'
    maxItems: 100
  DatasetImportJob:
    type: object
    properties:
      jobName:
        $ref: '#/definitions/Name'
        description: The name of the import job.
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the dataset import job.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset that receives the imported data.
      dataSource:
        $ref: '#/definitions/DataSource'
        description: The Amazon S3 bucket that contains the training data to import.
      roleArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the AWS Identity and Access Management (IAM) role that has permissions to read from the Amazon S3 data source.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset import job.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the dataset import job.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) the dataset was last updated.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a dataset import job fails, provides the reason why.'
    description: '<p>Describes a job that imports training data from a data source (Amazon S3 bucket) to an Amazon Personalize dataset. For more information, see <a>CreateDatasetImportJob</a>.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
  DatasetImportJobSummary:
    type: object
    properties:
      datasetImportJobArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset import job.
      jobName:
        $ref: '#/definitions/Name'
        description: The name of the dataset import job.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset import job.</p> <p>A dataset import job can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset import job was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset was last updated.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a dataset import job fails, the reason behind the failure.'
    description: 'Provides a summary of the properties of a dataset import job. For a complete listing, call the <a>DescribeDatasetImportJob</a> API.'
  DatasetImportJobs:
    type: array
    items:
      $ref: '#/definitions/DatasetImportJobSummary'
    maxItems: 100
  DatasetSchema:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the schema.
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema.
      schema:
        $ref: '#/definitions/AvroSchema'
        description: The schema.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was last updated.
    description: 'Describes the schema for a dataset. For more information on schemas, see <a>CreateSchema</a>.'
  DatasetSchemaSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the schema.
      schemaArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the schema.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the schema was last updated.
    description: 'Provides a summary of the properties of a dataset schema. For a complete listing, call the <a>DescribeSchema</a> API.'
  DatasetSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the dataset.
      datasetArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset.
      datasetType:
        $ref: '#/definitions/DatasetType'
        description: '<p>The dataset type. One of the following values:</p> <ul> <li> <p>Interactions</p> </li> <li> <p>Items</p> </li> <li> <p>Users</p> </li> <li> <p>Event-Interactions</p> </li> </ul>'
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the dataset.</p> <p>A dataset can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the dataset was last updated.
    description: 'Provides a summary of the properties of a dataset. For a complete listing, call the <a>DescribeDataset</a> API.'
  Datasets:
    type: array
    items:
      $ref: '#/definitions/DatasetSummary'
    maxItems: 100
  Tunable:
    type: boolean
  DefaultCategoricalHyperParameterRange:
    type: object
    properties:
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      values:
        $ref: '#/definitions/CategoricalValues'
        description: A list of the categories for the hyperparameter.
      isTunable:
        $ref: '#/definitions/Tunable'
        description: Whether the hyperparameter is tunable.
    description: Provides the name and default range of a categorical hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
  DefaultCategoricalHyperParameterRanges:
    type: array
    items:
      $ref: '#/definitions/DefaultCategoricalHyperParameterRange'
    maxItems: 100
  DefaultContinuousHyperParameterRange:
    type: object
    properties:
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      minValue:
        $ref: '#/definitions/ContinuousMinValue'
        description: The minimum allowable value for the hyperparameter.
      maxValue:
        $ref: '#/definitions/ContinuousMaxValue'
        description: The maximum allowable value for the hyperparameter.
      isTunable:
        $ref: '#/definitions/Tunable'
        description: Whether the hyperparameter is tunable.
    description: Provides the name and default range of a continuous hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
  DefaultContinuousHyperParameterRanges:
    type: array
    items:
      $ref: '#/definitions/DefaultContinuousHyperParameterRange'
    maxItems: 100
  DefaultIntegerHyperParameterRanges:
    type: array
    items:
      $ref: '#/definitions/DefaultIntegerHyperParameterRange'
    maxItems: 100
  IntegerMinValue:
    type: integer
    minimum: -1000000
  IntegerMaxValue:
    type: integer
    maximum: 1000000
  DefaultIntegerHyperParameterRange:
    type: object
    properties:
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      minValue:
        $ref: '#/definitions/IntegerMinValue'
        description: The minimum allowable value for the hyperparameter.
      maxValue:
        $ref: '#/definitions/IntegerMaxValue'
        description: The maximum allowable value for the hyperparameter.
      isTunable:
        $ref: '#/definitions/Tunable'
        description: Indicates whether the hyperparameter is tunable.
    description: Provides the name and default range of a integer-valued hyperparameter and whether the hyperparameter is tunable. A tunable hyperparameter can have its value determined during hyperparameter optimization (HPO).
  EventTracker:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the event tracker.
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the event tracker.
      accountId:
        $ref: '#/definitions/AccountId'
        description: The Amazon AWS account that owns the event tracker.
      trackingId:
        $ref: '#/definitions/TrackingId'
        description: 'The ID of the event tracker. Include this ID in requests to the <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_UBS_PutEvents.html">PutEvents</a> API.'
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that receives the event data.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the event tracker.</p> <p>An event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the event tracker was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the event tracker was last updated.
    description: Provides information about an event tracker.
  FeatureTransformation:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the feature transformation.
      featureTransformationArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the FeatureTransformation object.
      defaultParameters:
        $ref: '#/definitions/FeaturizationParameters'
        description: Provides the default parameters for feature transformation.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the feature transformation.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The last update date and time (in Unix time) of the feature transformation.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the feature transformation.</p> <p>A feature transformation can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
    description: Provides feature transformation information. Feature transformation is the process of modifying raw input data into a form more suitable for model training.
  Recipe:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the recipe.
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the recipe.
      algorithmArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the algorithm that Amazon Personalize uses to train the model.
      featureTransformationArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the FeatureTransformation object.
      status:
        $ref: '#/definitions/Status'
        description: The status of the recipe.
      description:
        $ref: '#/definitions/Description'
        description: The description of the recipe.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the recipe was created.
      recipeType:
        $ref: '#/definitions/RecipeType'
        description: '<p>One of the following values:</p> <ul> <li> <p>PERSONALIZED_RANKING</p> </li> <li> <p>RELATED_ITEMS</p> </li> <li> <p>USER_PERSONALIZATION</p> </li> </ul>'
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix format) that the recipe was last updated.
    description: 'Provides information about a recipe. Each recipe provides an algorithm that Amazon Personalize uses in model training when you use the <a>CreateSolution</a> operation. '
  Solution:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the solution.
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution.
      performHPO:
        $ref: '#/definitions/PerformHPO'
        description: Whether to perform hyperparameter optimization (HPO) on the chosen recipe. The default is <code>false</code>.
      performAutoML:
        $ref: '#/definitions/PerformAutoML'
        description: 'When true, Amazon Personalize performs a search for the best USER_PERSONALIZATION recipe from the list specified in the solution configuration (<code>recipeArn</code> must not be specified). When false (the default), Amazon Personalize uses <code>recipeArn</code> for training.'
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the recipe used to create the solution.
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group that provides the training data.
      eventType:
        $ref: '#/definitions/EventType'
        description: 'The event type (for example, ''click'' or ''like'') that is used for training the model.'
      solutionConfig:
        $ref: '#/definitions/SolutionConfig'
        description: Describes the configuration properties for the solution.
      autoMLResult:
        $ref: '#/definitions/AutoMLResult'
        description: 'When <code>performAutoML</code> is true, specifies the best recipe found.'
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution.</p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The creation date and time (in Unix time) of the solution.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was last updated.
      latestSolutionVersion:
        $ref: '#/definitions/SolutionVersionSummary'
        description: 'Describes the latest version of the solution, including the status and the ARN.'
    description: An object that provides information about a solution. A solution is a trained model that can be deployed as a campaign.
  SolutionVersion:
    type: object
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution version.
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the solution.
      performHPO:
        $ref: '#/definitions/PerformHPO'
        description: Whether to perform hyperparameter optimization (HPO) on the chosen recipe. The default is <code>false</code>.
      performAutoML:
        $ref: '#/definitions/PerformAutoML'
        description: 'When true, Amazon Personalize searches for the most optimal recipe according to the solution configuration. When false (the default), Amazon Personalize uses <code>recipeArn</code>.'
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The ARN of the recipe used in the solution.
      eventType:
        $ref: '#/definitions/EventType'
        description: 'The event type (for example, ''click'' or ''like'') that is used for training the model.'
      datasetGroupArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the dataset group providing the training data.
      solutionConfig:
        $ref: '#/definitions/SolutionConfig'
        description: Describes the configuration properties for the solution.
      trainingHours:
        $ref: '#/definitions/TrainingHours'
        description: The time used to train the model. You are billed for the time it takes to train a model. This field is visible only after Amazon Personalize successfully trains a model.
      trainingMode:
        $ref: '#/definitions/TrainingMode'
        description: '<p>The scope of training used to create the solution version. The <code>FULL</code> option trains the solution version based on the entirety of the input solution''s training data, while the <code>UPDATE</code> option processes only the training data that has changed since the creation of the last solution version. Choose <code>UPDATE</code> when you want to start recommending items added to the dataset without retraining the model.</p> <important> <p>The <code>UPDATE</code> option can only be used after you''ve created a solution version with the <code>FULL</code> option and the training solution uses the <a>native-recipe-hrnn-coldstart</a>.</p> </important>'
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution version.</p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING</p> </li> <li> <p>CREATE IN_PROGRESS</p> </li> <li> <p>ACTIVE</p> </li> <li> <p>CREATE FAILED</p> </li> </ul>'
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If training a solution version fails, the reason for the failure.'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that this version of the solution was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was last updated.
    description: An object that provides information about a specific version of a <a>Solution</a>.
  Description:
    type: string
  EventTrackerSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the event tracker.
      eventTrackerArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the event tracker.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the event tracker.</p> <p>An event tracker can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the event tracker was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the event tracker was last updated.
    description: 'Provides a summary of the properties of an event tracker. For a complete listing, call the <a>DescribeEventTracker</a> API.'
  EventTrackers:
    type: array
    items:
      $ref: '#/definitions/EventTrackerSummary'
    maxItems: 100
  EventValueThreshold:
    type: string
    maxLength: 256
  FeaturizationParameters:
    type: object
    maxProperties: 100
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
  ParameterValue:
    type: string
    maxLength: 1000
  FeatureTransformationParameters:
    type: object
    maxProperties: 100
    additionalProperties:
      $ref: '#/definitions/ParameterValue'
  Metrics:
    type: object
    maxProperties: 100
    additionalProperties:
      $ref: '#/definitions/MetricValue'
  HPOObjective:
    type: object
    properties:
      type:
        $ref: '#/definitions/HPOObjectiveType'
        description: The data type of the metric.
      metricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      metricRegex:
        $ref: '#/definitions/MetricRegex'
        description: A regular expression for finding the metric in the training job logs.
    description: The metric to optimize during hyperparameter optimization (HPO).
  HPOResourceConfig:
    type: object
    properties:
      maxNumberOfTrainingJobs:
        $ref: '#/definitions/HPOResource'
        description: The maximum number of training jobs when you create a solution version. The maximum value for <code>maxNumberOfTrainingJobs</code> is <code>40</code>.
      maxParallelTrainingJobs:
        $ref: '#/definitions/HPOResource'
        description: The maximum number of parallel training jobs when you create a solution version. The maximum value for <code>maxParallelTrainingJobs</code> is <code>10</code>.
    description: Describes the resource configuration for hyperparameter optimization (HPO).
  HyperParameterRanges:
    type: object
    properties:
      integerHyperParameterRanges:
        $ref: '#/definitions/IntegerHyperParameterRanges'
        description: The integer-valued hyperparameters and their ranges.
      continuousHyperParameterRanges:
        $ref: '#/definitions/ContinuousHyperParameterRanges'
        description: The continuous hyperparameters and their ranges.
      categoricalHyperParameterRanges:
        $ref: '#/definitions/CategoricalHyperParameterRanges'
        description: The categorical hyperparameters and their ranges.
    description: 'Specifies the hyperparameters and their ranges. Hyperparameters can be categorical, continuous, or integer-valued.'
  HPOConfig:
    type: object
    properties:
      hpoObjective:
        $ref: '#/definitions/HPOObjective'
        description: The metric to optimize during HPO.
      hpoResourceConfig:
        $ref: '#/definitions/HPOResourceConfig'
        description: Describes the resource configuration for HPO.
      algorithmHyperParameterRanges:
        $ref: '#/definitions/HyperParameterRanges'
        description: The hyperparameters and their allowable ranges.
    description: Describes the properties for hyperparameter optimization (HPO). For use with the bring-your-own-recipe feature. Do not use for Amazon Personalize native recipes.
  HPOObjectiveType:
    type: string
    maxLength: 256
  MetricRegex:
    type: string
    maxLength: 256
  HPOResource:
    type: string
    maxLength: 256
  IntegerHyperParameterRanges:
    type: array
    items:
      $ref: '#/definitions/IntegerHyperParameterRange'
    maxItems: 100
  IntegerHyperParameterRange:
    type: object
    properties:
      name:
        $ref: '#/definitions/ParameterName'
        description: The name of the hyperparameter.
      minValue:
        $ref: '#/definitions/IntegerMinValue'
        description: The minimum allowable value for the hyperparameter.
      maxValue:
        $ref: '#/definitions/IntegerMaxValue'
        description: The maximum allowable value for the hyperparameter.
    description: Provides the name and range of an integer-valued hyperparameter.
  NextToken:
    type: string
    maxLength: 1300
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  RecipeProvider:
    type: string
    enum:
      - SERVICE
  Recipes:
    type: array
    items:
      $ref: '#/definitions/RecipeSummary'
    maxItems: 100
  Schemas:
    type: array
    items:
      $ref: '#/definitions/DatasetSchemaSummary'
    maxItems: 100
  SolutionVersions:
    type: array
    items:
      $ref: '#/definitions/SolutionVersionSummary'
    maxItems: 100
  Solutions:
    type: array
    items:
      $ref: '#/definitions/SolutionSummary'
    maxItems: 100
  MetricValue:
    type: number
    format: double
  PerformHPO:
    type: boolean
  RecipeType:
    type: string
    maxLength: 256
  RecipeSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the recipe.
      recipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the recipe.
      status:
        $ref: '#/definitions/Status'
        description: The status of the recipe.
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the recipe was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the recipe was last updated.
    description: 'Provides a summary of the properties of a recipe. For a complete listing, call the <a>DescribeRecipe</a> API.'
  SolutionVersionSummary:
    type: object
    properties:
      solutionVersionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution version.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution version.</p> <p>A solution version can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that this version of a solution was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution version was last updated.
      failureReason:
        $ref: '#/definitions/FailureReason'
        description: 'If a solution version fails, the reason behind the failure.'
    description: 'Provides a summary of the properties of a solution version. For a complete listing, call the <a>DescribeSolutionVersion</a> API.'
  SolutionSummary:
    type: object
    properties:
      name:
        $ref: '#/definitions/Name'
        description: The name of the solution.
      solutionArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the solution.
      status:
        $ref: '#/definitions/Status'
        description: '<p>The status of the solution.</p> <p>A solution can be in one of the following states:</p> <ul> <li> <p>CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED</p> </li> <li> <p>DELETE PENDING &gt; DELETE IN_PROGRESS</p> </li> </ul>'
      creationDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was created.
      lastUpdatedDateTime:
        $ref: '#/definitions/Date'
        description: The date and time (in Unix time) that the solution was last updated.
    description: 'Provides a summary of the properties of a solution. For a complete listing, call the <a>DescribeSolution</a> API.'
  TrainingHours:
    type: number
    format: double
    minimum: 0
