swagger: '2.0'
info:
  version: '2018-10-23'
  x-release: v4
  title: AWS IoT Events Data
  description: 'AWS IoT Events monitors your equipment or device fleets for failures or changes in operation, and triggers actions when such events occur. AWS IoT Events Data API commands enable you to send inputs to detectors, list detectors, and view or update a detector''s status.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iotevents-data
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotevents-data-2018-10-23.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iotevents/'
host: data.iotevents.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://data.iotevents.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT Events Data multi-region endpoint
  - url: 'https://data.iotevents.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT Events Data multi-region endpoint
  - url: 'http://data.iotevents.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://data.iotevents.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Events Data endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /inputs/messages:
    post:
      operationId: BatchPutMessage
      description: 'Sends a set of messages to the AWS IoT Events system. Each message payload is transformed into the input you specify (<code>"inputName"</code>) and ingested into any detectors that monitor that input. If multiple messages are sent, the order in which the messages are processed isn''t guaranteed. To guarantee ordering, you must send messages one at a time and wait for a successful response.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchPutMessageResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - messages
            properties:
              messages:
                description: 'The list of messages to send. Each message has the following format: <code>''{ "messageId": "string", "inputName": "string", "payload": "string"}''</code> '
                type: array
                items:
                  $ref: '#/definitions/Message'
                minItems: 1
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /detectors:
    post:
      operationId: BatchUpdateDetector
      description: 'Updates the state, variable values, and timer settings of one or more detectors (instances) of a specified detector model.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchUpdateDetectorResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - detectors
            properties:
              detectors:
                description: 'The list of detectors (instances) to update, along with the values to update.'
                type: array
                items:
                  $ref: '#/definitions/UpdateDetectorRequest'
                minItems: 1
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detectors/{detectorModelName}/keyValues/':
    get:
      operationId: DescribeDetector
      description: Returns information about the specified detector (instance).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDetectorResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: detectorModelName
          in: path
          required: true
          description: The name of the detector model whose detectors (instances) you want information about.
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          minLength: 1
          maxLength: 128
        - name: keyValue
          in: query
          required: false
          description: A filter used to limit results to detectors (instances) created because of the given key ID.
          type: string
          pattern: '^[a-zA-Z0-9\-_:]+$'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/detectors/{detectorModelName}':
    get:
      operationId: ListDetectors
      description: Lists detectors (the instances of a detector model).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDetectorsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: detectorModelName
          in: path
          required: true
          description: The name of the detector model whose detectors (instances) are listed.
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          minLength: 1
          maxLength: 128
        - name: stateName
          in: query
          required: false
          description: A filter that limits results to those detectors (instances) in the given state.
          type: string
          minLength: 1
          maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  BatchPutMessageResponse:
    type: object
    properties:
      BatchPutMessageErrorEntries:
        $ref: '#/definitions/BatchPutMessageErrorEntries'
        description: A list of any errors encountered when sending the messages.
  Message:
    type: object
    required:
      - messageId
      - inputName
      - payload
    properties:
      messageId:
        $ref: '#/definitions/MessageId'
        description: 'The ID to assign to the message. Within each batch sent, each <code>"messageId"</code> must be unique.'
      inputName:
        $ref: '#/definitions/InputName'
        description: The name of the input into which the message payload is transformed.
      payload:
        $ref: '#/definitions/Payload'
        description: The payload of the message. This can be a JSON string or a Base-64-encoded string representing binary data (in which case you must decode it).
    description: Information about a message.
  InvalidRequestException: {}
  InternalFailureException: {}
  ServiceUnavailableException: {}
  ThrottlingException: {}
  BatchUpdateDetectorResponse:
    type: object
    properties:
      batchUpdateDetectorErrorEntries:
        $ref: '#/definitions/BatchUpdateDetectorErrorEntries'
        description: 'A list of those detector updates that resulted in errors. (If an error is listed here, the specific update did not occur.)'
  UpdateDetectorRequest:
    type: object
    required:
      - messageId
      - detectorModelName
      - state
    properties:
      messageId:
        $ref: '#/definitions/MessageId'
        description: The ID to assign to the detector update <code>"message"</code>. Each <code>"messageId"</code> must be unique within each batch sent.
      detectorModelName:
        $ref: '#/definitions/DetectorModelName'
        description: The name of the detector model that created the detectors (instances).
      keyValue:
        $ref: '#/definitions/KeyValue'
        description: The value of the input key attribute (identifying the device or system) that caused the creation of this detector (instance).
      state:
        $ref: '#/definitions/DetectorStateDefinition'
        description: 'The new state, variable values, and timer settings of the detector (instance).'
    description: Information used to update the detector (instance).
  DescribeDetectorResponse:
    type: object
    properties:
      detector:
        $ref: '#/definitions/Detector'
        description: Information about the detector (instance).
  ResourceNotFoundException: {}
  ListDetectorsResponse:
    type: object
    properties:
      detectorSummaries:
        $ref: '#/definitions/DetectorSummaries'
        description: A list of summary information about the detectors (instances).
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  BatchPutMessageErrorEntry:
    type: object
    properties:
      messageId:
        $ref: '#/definitions/MessageId'
        description: The ID of the message that caused the error. (See the value corresponding to the <code>"messageId"</code> key in the <code>"message"</code> object.)
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: The code associated with the error.
      errorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: More information about the error.
    description: Contains information about the errors encountered.
  BatchPutMessageErrorEntries:
    type: array
    items:
      $ref: '#/definitions/BatchPutMessageErrorEntry'
  MessageId:
    type: string
    pattern: '^[a-zA-Z0-9_-]+$'
    minLength: 1
    maxLength: 64
  ErrorCode:
    type: string
    enum:
      - ResourceNotFoundException
      - InvalidRequestException
      - InternalFailureException
      - ServiceUnavailableException
      - ThrottlingException
  ErrorMessage:
    type: string
  Messages:
    type: array
    items:
      $ref: '#/definitions/Message'
    minItems: 1
  BatchPutMessageRequest:
    type: object
    required:
      - messages
    properties:
      messages:
        $ref: '#/definitions/Messages'
        description: 'The list of messages to send. Each message has the following format: <code>''{ "messageId": "string", "inputName": "string", "payload": "string"}''</code> '
  BatchUpdateDetectorErrorEntry:
    type: object
    properties:
      messageId:
        $ref: '#/definitions/MessageId'
        description: The <code>"messageId"</code> of the update request that caused the error. (The value of the <code>"messageId"</code> in the update request <code>"Detector"</code> object.)
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: The code of the error.
      errorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: A message describing the error.
    description: Information about the error that occured when attempting to update a detector.
  BatchUpdateDetectorErrorEntries:
    type: array
    items:
      $ref: '#/definitions/BatchUpdateDetectorErrorEntry'
  UpdateDetectorRequests:
    type: array
    items:
      $ref: '#/definitions/UpdateDetectorRequest'
    minItems: 1
  BatchUpdateDetectorRequest:
    type: object
    required:
      - detectors
    properties:
      detectors:
        $ref: '#/definitions/UpdateDetectorRequests'
        description: 'The list of detectors (instances) to update, along with the values to update.'
  DetectorModelName:
    type: string
    pattern: '^[a-zA-Z0-9_-]+$'
    minLength: 1
    maxLength: 128
  KeyValue:
    type: string
    pattern: '^[a-zA-Z0-9\-_:]+$'
    minLength: 1
    maxLength: 128
  DescribeDetectorRequest:
    type: object
    properties: {}
  Detector:
    type: object
    properties:
      detectorModelName:
        $ref: '#/definitions/DetectorModelName'
        description: The name of the detector model that created this detector (instance).
      keyValue:
        $ref: '#/definitions/KeyValue'
        description: The value of the key (identifying the device or system) that caused the creation of this detector (instance).
      detectorModelVersion:
        $ref: '#/definitions/DetectorModelVersion'
        description: The version of the detector model that created this detector (instance).
      state:
        $ref: '#/definitions/DetectorState'
        description: The current state of the detector (instance).
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was last updated.
    description: Information about the detector (instance).
  DetectorModelVersion:
    type: string
    minLength: 1
    maxLength: 128
  DetectorState:
    type: object
    required:
      - stateName
      - variables
      - timers
    properties:
      stateName:
        $ref: '#/definitions/StateName'
        description: The name of the state.
      variables:
        $ref: '#/definitions/Variables'
        description: The current values of the detector's variables.
      timers:
        $ref: '#/definitions/Timers'
        description: The current state of the detector's timers.
    description: Information about the current state of the detector instance.
  Timestamp:
    type: string
    format: date-time
  StateName:
    type: string
    minLength: 1
    maxLength: 128
  Variables:
    type: array
    items:
      $ref: '#/definitions/Variable'
  Timers:
    type: array
    items:
      $ref: '#/definitions/Timer'
  VariableDefinitions:
    type: array
    items:
      $ref: '#/definitions/VariableDefinition'
  TimerDefinitions:
    type: array
    items:
      $ref: '#/definitions/TimerDefinition'
  DetectorStateDefinition:
    type: object
    required:
      - stateName
      - variables
      - timers
    properties:
      stateName:
        $ref: '#/definitions/StateName'
        description: The name of the new state of the detector (instance).
      variables:
        $ref: '#/definitions/VariableDefinitions'
        description: The new values of the detector's variables. Any variable whose value isn't specified is cleared.
      timers:
        $ref: '#/definitions/TimerDefinitions'
        description: 'The new values of the detector''s timers. Any timer whose value isn''t specified is cleared, and its timeout event won''t occur.'
    description: 'The new state, variable values, and timer settings of the detector (instance).'
  DetectorStateSummary:
    type: object
    properties:
      stateName:
        $ref: '#/definitions/StateName'
        description: The name of the state.
    description: Information about the detector state.
  DetectorSummary:
    type: object
    properties:
      detectorModelName:
        $ref: '#/definitions/DetectorModelName'
        description: The name of the detector model that created this detector (instance).
      keyValue:
        $ref: '#/definitions/KeyValue'
        description: The value of the key (identifying the device or system) that caused the creation of this detector (instance).
      detectorModelVersion:
        $ref: '#/definitions/DetectorModelVersion'
        description: The version of the detector model that created this detector (instance).
      state:
        $ref: '#/definitions/DetectorStateSummary'
        description: The current state of the detector (instance).
      creationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was created.
      lastUpdateTime:
        $ref: '#/definitions/Timestamp'
        description: The time the detector (instance) was last updated.
    description: Information about the detector (instance).
  DetectorSummaries:
    type: array
    items:
      $ref: '#/definitions/DetectorSummary'
  InputName:
    type: string
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    minLength: 1
    maxLength: 128
  NextToken:
    type: string
  MaxResults:
    type: integer
    minimum: 1
    maximum: 250
  ListDetectorsRequest:
    type: object
    properties: {}
  Payload:
    type: string
  Seconds:
    type: integer
  TimerName:
    type: string
    minLength: 1
    maxLength: 128
  Timer:
    type: object
    required:
      - name
      - timestamp
    properties:
      name:
        $ref: '#/definitions/TimerName'
        description: The name of the timer.
      timestamp:
        $ref: '#/definitions/Timestamp'
        description: The number of seconds which have elapsed on the timer.
    description: The current state of a timer.
  TimerDefinition:
    type: object
    required:
      - name
      - seconds
    properties:
      name:
        $ref: '#/definitions/TimerName'
        description: The name of the timer.
      seconds:
        $ref: '#/definitions/Seconds'
        description: The new setting of the timer (the number of seconds before the timer elapses).
    description: The new setting of a timer.
  VariableName:
    type: string
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    minLength: 1
    maxLength: 128
  VariableValue:
    type: string
    minLength: 1
    maxLength: 1024
  Variable:
    type: object
    required:
      - name
      - value
    properties:
      name:
        $ref: '#/definitions/VariableName'
        description: The name of the variable.
      value:
        $ref: '#/definitions/VariableValue'
        description: The current value of the variable.
    description: The current state of the variable.
  VariableDefinition:
    type: object
    required:
      - name
      - value
    properties:
      name:
        $ref: '#/definitions/VariableName'
        description: The name of the variable.
      value:
        $ref: '#/definitions/VariableValue'
        description: The new value of the variable.
    description: The new value of the variable.
