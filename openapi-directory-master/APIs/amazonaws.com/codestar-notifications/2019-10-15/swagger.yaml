swagger: '2.0'
info:
  version: '2019-10-15'
  x-release: v4
  title: AWS CodeStar Notifications
  description: '<p>This AWS CodeStar Notifications API Reference provides descriptions and usage examples of the operations and data types for the AWS CodeStar Notifications API. You can use the AWS CodeStar Notifications API to work with the following objects:</p> <p>Notification rules, by calling the following: </p> <ul> <li> <p> <a>CreateNotificationRule</a>, which creates a notification rule for a resource in your account. </p> </li> <li> <p> <a>DeleteNotificationRule</a>, which deletes a notification rule. </p> </li> <li> <p> <a>DescribeNotificationRule</a>, which provides information about a notification rule. </p> </li> <li> <p> <a>ListNotificationRules</a>, which lists the notification rules associated with your account. </p> </li> <li> <p> <a>UpdateNotificationRule</a>, which changes the name, events, or targets associated with a notification rule. </p> </li> <li> <p> <a>Subscribe</a>, which subscribes a target to a notification rule. </p> </li> <li> <p> <a>Unsubscribe</a>, which removes a target from a notification rule. </p> </li> </ul> <p>Targets, by calling the following: </p> <ul> <li> <p> <a>DeleteTarget</a>, which removes a notification rule target (SNS topic) from a notification rule. </p> </li> <li> <p> <a>ListTargets</a>, which lists the targets associated with a notification rule. </p> </li> </ul> <p>Events, by calling the following: </p> <ul> <li> <p> <a>ListEventTypes</a>, which lists the event types you can include in a notification rule. </p> </li> </ul> <p>Tags, by calling the following: </p> <ul> <li> <p> <a>ListTagsForResource</a>, which lists the tags already associated with a notification rule in your account. </p> </li> <li> <p> <a>TagResource</a>, which associates a tag you provide with a notification rule in your account. </p> </li> <li> <p> <a>UntagResource</a>, which removes a tag from a notification rule in your account. </p> </li> </ul> <p> For information about how to use AWS CodeStar Notifications, see link in the CodeStarNotifications User Guide. </p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: codestar-notifications
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codestar-notifications-2019-10-15.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/codestar-notifications/'
host: codestar-notifications.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://codestar-notifications.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS CodeStar Notifications multi-region endpoint
  - url: 'https://codestar-notifications.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS CodeStar Notifications multi-region endpoint
  - url: 'http://codestar-notifications.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS CodeStar Notifications endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://codestar-notifications.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS CodeStar Notifications endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /createNotificationRule:
    post:
      operationId: CreateNotificationRule
      description: Creates a notification rule for a resource. The rule specifies the events you want notifications about and the targets (such as SNS topics) where you want to receive them.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateNotificationRuleResult'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ConfigurationException
          schema:
            $ref: '#/definitions/ConfigurationException'
        '484':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Name
              - EventTypeIds
              - Resource
              - Targets
              - DetailType
            properties:
              Name:
                description: The name for the notification rule. Notifictaion rule names must be unique in your AWS account.
                type: string
                pattern: '[A-Za-z0-9\-_ ]+$'
                minLength: 1
                maxLength: 64
                format: password
              EventTypeIds:
                description: 'A list of event types associated with this notification rule. For a list of allowed events, see <a>EventTypeSummary</a>.'
                type: array
                items:
                  $ref: '#/definitions/EventTypeId'
              Resource:
                description: 'The Amazon Resource Name (ARN) of the resource to associate with the notification rule. Supported resources include pipelines in AWS CodePipeline, repositories in AWS CodeCommit, and build projects in AWS CodeBuild.'
                type: string
                pattern: '^arn:aws[^:\s]*:[^:\s]*:[^:\s]*:[0-9]{12}:[^\s]+$'
              Targets:
                description: A list of Amazon Resource Names (ARNs) of SNS topics to associate with the notification rule.
                type: array
                items:
                  $ref: '#/definitions/Target'
                maxItems: 10
              DetailType:
                description: The level of detail to include in the notifications for this resource. BASIC will include only the contents of the event as it would appear in AWS CloudWatch. FULL will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
                type: string
                enum:
                  - BASIC
                  - FULL
              ClientRequestToken:
                description: '<p>A unique, client-generated idempotency token that, when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request with the same parameters is received and a token is included, the request returns information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If you are using an AWS SDK, an idempotency token is created for you.</p> </note>'
                type: string
                pattern: '^[\w:/-]+$'
                minLength: 1
                maxLength: 256
              Tags:
                description: 'A list of tags to apply to this notification rule. Key names cannot start with "aws". '
                type: object
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              Status:
                description: 'The status of the notification rule. The default value is ENABLED. If the status is set to DISABLED, notifications aren''t sent for the notification rule.'
                type: string
                enum:
                  - ENABLED
                  - DISABLED
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteNotificationRule:
    post:
      operationId: DeleteNotificationRule
      description: Deletes a notification rule for a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteNotificationRuleResult'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) of the notification rule you want to delete.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteTarget:
    post:
      operationId: DeleteTarget
      description: Deletes a specified target for notifications.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTargetResult'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - TargetAddress
            properties:
              TargetAddress:
                description: The Amazon Resource Name (ARN) of the SNS topic to delete.
                type: string
                minLength: 1
                maxLength: 320
                format: password
              ForceUnsubscribeAll:
                description: 'A Boolean value that can be used to delete all associations with this SNS topic. The default value is FALSE. If set to TRUE, all associations between that target and every notification rule in your AWS account are deleted.'
                type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeNotificationRule:
    post:
      operationId: DescribeNotificationRule
      description: Returns information about a specified notification rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeNotificationRuleResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) of the notification rule.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listEventTypes:
    post:
      operationId: ListEventTypes
      description: Returns information about the event types available for configuring notifications.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListEventTypesResult'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Filters:
                description: The filters to use to return information by service or resource type.
                type: array
                items:
                  $ref: '#/definitions/ListEventTypesFilter'
              NextToken:
                description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
                type: string
                pattern: '^[\w/+=]+$'
              MaxResults:
                description: A non-negative integer used to limit the number of returned results. The default number is 50. The maximum number of results that can be returned is 100.
                type: integer
                minimum: 1
                maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listNotificationRules:
    post:
      operationId: ListNotificationRules
      description: Returns a list of the notification rules for an AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListNotificationRulesResult'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Filters:
                description: '<p>The filters to use to return information by service or resource type. For valid values, see <a>ListNotificationRulesFilter</a>.</p> <note> <p>A filter with the same name can appear more than once when used with OR statements. Filters with different names should be applied with AND statements.</p> </note>'
                type: array
                items:
                  $ref: '#/definitions/ListNotificationRulesFilter'
              NextToken:
                description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
                type: string
                pattern: '^[\w/+=]+$'
              MaxResults:
                description: A non-negative integer used to limit the number of returned results. The maximum number of results that can be returned is 100.
                type: integer
                minimum: 1
                maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Returns a list of the tags associated with a notification rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) for the notification rule.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listTargets:
    post:
      operationId: ListTargets
      description: Returns a list of the notification rule targets for an AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTargetsResult'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Filters:
                description: '<p>The filters to use to return information by service or resource type. Valid filters include target type, target address, and target status.</p> <note> <p>A filter with the same name can appear more than once when used with OR statements. Filters with different names should be applied with AND statements.</p> </note>'
                type: array
                items:
                  $ref: '#/definitions/ListTargetsFilter'
              NextToken:
                description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
                type: string
                pattern: '^[\w/+=]+$'
              MaxResults:
                description: A non-negative integer used to limit the number of returned results. The maximum number of results that can be returned is 100.
                type: integer
                minimum: 1
                maximum: 100
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /subscribe:
    post:
      operationId: Subscribe
      description: Creates an association between a notification rule and an SNS topic so that the associated target can receive notifications when the events described in the rule are triggered.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SubscribeResult'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
              - Target
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) of the notification rule for which you want to create the association.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
              Target:
                description: Information about the SNS topics associated with a notification rule.
                type: object
                properties:
                  TargetType:
                    $ref: '#/definitions/TargetType'
                    description: The target type. Can be an Amazon SNS topic.
                  TargetAddress:
                    $ref: '#/definitions/TargetAddress'
                    description: The Amazon Resource Name (ARN) of the SNS topic.
              ClientRequestToken:
                description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
                type: string
                pattern: '^[\w:/-]+$'
                minLength: 1
                maxLength: 256
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /tagResource:
    post:
      operationId: TagResource
      description: Associates a set of provided tags with a notification rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
              - Tags
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) of the notification rule to tag.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
              Tags:
                description: The list of tags to associate with the resource. Tag key names cannot start with "aws".
                type: object
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /unsubscribe:
    post:
      operationId: Unsubscribe
      description: Removes an association between a notification rule and an Amazon SNS topic so that subscribers to that topic stop receiving notifications when the events described in the rule are triggered.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnsubscribeResult'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
              - TargetAddress
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) of the notification rule.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
              TargetAddress:
                description: The ARN of the SNS topic to unsubscribe from the notification rule.
                type: string
                minLength: 1
                maxLength: 320
                format: password
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /untagResource:
    post:
      operationId: UntagResource
      description: Removes the association between one or more provided tags and a notification rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResult'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
              - TagKeys
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) of the notification rule from which to remove the tags.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
              TagKeys:
                description: The key names of the tags to remove.
                type: array
                items:
                  $ref: '#/definitions/TagKey'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateNotificationRule:
    post:
      operationId: UpdateNotificationRule
      description: '<p>Updates a notification rule for a resource. You can change the events that trigger the notification rule, the status of the rule, and the targets that receive the notifications.</p> <note> <p>To add or remove tags for a notification rule, you must use <a>TagResource</a> and <a>UntagResource</a>.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNotificationRuleResult'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Arn
            properties:
              Arn:
                description: The Amazon Resource Name (ARN) of the notification rule.
                type: string
                pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
              Name:
                description: The name of the notification rule.
                type: string
                pattern: '[A-Za-z0-9\-_ ]+$'
                minLength: 1
                maxLength: 64
                format: password
              Status:
                description: The status of the notification rule. Valid statuses include enabled (sending notifications) or disabled (not sending notifications).
                type: string
                enum:
                  - ENABLED
                  - DISABLED
              EventTypeIds:
                description: A list of event types associated with this notification rule.
                type: array
                items:
                  $ref: '#/definitions/EventTypeId'
              Targets:
                description: The address and type of the targets to receive notifications from this notification rule.
                type: array
                items:
                  $ref: '#/definitions/Target'
                maxItems: 10
              DetailType:
                description: The level of detail to include in the notifications for this resource. BASIC will include only the contents of the event as it would appear in AWS CloudWatch. FULL will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
                type: string
                enum:
                  - BASIC
                  - FULL
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateNotificationRuleResult:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule.
  EventTypeId:
    type: string
    minLength: 1
    maxLength: 200
  Target:
    type: object
    properties:
      TargetType:
        $ref: '#/definitions/TargetType'
        description: The target type. Can be an Amazon SNS topic.
      TargetAddress:
        $ref: '#/definitions/TargetAddress'
        description: The Amazon Resource Name (ARN) of the SNS topic.
    description: Information about the SNS topics associated with a notification rule.
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    maxLength: 256
  ResourceAlreadyExistsException: {}
  ValidationException: {}
  LimitExceededException: {}
  ConfigurationException: {}
  ConcurrentModificationException: {}
  AccessDeniedException: {}
  DeleteNotificationRuleResult:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the deleted notification rule.
  DeleteTargetResult:
    type: object
    properties: {}
  DescribeNotificationRuleResult:
    type: object
    required:
      - Arn
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule.
      Name:
        $ref: '#/definitions/NotificationRuleName'
        description: The name of the notification rule.
      EventTypes:
        $ref: '#/definitions/EventTypeBatch'
        description: A list of the event types associated with the notification rule.
      Resource:
        $ref: '#/definitions/NotificationRuleResource'
        description: The Amazon Resource Name (ARN) of the resource associated with the notification rule.
      Targets:
        $ref: '#/definitions/TargetsBatch'
        description: A list of the SNS topics associated with the notification rule.
      DetailType:
        $ref: '#/definitions/DetailType'
        description: The level of detail included in the notifications for this resource. BASIC will include only the contents of the event as it would appear in AWS CloudWatch. FULL will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
      CreatedBy:
        $ref: '#/definitions/NotificationRuleCreatedBy'
        description: The name or email alias of the person who created the notification rule.
      Status:
        $ref: '#/definitions/NotificationRuleStatus'
        description: The status of the notification rule. Valid statuses are on (sending notifications) or off (not sending notifications).
      CreatedTimestamp:
        $ref: '#/definitions/CreatedTimestamp'
        description: 'The date and time the notification rule was created, in timestamp format.'
      LastModifiedTimestamp:
        $ref: '#/definitions/LastModifiedTimestamp'
        description: 'The date and time the notification rule was most recently updated, in timestamp format.'
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags associated with the notification rule.
  ResourceNotFoundException: {}
  ListEventTypesResult:
    type: object
    properties:
      EventTypes:
        $ref: '#/definitions/EventTypeBatch'
        description: 'Information about each event, including service name, resource type, event ID, and event name.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: An enumeration token that can be used in a request to return the next batch of the results.
  ListEventTypesFilter:
    type: object
    required:
      - Name
      - Value
    properties:
      Name:
        $ref: '#/definitions/ListEventTypesFilterName'
        description: The system-generated name of the filter type you want to filter by.
      Value:
        $ref: '#/definitions/ListEventTypesFilterValue'
        description: 'The name of the resource type (for example, pipeline) or service name (for example, CodePipeline) that you want to filter by.'
    description: Information about a filter to apply to the list of returned event types. You can filter by resource type or service name.
  InvalidNextTokenException: {}
  ListNotificationRulesResult:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: An enumeration token that can be used in a request to return the next batch of the results.
      NotificationRules:
        $ref: '#/definitions/NotificationRuleBatch'
        description: 'The list of notification rules for the AWS account, by Amazon Resource Name (ARN) and ID. '
  ListNotificationRulesFilter:
    type: object
    required:
      - Name
      - Value
    properties:
      Name:
        $ref: '#/definitions/ListNotificationRulesFilterName'
        description: The name of the attribute you want to use to filter the returned notification rules.
      Value:
        $ref: '#/definitions/ListNotificationRulesFilterValue'
        description: 'The value of the attribute you want to use to filter the returned notification rules. For example, if you specify filtering by <i>RESOURCE</i> in Name, you might specify the ARN of a pipeline in AWS CodePipeline for the value.'
    description: 'Information about a filter to apply to the list of returned notification rules. You can filter by event type, owner, resource, or target.'
  ListTagsForResourceResult:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags associated with the notification rule.
  ListTargetsResult:
    type: object
    properties:
      Targets:
        $ref: '#/definitions/TargetsBatch'
        description: 'The list of notification rule targets. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: An enumeration token that can be used in a request to return the next batch of results.
  ListTargetsFilter:
    type: object
    required:
      - Name
      - Value
    properties:
      Name:
        $ref: '#/definitions/ListTargetsFilterName'
        description: The name of the attribute you want to use to filter the returned targets.
      Value:
        $ref: '#/definitions/ListTargetsFilterValue'
        description: 'The value of the attribute you want to use to filter the returned targets. For example, if you specify <i>SNS</i> for the Target type, you could specify an Amazon Resource Name (ARN) for a topic as the value.'
    description: 'Information about a filter to apply to the list of returned targets. You can filter by target type, address, or status. For example, to filter results to notification rules that have active Amazon SNS topics as targets, you could specify a ListTargetsFilter Name as TargetType and a Value of SNS, and a Name of TARGET_STATUS and a Value of ACTIVE.'
  SubscribeResult:
    type: object
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule for which you have created assocations.
  TargetType:
    type: string
    pattern: '^[A-Za-z]+$'
  TargetAddress:
    type: string
    minLength: 1
    maxLength: 320
    format: password
  TagResourceResult:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: The list of tags associated with the resource.
  UnsubscribeResult:
    type: object
    required:
      - Arn
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the the notification rule from which you have removed a subscription.
  UntagResourceResult:
    type: object
    properties: {}
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  UpdateNotificationRuleResult:
    type: object
    properties: {}
  ClientRequestToken:
    type: string
    pattern: '^[\w:/-]+$'
    minLength: 1
    maxLength: 256
  NotificationRuleName:
    type: string
    pattern: '[A-Za-z0-9\-_ ]+$'
    minLength: 1
    maxLength: 64
    format: password
  EventTypeIds:
    type: array
    items:
      $ref: '#/definitions/EventTypeId'
  NotificationRuleResource:
    type: string
    pattern: '^arn:aws[^:\s]*:[^:\s]*:[^:\s]*:[0-9]{12}:[^\s]+$'
  Targets:
    type: array
    items:
      $ref: '#/definitions/Target'
    maxItems: 10
  DetailType:
    type: string
    enum:
      - BASIC
      - FULL
  Tags:
    type: object
    additionalProperties:
      $ref: '#/definitions/TagValue'
  NotificationRuleStatus:
    type: string
    enum:
      - ENABLED
      - DISABLED
  CreateNotificationRuleRequest:
    type: object
    required:
      - Name
      - EventTypeIds
      - Resource
      - Targets
      - DetailType
    properties:
      Name:
        $ref: '#/definitions/NotificationRuleName'
        description: The name for the notification rule. Notifictaion rule names must be unique in your AWS account.
      EventTypeIds:
        $ref: '#/definitions/EventTypeIds'
        description: 'A list of event types associated with this notification rule. For a list of allowed events, see <a>EventTypeSummary</a>.'
      Resource:
        $ref: '#/definitions/NotificationRuleResource'
        description: 'The Amazon Resource Name (ARN) of the resource to associate with the notification rule. Supported resources include pipelines in AWS CodePipeline, repositories in AWS CodeCommit, and build projects in AWS CodeBuild.'
      Targets:
        $ref: '#/definitions/Targets'
        description: A list of Amazon Resource Names (ARNs) of SNS topics to associate with the notification rule.
      DetailType:
        $ref: '#/definitions/DetailType'
        description: The level of detail to include in the notifications for this resource. BASIC will include only the contents of the event as it would appear in AWS CloudWatch. FULL will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: '<p>A unique, client-generated idempotency token that, when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request with the same parameters is received and a token is included, the request returns information about the initial request that used that token.</p> <note> <p>The AWS SDKs prepopulate client request tokens. If you are using an AWS SDK, an idempotency token is created for you.</p> </note>'
      Tags:
        $ref: '#/definitions/Tags'
        description: 'A list of tags to apply to this notification rule. Key names cannot start with "aws". '
      Status:
        $ref: '#/definitions/NotificationRuleStatus'
        description: 'The status of the notification rule. The default value is ENABLED. If the status is set to DISABLED, notifications aren''t sent for the notification rule.'
  NotificationRuleArn:
    type: string
    pattern: '^arn:aws[^:\s]*:codestar-notifications:[^:\s]+:\d{12}:notificationrule\/(.*\S)?$'
  CreatedTimestamp:
    type: string
    format: date-time
  DeleteNotificationRuleRequest:
    type: object
    required:
      - Arn
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule you want to delete.
  ForceUnsubscribeAll:
    type: boolean
  DeleteTargetRequest:
    type: object
    required:
      - TargetAddress
    properties:
      TargetAddress:
        $ref: '#/definitions/TargetAddress'
        description: The Amazon Resource Name (ARN) of the SNS topic to delete.
      ForceUnsubscribeAll:
        $ref: '#/definitions/ForceUnsubscribeAll'
        description: 'A Boolean value that can be used to delete all associations with this SNS topic. The default value is FALSE. If set to TRUE, all associations between that target and every notification rule in your AWS account are deleted.'
  DescribeNotificationRuleRequest:
    type: object
    required:
      - Arn
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule.
  EventTypeBatch:
    type: array
    items:
      $ref: '#/definitions/EventTypeSummary'
  TargetsBatch:
    type: array
    items:
      $ref: '#/definitions/TargetSummary'
  NotificationRuleCreatedBy:
    type: string
    minLength: 1
  LastModifiedTimestamp:
    type: string
    format: date-time
  EventTypeSummary:
    type: object
    properties:
      EventTypeId:
        $ref: '#/definitions/EventTypeId'
        description: The system-generated ID of the event.
      ServiceName:
        $ref: '#/definitions/ServiceName'
        description: The name of the service for which the event applies.
      EventTypeName:
        $ref: '#/definitions/EventTypeName'
        description: The name of the event.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: The resource type of the event.
    description: Returns information about an event that has triggered a notification rule.
  EventTypeName:
    type: string
  ServiceName:
    type: string
  ResourceType:
    type: string
    pattern: '^([a-zA-Z0-9-])+$'
    minLength: 1
  ListEventTypesFilterName:
    type: string
    enum:
      - RESOURCE_TYPE
      - SERVICE_NAME
  ListEventTypesFilterValue:
    type: string
  ListEventTypesFilters:
    type: array
    items:
      $ref: '#/definitions/ListEventTypesFilter'
  NextToken:
    type: string
    pattern: '^[\w/+=]+$'
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  ListEventTypesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ListEventTypesFilters'
        description: The filters to use to return information by service or resource type.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: A non-negative integer used to limit the number of returned results. The default number is 50. The maximum number of results that can be returned is 100.
  ListNotificationRulesFilterName:
    type: string
    enum:
      - EVENT_TYPE_ID
      - CREATED_BY
      - RESOURCE
      - TARGET_ADDRESS
  ListNotificationRulesFilterValue:
    type: string
  ListNotificationRulesFilters:
    type: array
    items:
      $ref: '#/definitions/ListNotificationRulesFilter'
  ListNotificationRulesRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ListNotificationRulesFilters'
        description: '<p>The filters to use to return information by service or resource type. For valid values, see <a>ListNotificationRulesFilter</a>.</p> <note> <p>A filter with the same name can appear more than once when used with OR statements. Filters with different names should be applied with AND statements.</p> </note>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: A non-negative integer used to limit the number of returned results. The maximum number of results that can be returned is 100.
  NotificationRuleBatch:
    type: array
    items:
      $ref: '#/definitions/NotificationRuleSummary'
  ListTagsForResourceRequest:
    type: object
    required:
      - Arn
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) for the notification rule.
  ListTargetsFilterName:
    type: string
    enum:
      - TARGET_TYPE
      - TARGET_ADDRESS
      - TARGET_STATUS
  ListTargetsFilterValue:
    type: string
  ListTargetsFilters:
    type: array
    items:
      $ref: '#/definitions/ListTargetsFilter'
  ListTargetsRequest:
    type: object
    properties:
      Filters:
        $ref: '#/definitions/ListTargetsFilters'
        description: '<p>The filters to use to return information by service or resource type. Valid filters include target type, target address, and target status.</p> <note> <p>A filter with the same name can appear more than once when used with OR statements. Filters with different names should be applied with AND statements.</p> </note>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: A non-negative integer used to limit the number of returned results. The maximum number of results that can be returned is 100.
  NotificationRuleSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/NotificationRuleId'
        description: The unique ID of the notification rule.
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule.
    description: Information about a specified notification rule.
  NotificationRuleId:
    type: string
    minLength: 1
    maxLength: 40
  SubscribeRequest:
    type: object
    required:
      - Arn
      - Target
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule for which you want to create the association.
      Target:
        $ref: '#/definitions/Target'
      ClientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: 'An enumeration token that, when provided in a request, returns the next batch of the results.'
  TagKeys:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagResourceRequest:
    type: object
    required:
      - Arn
      - Tags
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule to tag.
      Tags:
        $ref: '#/definitions/Tags'
        description: The list of tags to associate with the resource. Tag key names cannot start with "aws".
  TargetStatus:
    type: string
    enum:
      - PENDING
      - ACTIVE
      - UNREACHABLE
      - INACTIVE
      - DEACTIVATED
  TargetSummary:
    type: object
    properties:
      TargetAddress:
        $ref: '#/definitions/TargetAddress'
        description: The Amazon Resource Name (ARN) of the SNS topic.
      TargetType:
        $ref: '#/definitions/TargetType'
        description: 'The type of the target (for example, SNS).'
      TargetStatus:
        $ref: '#/definitions/TargetStatus'
        description: The status of the target.
    description: Information about the targets specified for a notification rule.
  UnsubscribeRequest:
    type: object
    required:
      - Arn
      - TargetAddress
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule.
      TargetAddress:
        $ref: '#/definitions/TargetAddress'
        description: The ARN of the SNS topic to unsubscribe from the notification rule.
  UntagResourceRequest:
    type: object
    required:
      - Arn
      - TagKeys
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule from which to remove the tags.
      TagKeys:
        $ref: '#/definitions/TagKeys'
        description: The key names of the tags to remove.
  UpdateNotificationRuleRequest:
    type: object
    required:
      - Arn
    properties:
      Arn:
        $ref: '#/definitions/NotificationRuleArn'
        description: The Amazon Resource Name (ARN) of the notification rule.
      Name:
        $ref: '#/definitions/NotificationRuleName'
        description: The name of the notification rule.
      Status:
        $ref: '#/definitions/NotificationRuleStatus'
        description: The status of the notification rule. Valid statuses include enabled (sending notifications) or disabled (not sending notifications).
      EventTypeIds:
        $ref: '#/definitions/EventTypeIds'
        description: A list of event types associated with this notification rule.
      Targets:
        $ref: '#/definitions/Targets'
        description: The address and type of the targets to receive notifications from this notification rule.
      DetailType:
        $ref: '#/definitions/DetailType'
        description: The level of detail to include in the notifications for this resource. BASIC will include only the contents of the event as it would appear in AWS CloudWatch. FULL will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
