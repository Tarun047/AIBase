swagger: '2.0'
info:
  version: '2018-11-15'
  x-release: v4
  title: AWS Backup
  description: '<fullname>AWS Backup</fullname> <p>AWS Backup is a unified backup service designed to protect AWS services and their associated data. AWS Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: backup
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/backup-2018-11-15.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/backup/'
host: backup.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://backup.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Backup multi-region endpoint
  - url: 'https://backup.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Backup multi-region endpoint
  - url: 'http://backup.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://backup.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /backup/plans/:
    put:
      operationId: CreateBackupPlan
      description: '<p>Backup plans are documents that contain information that AWS Backup uses to schedule tasks that create recovery points of resources.</p> <p>If you call <code>CreateBackupPlan</code> with a plan that already exists, an <code>AlreadyExistsException</code> is returned.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupPlanOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - BackupPlan
            properties:
              BackupPlan:
                description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
                type: object
                properties:
                  BackupPlanName:
                    $ref: '#/definitions/BackupPlanName'
                    description: The display name of a backup plan.
                  Rules:
                    $ref: '#/definitions/BackupRulesInput'
                    description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
              BackupPlanTags:
                description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'
                type: object
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              CreatorRequestId:
                description: 'Identifies the request and allows failed requests to be retried without the risk of executing the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListBackupPlans
      description: 'Returns metadata of your saved backup plans, including Amazon Resource Names (ARNs), plan IDs, creation and deletion dates, version IDs, plan names, and creator request IDs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlansOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: includeDeleted
          in: query
          required: false
          description: A Boolean value with a default value of <code>FALSE</code> that returns deleted backup plans when set to <code>TRUE</code>.
          type: boolean
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/backup/plans/{backupPlanId}/selections/':
    put:
      operationId: CreateBackupSelection
      description: '<p>Creates a JSON document that specifies a set of resources to assign to a backup plan. Resources can be included by specifying patterns for a <code>ListOfTags</code> and selected <code>Resources</code>. </p> <p>For example, consider the following patterns:</p> <ul> <li> <p> <code>Resources: "arn:aws:ec2:region:account-id:volume/volume-id"</code> </p> </li> <li> <p> <code>ConditionKey:"department"</code> </p> <p> <code>ConditionValue:"finance"</code> </p> <p> <code>ConditionType:"STRINGEQUALS"</code> </p> </li> <li> <p> <code>ConditionKey:"importance"</code> </p> <p> <code>ConditionValue:"critical"</code> </p> <p> <code>ConditionType:"STRINGEQUALS"</code> </p> </li> </ul> <p>Using these patterns would back up all Amazon Elastic Block Store (Amazon EBS) volumes that are tagged as <code>"department=finance"</code>, <code>"importance=critical"</code>, in addition to an EBS volume with the specified volume Id.</p> <p>Resources and conditions are additive in that all resources that match the pattern are selected. This shouldn''t be confused with a logical AND, where all conditions must match. The matching patterns are logically ''put together using the OR operator. In other words, all patterns that match are selected for backup.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupSelectionOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies the backup plan to be associated with the selection of resources.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - BackupSelection
            properties:
              BackupSelection:
                description: Used to specify a set of resources to a backup plan.
                type: object
                properties:
                  SelectionName:
                    $ref: '#/definitions/BackupSelectionName'
                    description: The display name of a resource selection document.
                  IamRoleArn:
                    $ref: '#/definitions/IAMRoleArn'
                    description: 'The ARN of the IAM role that AWS Backup uses to authenticate when restoring the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                  Resources:
                    $ref: '#/definitions/ResourceArns'
                    description: An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.
                  ListOfTags:
                    $ref: '#/definitions/ListOfTags'
                    description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>"STRINGEQUALS": {"ec2:ResourceTag/Department": "accounting"</code>.'
              CreatorRequestId:
                description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListBackupSelections
      description: Returns an array containing metadata of the resources associated with the target backup plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupSelectionsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/backup-vaults/{backupVaultName}':
    put:
      operationId: CreateBackupVault
      description: '<p>Creates a logical container where backups are stored. A <code>CreateBackupVault</code> request includes a name, optionally one or more resource tags, an encryption key, and a request ID.</p> <note> <p>Sensitive data, such as passport numbers, should not be included the name of a backup vault.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBackupVaultOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: AlreadyExistsException
          schema:
            $ref: '#/definitions/AlreadyExistsException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              BackupVaultTags:
                description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.
                type: object
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              EncryptionKeyArn:
                description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
                type: string
              CreatorRequestId:
                description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteBackupVault
      description: Deletes the backup vault identified by its name. A vault can be deleted only if it is empty.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and theAWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
    get:
      operationId: DescribeBackupVault
      description: Returns metadata about a backup vault specified by its name.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
  '/backup/plans/{backupPlanId}':
    delete:
      operationId: DeleteBackupPlan
      description: 'Deletes a backup plan. A backup plan can only be deleted after all associated selections of resources have been deleted. Deleting a backup plan deletes the current version of a backup plan. Previous versions, if any, will still exist.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateBackupPlan
      description: Replaces the body of a saved backup plan identified by its <code>backupPlanId</code> with the input document in JSON format. The new version is uniquely identified by a <code>VersionId</code>.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - BackupPlan
            properties:
              BackupPlan:
                description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
                type: object
                properties:
                  BackupPlanName:
                    $ref: '#/definitions/BackupPlanName'
                    description: The display name of a backup plan.
                  Rules:
                    $ref: '#/definitions/BackupRulesInput'
                    description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
  '/backup/plans/{backupPlanId}/selections/{selectionId}':
    delete:
      operationId: DeleteBackupSelection
      description: Deletes the resource selection associated with a backup plan that is specified by the <code>SelectionId</code>.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
        - name: selectionId
          in: path
          required: true
          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBackupSelection
      description: Returns selection metadata and a document in JSON format that specifies a list of resources that are associated with a backup plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupSelectionOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
        - name: selectionId
          in: path
          required: true
          description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
          type: string
  '/backup-vaults/{backupVaultName}/access-policy':
    delete:
      operationId: DeleteBackupVaultAccessPolicy
      description: Deletes the policy document that manages permissions on a backup vault.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBackupVaultAccessPolicy
      description: Returns the access policy document that is associated with the named backup vault.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupVaultAccessPolicyOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    put:
      operationId: PutBackupVaultAccessPolicy
      description: Sets a resource-based policy that is used to manage access permissions on the target backup vault. Requires a backup vault name and an access policy document in JSON format.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Policy:
                description: The backup vault access policy document in JSON format.
                type: string
  '/backup-vaults/{backupVaultName}/notification-configuration':
    delete:
      operationId: DeleteBackupVaultNotifications
      description: Deletes event notifications for the specified backup vault.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetBackupVaultNotifications
      description: Returns event notifications for the specified backup vault.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupVaultNotificationsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    put:
      operationId: PutBackupVaultNotifications
      description: Turns on notifications on a backup vault for the specified topic and events.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - SNSTopicArn
              - BackupVaultEvents
            properties:
              SNSTopicArn:
                description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'
                type: string
              BackupVaultEvents:
                description: An array of events that indicate the status of jobs to back up resources to the backup vault.
                type: array
                items:
                  $ref: '#/definitions/BackupVaultEvent'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}':
    delete:
      operationId: DeleteRecoveryPoint
      description: Deletes the recovery point specified by a recovery point ID.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeRecoveryPoint
      description: 'Returns metadata associated with a recovery point, including ID, status, encryption, and lifecycle.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRecoveryPointOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          type: string
    post:
      operationId: UpdateRecoveryPointLifecycle
      description: '<p>Sets the transition lifecycle of a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRecoveryPointLifecycleOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              Lifecycle:
                description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
                type: object
                properties:
                  MoveToColdStorageAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                  DeleteAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
  '/backup-jobs/{backupJobId}':
    get:
      operationId: DescribeBackupJob
      description: Returns metadata associated with creating a backup of a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          schema:
            $ref: '#/definitions/DependencyFailureException'
      parameters:
        - name: backupJobId
          in: path
          required: true
          description: Uniquely identifies a request to AWS Backup to back up a resource.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StopBackupJob
      description: Attempts to cancel a job to create a one-time backup of a resource.
      responses:
        '200':
          description: Success
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupJobId
          in: path
          required: true
          description: Uniquely identifies a request to AWS Backup to back up a resource.
          type: string
  '/copy-jobs/{copyJobId}':
    get:
      operationId: DescribeCopyJob
      description: Returns metadata associated with creating a copy of a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCopyJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: copyJobId
          in: path
          required: true
          description: Uniquely identifies a request to AWS Backup to copy a resource.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/resources/{resourceArn}':
    get:
      operationId: DescribeProtectedResource
      description: 'Returns information about a saved resource, including the last time it was backed-up, its Amazon Resource Name (ARN), and the AWS service type of the saved resource.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProtectedResourceOutput'
        '480':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/restore-jobs/{restoreJobId}':
    get:
      operationId: DescribeRestoreJob
      description: Returns metadata associated with a restore job that is specified by a job ID.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: DependencyFailureException
          schema:
            $ref: '#/definitions/DependencyFailureException'
      parameters:
        - name: restoreJobId
          in: path
          required: true
          description: Uniquely identifies the job that restores a recovery point.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/toTemplate/':
    get:
      operationId: ExportBackupPlanTemplate
      description: Returns the backup plan that is specified by the plan ID as a backup template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExportBackupPlanTemplateOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/':
    get:
      operationId: GetBackupPlan
      description: 'Returns the body of a backup plan in JSON format, in addition to plan metadata.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
        - name: versionId
          in: query
          required: false
          description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /backup/template/json/toPlan:
    post:
      operationId: GetBackupPlanFromJSON
      description: Returns a valid JSON document specifying a backup plan or an error.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanFromJSONOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - BackupPlanTemplateJson
            properties:
              BackupPlanTemplateJson:
                description: A customer-supplied backup plan document in JSON format.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/template/plans/{templateId}/toPlan':
    get:
      operationId: GetBackupPlanFromTemplate
      description: Returns the template specified by its <code>templateId</code> as a backup plan.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetBackupPlanFromTemplateOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: templateId
          in: path
          required: true
          description: Uniquely identifies a stored backup plan template.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/restore-metadata':
    get:
      operationId: GetRecoveryPointRestoreMetadata
      description: Returns a set of metadata key-value pairs that were used to create the backup.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRecoveryPointRestoreMetadataOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: recoveryPointArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /supported-resource-types:
    get:
      operationId: GetSupportedResourceTypes
      description: Returns the AWS resource types supported by AWS Backup.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSupportedResourceTypesOutput'
        '480':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /backup-jobs/:
    get:
      operationId: ListBackupJobs
      description: Returns metadata about your backup jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupJobsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: resourceArn
          in: query
          required: false
          description: Returns only backup jobs that match the specified resource Amazon Resource Name (ARN).
          type: string
        - name: state
          in: query
          required: false
          description: Returns only backup jobs that are in the specified state.
          type: string
          enum:
            - CREATED
            - PENDING
            - RUNNING
            - ABORTING
            - ABORTED
            - COMPLETED
            - FAILED
            - EXPIRED
        - name: backupVaultName
          in: query
          required: false
          description: 'Returns only backup jobs that will be stored in the specified backup vault. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: createdBefore
          in: query
          required: false
          description: Returns only backup jobs that were created before the specified date.
          type: string
          format: date-time
        - name: createdAfter
          in: query
          required: false
          description: Returns only backup jobs that were created after the specified date.
          type: string
          format: date-time
        - name: resourceType
          in: query
          required: false
          description: '<p>Returns only backup jobs for the specified resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> </ul>'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /backup/template/plans:
    get:
      operationId: ListBackupPlanTemplates
      description: 'Returns metadata of your saved backup plan templates, including the template ID, name, and the creation and deletion dates.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlanTemplatesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup/plans/{backupPlanId}/versions/':
    get:
      operationId: ListBackupPlanVersions
      description: 'Returns version metadata of your backup plans, including Amazon Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan names, and version IDs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupPlanVersionsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupPlanId
          in: path
          required: true
          description: Uniquely identifies a backup plan.
          type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /backup-vaults/:
    get:
      operationId: ListBackupVaults
      description: Returns a list of recovery point storage containers along with information about them.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBackupVaultsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /copy-jobs/:
    get:
      operationId: ListCopyJobs
      description: Returns metadata about your copy jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCopyJobsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. '
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: resourceArn
          in: query
          required: false
          description: 'Returns only copy jobs that match the specified resource Amazon Resource Name (ARN). '
          type: string
        - name: state
          in: query
          required: false
          description: Returns only copy jobs that are in the specified state.
          type: string
          enum:
            - CREATED
            - RUNNING
            - COMPLETED
            - FAILED
        - name: createdBefore
          in: query
          required: false
          description: Returns only copy jobs that were created before the specified date.
          type: string
          format: date-time
        - name: createdAfter
          in: query
          required: false
          description: Returns only copy jobs that were created after the specified date.
          type: string
          format: date-time
        - name: resourceType
          in: query
          required: false
          description: '<p>Returns only backup jobs for the specified resources:</p> <ul> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> </ul>'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: destinationVaultArn
          in: query
          required: false
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a source backup vault to copy from; for example, arn:aws:backup:us-east-1:123456789012:vault:aBackupVault. '
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /resources/:
    get:
      operationId: ListProtectedResources
      description: 'Returns an array of resources successfully backed up by AWS Backup, including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProtectedResourcesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/backup-vaults/{backupVaultName}/recovery-points/':
    get:
      operationId: ListRecoveryPointsByBackupVault
      description: Returns detailed information about the recovery points stored in a backup vault.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecoveryPointsByBackupVaultOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: backupVaultName
          in: path
          required: true
          description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: resourceArn
          in: query
          required: false
          description: Returns only recovery points that match the specified resource Amazon Resource Name (ARN).
          type: string
        - name: resourceType
          in: query
          required: false
          description: Returns only recovery points that match the specified resource type.
          type: string
          pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
        - name: backupPlanId
          in: query
          required: false
          description: Returns only recovery points that match the specified backup plan ID.
          type: string
        - name: createdBefore
          in: query
          required: false
          description: Returns only recovery points that were created before the specified timestamp.
          type: string
          format: date-time
        - name: createdAfter
          in: query
          required: false
          description: Returns only recovery points that were created after the specified timestamp.
          type: string
          format: date-time
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/resources/{resourceArn}/recovery-points/':
    get:
      operationId: ListRecoveryPointsByResource
      description: Returns detailed information about recovery points of the type specified by a resource Amazon Resource Name (ARN).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRecoveryPointsByResourceOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
          type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /restore-jobs/:
    get:
      operationId: ListRestoreJobs
      description: 'Returns a list of jobs that AWS Backup initiated to restore a saved resource, including metadata about the recovery process.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRestoreJobsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}/':
    get:
      operationId: ListTags
      description: 'Returns a list of key-value pairs assigned to a target recovery point, backup plan, or backup vault.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: 'An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the type of resource. Valid targets for <code>ListTags</code> are recovery points, backup plans, and backup vaults.'
          type: string
        - name: nextToken
          in: query
          required: false
          description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of items to be returned.
          type: integer
          minimum: 1
          maximum: 1000
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /backup-jobs:
    put:
      operationId: StartBackupJob
      description: Starts a job to create a one-time backup of the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartBackupJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - BackupVaultName
              - ResourceArn
              - IamRoleArn
            properties:
              BackupVaultName:
                description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
                type: string
                pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
              ResourceArn:
                description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
                type: string
              IamRoleArn:
                description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                type: string
              IdempotencyToken:
                description: A customer chosen string that can be used to distinguish between calls to <code>StartBackupJob</code>.
                type: string
              StartWindowMinutes:
                description: The amount of time in minutes before beginning a backup.
                type: integer
              CompleteWindowMinutes:
                description: The amount of time AWS Backup attempts a backup before canceling the job and returning an error.
                type: integer
              Lifecycle:
                description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
                type: object
                properties:
                  MoveToColdStorageAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                  DeleteAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
              RecoveryPointTags:
                description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
                type: object
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /copy-jobs:
    put:
      operationId: StartCopyJob
      description: Starts a job to create a one-time copy of the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartCopyJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - RecoveryPointArn
              - SourceBackupVaultName
              - DestinationBackupVaultArn
              - IamRoleArn
            properties:
              RecoveryPointArn:
                description: 'An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '
                type: string
              SourceBackupVaultName:
                description: 'The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens. &gt;'
                type: string
                pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
              DestinationBackupVaultArn:
                description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
                type: string
              IamRoleArn:
                description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, arn:aws:iam::123456789012:role/S3Access.'
                type: string
              IdempotencyToken:
                description: A customer chosen string that can be used to distinguish between calls to <code>StartCopyJob</code>.
                type: string
              Lifecycle:
                description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
                type: object
                properties:
                  MoveToColdStorageAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is moved to cold storage.
                  DeleteAfterDays:
                    $ref: '#/definitions/Long'
                    description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /restore-jobs:
    put:
      operationId: StartRestoreJob
      description: '<p>Recovers the saved resource identified by an Amazon Resource Name (ARN). </p> <p>If the resource ARN is included in the request, then the last complete backup of that resource is recovered. If the ARN of a recovery point is supplied, then that recovery point is restored.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartRestoreJobOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - RecoveryPointArn
              - Metadata
              - IamRoleArn
            properties:
              RecoveryPointArn:
                description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
                type: string
              Metadata:
                description: '<p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed-up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: ID of the Amazon EFS file system that is backed up by AWS Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the AWS KMS key that is used to encrypt the restored file system.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> </ul>'
                type: object
                additionalProperties:
                  $ref: '#/definitions/MetadataValue'
              IamRoleArn:
                description: 'The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
                type: string
              IdempotencyToken:
                description: A customer chosen string that can be used to distinguish between calls to <code>StartRestoreJob</code>.
                type: string
              ResourceType:
                description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>DDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> </ul>'
                type: string
                pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    post:
      operationId: TagResource
      description: 'Assigns a set of key-value pairs to a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN).'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Tags
            properties:
              Tags:
                description: 'Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create. '
                type: object
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/untag/{resourceArn}':
    post:
      operationId: UntagResource
      description: 'Removes a set of key-value pairs from a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '482':
          description: MissingParameterValueException
          schema:
            $ref: '#/definitions/MissingParameterValueException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: An ARN that uniquely identifies a resource. The format of the ARN depends on the type of the tagged resource.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - TagKeyList
            properties:
              TagKeyList:
                description: A list of keys to identify which key-value tags to remove from a resource.
                type: array
                items:
                  $ref: '#/definitions/string'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateBackupPlanOutput:
    type: object
    properties:
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1024 bytes long. They cannot be edited.'
  BackupPlanName:
    type: string
  BackupRulesInput:
    type: array
    items:
      $ref: '#/definitions/BackupRuleInput'
  TagValue:
    type: string
  LimitExceededException: {}
  AlreadyExistsException: {}
  InvalidParameterValueException: {}
  MissingParameterValueException: {}
  ServiceUnavailableException: {}
  CreateBackupSelectionOutput:
    type: object
    properties:
      SelectionId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
  BackupSelectionName:
    type: string
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
  IAMRoleArn:
    type: string
  ResourceArns:
    type: array
    items:
      $ref: '#/definitions/ARN'
  ListOfTags:
    type: array
    items:
      $ref: '#/definitions/Condition'
  CreateBackupVaultOutput:
    type: object
    properties:
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
  DeleteBackupPlanOutput:
    type: object
    properties:
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      DeletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.'
  ResourceNotFoundException: {}
  InvalidRequestException: {}
  DescribeBackupJobOutput:
    type: object
    properties:
      BackupJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to back up a resource.
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      State:
        $ref: '#/definitions/BackupJobState'
        description: The current state of a resource recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of the job to back up a resource.
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage that is complete of a job at the time the job status was queried.
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource to be backed-up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      BytesTransferred:
        $ref: '#/definitions/Long'
        description: The size in bytes transferred to a backup vault at the time that the job status was queried.
      ExpectedCompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      StartBy:
        $ref: '#/definitions/timestamp'
        description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
  DependencyFailureException: {}
  DescribeBackupVaultOutput:
    type: object
    properties:
      BackupVaultName:
        $ref: '#/definitions/string'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup vault is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      NumberOfRecoveryPoints:
        $ref: '#/definitions/long'
        description: The number of recovery points that are stored in a backup vault.
  DescribeCopyJobOutput:
    type: object
    properties:
      CopyJob:
        $ref: '#/definitions/CopyJob'
        description: Contains detailed information about a copy job.
  DescribeProtectedResourceOutput:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource saved as a recovery point; for example, an EBS volume or an Amazon RDS database.'
      LastBackupTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
  DescribeRecoveryPointOutput:
    type: object
    properties:
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a saved resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource to save as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      Status:
        $ref: '#/definitions/RecoveryPointStatus'
        description: <p>A status code specifying the state of the recovery point.</p> <note> <p>A partial status indicates that the recovery point was not successfully re-created and must be retried.</p> </note>
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to create a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      CalculatedLifecycle:
        $ref: '#/definitions/CalculatedLifecycle'
        description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups that are transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      IsEncrypted:
        $ref: '#/definitions/boolean'
        description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'
      StorageClass:
        $ref: '#/definitions/StorageClass'
        description: Specifies the storage class of the recovery point. Valid values are <code>WARM</code> or <code>COLD</code>.
      LastRestoreTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
  DescribeRestoreJobOutput:
    type: object
    properties:
      RestoreJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the job that restores a recovery point.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      Status:
        $ref: '#/definitions/RestoreJobStatus'
        description: Status code specifying the state of the job that is initiated by AWS Backup to restore a recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of a job to restore a recovery point.
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage that is complete of a job at the time the job status was queried.
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of the restored resource.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      ExpectedCompletionTimeMinutes:
        $ref: '#/definitions/Long'
        description: The amount of time in minutes that a job restoring a recovery point is expected to take.
      CreatedResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource whose recovery point is being restored. The format of the ARN depends on the resource type of the backed-up resource.
  ExportBackupPlanTemplateOutput:
    type: object
    properties:
      BackupPlanTemplateJson:
        $ref: '#/definitions/string'
        description: <p>The body of a backup plan template in JSON format.</p> <note> <p>This is a signed JSON document that cannot be modified before being passed to <code>GetBackupPlanFromJSON.</code> </p> </note>
  GetBackupPlanOutput:
    type: object
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlan'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      DeletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      LastExecutionDate:
        $ref: '#/definitions/timestamp'
        description: 'The last time a job to back up resources was executed with this backup plan. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
  GetBackupPlanFromJSONOutput:
    type: object
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlan'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
  GetBackupPlanFromTemplateOutput:
    type: object
    properties:
      BackupPlanDocument:
        $ref: '#/definitions/BackupPlan'
        description: 'Returns the body of a backup plan based on the target template, including the name, rules, and backup vault of the plan.'
  GetBackupSelectionOutput:
    type: object
    properties:
      BackupSelection:
        $ref: '#/definitions/BackupSelection'
        description: Specifies the body of a request to assign a set of resources to a backup plan.
      SelectionId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the body of a request to assign a set of resources to a backup plan.
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup selection is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
  GetBackupVaultAccessPolicyOutput:
    type: object
    properties:
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      Policy:
        $ref: '#/definitions/IAMPolicy'
        description: The backup vault access policy document in JSON format.
  GetBackupVaultNotificationsOutput:
    type: object
    properties:
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      SNSTopicArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies an Amazon Simple Notification Service (Amazon SNS) topic; for example, <code>arn:aws:sns:us-west-2:111122223333:MyTopic</code>.'
      BackupVaultEvents:
        $ref: '#/definitions/BackupVaultEvents'
        description: An array of events that indicate the status of jobs to back up resources to the backup vault.
  GetRecoveryPointRestoreMetadataOutput:
    type: object
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      RestoreMetadata:
        $ref: '#/definitions/Metadata'
        description: The set of metadata key-value pairs that describes the original configuration of the backed-up resource. These values vary depending on the service that is being restored.
  GetSupportedResourceTypesOutput:
    type: object
    properties:
      ResourceTypes:
        $ref: '#/definitions/ResourceTypes'
        description: '<p>Contains a string with the supported AWS resource types:</p> <ul> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>DDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> </ul>'
  ListBackupJobsOutput:
    type: object
    properties:
      BackupJobs:
        $ref: '#/definitions/BackupJobsList'
        description: An array of structures containing metadata about your backup jobs returned in JSON format.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
  ListBackupPlanTemplatesOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      BackupPlanTemplatesList:
        $ref: '#/definitions/BackupPlanTemplatesList'
        description: An array of template list items containing metadata about your saved templates.
  ListBackupPlanVersionsOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      BackupPlanVersionsList:
        $ref: '#/definitions/BackupPlanVersionsList'
        description: An array of version list items containing metadata about your backup plans.
  ListBackupPlansOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      BackupPlansList:
        $ref: '#/definitions/BackupPlansList'
        description: An array of backup plan list items containing metadata about your saved backup plans.
  ListBackupSelectionsOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      BackupSelectionsList:
        $ref: '#/definitions/BackupSelectionsList'
        description: An array of backup selection list items containing metadata about each resource in the list.
  ListBackupVaultsOutput:
    type: object
    properties:
      BackupVaultList:
        $ref: '#/definitions/BackupVaultList'
        description: 'An array of backup vault list members containing vault metadata, including Amazon Resource Name (ARN), display name, creation date, number of saved recovery points, and encryption information if the resources saved in the backup vault are encrypted.'
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
  ListCopyJobsOutput:
    type: object
    properties:
      CopyJobs:
        $ref: '#/definitions/CopyJobsList'
        description: 'An array of structures containing metadata about your copy jobs returned in JSON format. '
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return maxResults number of items, NextToken allows you to return more items in your list starting at the location pointed to by the next token. '
  ListProtectedResourcesOutput:
    type: object
    properties:
      Results:
        $ref: '#/definitions/ProtectedResourcesList'
        description: 'An array of resources successfully backed up by AWS Backup including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.'
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
  ListRecoveryPointsByBackupVaultOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      RecoveryPoints:
        $ref: '#/definitions/RecoveryPointByBackupVaultList'
        description: An array of objects that contain detailed information about recovery points saved in a backup vault.
  ListRecoveryPointsByResourceOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      RecoveryPoints:
        $ref: '#/definitions/RecoveryPointByResourceList'
        description: An array of objects that contain detailed information about recovery points of the specified resource type.
  ListRestoreJobsOutput:
    type: object
    properties:
      RestoreJobs:
        $ref: '#/definitions/RestoreJobsList'
        description: An array of objects that contain detailed information about jobs to restore saved resources.
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
  ListTagsOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/string'
        description: 'The next item following a partial list of returned items. For example, if a request is made to return <code>maxResults</code> number of items, <code>NextToken</code> allows you to return more items in your list starting at the location pointed to by the next token.'
      Tags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources you create. Each tag is a key-value pair.'
  BackupVaultEvent:
    type: string
    enum:
      - BACKUP_JOB_STARTED
      - BACKUP_JOB_COMPLETED
      - BACKUP_JOB_SUCCESSFUL
      - BACKUP_JOB_FAILED
      - BACKUP_JOB_EXPIRED
      - RESTORE_JOB_STARTED
      - RESTORE_JOB_COMPLETED
      - RESTORE_JOB_SUCCESSFUL
      - RESTORE_JOB_FAILED
      - COPY_JOB_STARTED
      - COPY_JOB_SUCCESSFUL
      - COPY_JOB_FAILED
      - RECOVERY_POINT_MODIFIED
      - BACKUP_PLAN_CREATED
      - BACKUP_PLAN_MODIFIED
  StartBackupJobOutput:
    type: object
    properties:
      BackupJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to back up a resource.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup job is started, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
  Long:
    type: integer
  StartCopyJobOutput:
    type: object
    properties:
      CopyJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to copy a resource.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time that a backup job is started, in Unix format and Coordinated Universal Time (UTC). The value of CreationDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM. &gt;'
  StartRestoreJobOutput:
    type: object
    properties:
      RestoreJobId:
        $ref: '#/definitions/RestoreJobId'
        description: Uniquely identifies the job that restores a recovery point.
  MetadataValue:
    type: string
  string:
    type: string
  UpdateBackupPlanOutput:
    type: object
    properties:
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is updated, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.'
  UpdateRecoveryPointLifecycleOutput:
    type: object
    properties:
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      CalculatedLifecycle:
        $ref: '#/definitions/CalculatedLifecycle'
        description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
  ARN:
    type: string
  BackupVaultName:
    type: string
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
  timestamp:
    type: string
    format: date-time
  BackupJobState:
    type: string
    enum:
      - CREATED
      - PENDING
      - RUNNING
      - ABORTING
      - ABORTED
      - COMPLETED
      - FAILED
      - EXPIRED
  RecoveryPointCreator:
    type: object
    properties:
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanVersion:
        $ref: '#/definitions/string'
        description: 'Version IDs are unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. They cannot be edited.'
      BackupRuleId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a rule used to schedule the backup of a selection of resources.
    description: Contains information about the backup plan and rule that AWS Backup used to initiate the recovery point backup.
  ResourceType:
    type: string
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
  BackupJob:
    type: object
    properties:
      BackupJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to back up a resource.
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to create a backup job is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      State:
        $ref: '#/definitions/BackupJobState'
        description: The current state of a resource recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of the job to back up a resource.
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage complete of a job at the time the job status was queried.
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a backup job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan used to create it.'
      ExpectedCompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to back up resources is expected to be completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      StartBy:
        $ref: '#/definitions/timestamp'
        description: 'Specifies the time in Unix format and Coordinated Universal Time (UTC) when a backup job must be started before it is canceled. The value is calculated by adding the start window to the scheduled time. So if the scheduled time were 6:00 PM and the start window is 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date specified. The value of <code>StartBy</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource to be backed-up; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      BytesTransferred:
        $ref: '#/definitions/Long'
        description: The size in bytes transferred to a backup vault at the time that the job status was queried.
    description: Contains detailed information about a backup job.
  BackupJobsList:
    type: array
    items:
      $ref: '#/definitions/BackupJob'
  BackupRules:
    type: array
    items:
      $ref: '#/definitions/BackupRule'
  BackupPlan:
    type: object
    required:
      - BackupPlanName
      - Rules
    properties:
      BackupPlanName:
        $ref: '#/definitions/BackupPlanName'
        description: The display name of a backup plan.
      Rules:
        $ref: '#/definitions/BackupRules'
        description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
    description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
  BackupPlanInput:
    type: object
    required:
      - BackupPlanName
      - Rules
    properties:
      BackupPlanName:
        $ref: '#/definitions/BackupPlanName'
        description: The display name of a backup plan.
      Rules:
        $ref: '#/definitions/BackupRulesInput'
        description: 'An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources.'
    description: 'Contains an optional backup plan display name and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. Each rule in a backup plan is a separate scheduled task and can back up a different selection of AWS resources.'
  BackupPlanTemplatesListMember:
    type: object
    properties:
      BackupPlanTemplateId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a stored backup plan template.
      BackupPlanTemplateName:
        $ref: '#/definitions/string'
        description: The optional display name of a backup plan template.
    description: An object specifying metadata associated with a backup plan template.
  BackupPlanTemplatesList:
    type: array
    items:
      $ref: '#/definitions/BackupPlanTemplatesListMember'
  BackupPlansListMember:
    type: object
    properties:
      BackupPlanArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>.'
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a resource backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      DeletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is deleted, in Unix format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      VersionId:
        $ref: '#/definitions/string'
        description: 'Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited.'
      BackupPlanName:
        $ref: '#/definitions/BackupPlanName'
        description: The display name of a saved backup plan.
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      LastExecutionDate:
        $ref: '#/definitions/timestamp'
        description: 'The last time a job to back up resources was executed with this rule. A date and time, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastExecutionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    description: Contains metadata about a backup plan.
  BackupPlanVersionsList:
    type: array
    items:
      $ref: '#/definitions/BackupPlansListMember'
  BackupPlansList:
    type: array
    items:
      $ref: '#/definitions/BackupPlansListMember'
  BackupRuleName:
    type: string
    pattern: '^[a-zA-Z0-9\-\_\.]{1,50}$'
  CronExpression:
    type: string
  WindowMinutes:
    type: integer
  Lifecycle:
    type: object
    properties:
      MoveToColdStorageAfterDays:
        $ref: '#/definitions/Long'
        description: Specifies the number of days after creation that a recovery point is moved to cold storage.
      DeleteAfterDays:
        $ref: '#/definitions/Long'
        description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
    description: '<p>Contains an array of <code>Transition</code> objects specifying how long in days before a recovery point transitions to cold storage or is deleted.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, on the console, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
  Tags:
    type: object
    additionalProperties:
      $ref: '#/definitions/TagValue'
  CopyActions:
    type: array
    items:
      $ref: '#/definitions/CopyAction'
  BackupRule:
    type: object
    required:
      - RuleName
      - TargetBackupVaultName
    properties:
      RuleName:
        $ref: '#/definitions/BackupRuleName'
        description: An optional display name for a backup rule.
      TargetBackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      ScheduleExpression:
        $ref: '#/definitions/CronExpression'
        description: A CRON expression specifying when AWS Backup initiates a backup job.
      StartWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: An optional value that specifies a period of time in minutes after a backup is scheduled before a job is canceled if it doesn't start successfully.
      CompletionWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: A value in minutes after a backup job is successfully started before it must be completed or it is canceled by AWS Backup. This value is optional.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointTags:
        $ref: '#/definitions/Tags'
        description: An array of key-value pair strings that are assigned to resources that are associated with this rule when restored from backup.
      RuleId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a rule that is used to schedule the backup of a selection of resources.
      CopyActions:
        $ref: '#/definitions/CopyActions'
        description: 'An array of <code>CopyAction</code> objects, which contains the details of the copy operation.'
    description: Specifies a scheduled task used to back up a selection of resources.
  BackupRuleInput:
    type: object
    required:
      - RuleName
      - TargetBackupVaultName
    properties:
      RuleName:
        $ref: '#/definitions/BackupRuleName'
        description: '&gt;An optional display name for a backup rule.'
      TargetBackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      ScheduleExpression:
        $ref: '#/definitions/CronExpression'
        description: A CRON expression specifying when AWS Backup initiates a backup job.
      StartWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time in minutes before beginning a backup.
      CompletionWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time AWS Backup attempts a backup before canceling the job and returning an error.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days”. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointTags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
      CopyActions:
        $ref: '#/definitions/CopyActions'
        description: 'An array of <code>CopyAction</code> objects, which contains the details of the copy operation.'
    description: Specifies a scheduled task used to back up a selection of resources.
  BackupSelection:
    type: object
    required:
      - SelectionName
      - IamRoleArn
    properties:
      SelectionName:
        $ref: '#/definitions/BackupSelectionName'
        description: The display name of a resource selection document.
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'The ARN of the IAM role that AWS Backup uses to authenticate when restoring the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      Resources:
        $ref: '#/definitions/ResourceArns'
        description: An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.
      ListOfTags:
        $ref: '#/definitions/ListOfTags'
        description: 'An array of conditions used to specify a set of resources to assign to a backup plan; for example, <code>"STRINGEQUALS": {"ec2:ResourceTag/Department": "accounting"</code>.'
    description: Used to specify a set of resources to a backup plan.
  BackupSelectionsListMember:
    type: object
    properties:
      SelectionId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to assign a set of resources to a backup plan.
      SelectionName:
        $ref: '#/definitions/BackupSelectionName'
        description: The display name of a resource selection document.
      BackupPlanId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a backup plan.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a backup plan is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role Amazon Resource Name (ARN) to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
    description: Contains metadata about a <code>BackupSelection</code> object.
  BackupSelectionsList:
    type: array
    items:
      $ref: '#/definitions/BackupSelectionsListMember'
  BackupVaultEvents:
    type: array
    items:
      $ref: '#/definitions/BackupVaultEvent'
  BackupVaultListMember:
    type: object
    properties:
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a resource backup is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
      NumberOfRecoveryPoints:
        $ref: '#/definitions/long'
        description: The number of recovery points that are stored in a backup vault.
    description: Contains metadata about a backup vault.
  BackupVaultList:
    type: array
    items:
      $ref: '#/definitions/BackupVaultListMember'
  long:
    type: integer
  Boolean:
    type: boolean
  CalculatedLifecycle:
    type: object
    properties:
      MoveToColdStorageAt:
        $ref: '#/definitions/timestamp'
        description: A timestamp that specifies when to transition a recovery point to cold storage.
      DeleteAt:
        $ref: '#/definitions/timestamp'
        description: A timestamp that specifies when to delete a recovery point.
    description: '<p>Contains <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps, which are used to specify a lifecycle for a recovery point.</p> <p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
  ConditionType:
    type: string
    enum:
      - STRINGEQUALS
  ConditionKey:
    type: string
  ConditionValue:
    type: string
  Condition:
    type: object
    required:
      - ConditionType
      - ConditionKey
      - ConditionValue
    properties:
      ConditionType:
        $ref: '#/definitions/ConditionType'
        description: 'An operation, such as <code>STRINGEQUALS</code>, that is applied to a key-value pair used to filter resources in a selection.'
      ConditionKey:
        $ref: '#/definitions/ConditionKey'
        description: 'The key in a key-value pair. For example, in <code>"ec2:ResourceTag/Department": "accounting"</code>, <code>"ec2:ResourceTag/Department"</code> is the key.'
      ConditionValue:
        $ref: '#/definitions/ConditionValue'
        description: 'The value in a key-value pair. For example, in <code>"ec2:ResourceTag/Department": "accounting"</code>, <code>"accounting"</code> is the value.'
    description: 'Contains an array of triplets made up of a condition type (such as <code>STRINGEQUALS</code>), a key, and a value. Conditions are used to filter resources in a selection that is assigned to a backup plan.'
  CopyAction:
    type: object
    required:
      - DestinationBackupVaultArn
    properties:
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
      DestinationBackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. For example, arn:aws:backup:us-east-1:123456789012:vault:aBackupVault.'
    description: The details of the copy operation.
  CopyJobState:
    type: string
    enum:
      - CREATED
      - RUNNING
      - COMPLETED
      - FAILED
  CopyJob:
    type: object
    properties:
      CopyJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies a request to AWS Backup to copy a resource.
      SourceBackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a source copy vault; for example, arn:aws:backup:us-east-1:123456789012:vault:aBackupVault. '
      SourceRecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a source recovery point; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '
      DestinationBackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination copy vault; for example, arn:aws:backup:us-east-1:123456789012:vault:aBackupVault.'
      DestinationRecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a destination recovery point; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: 'The type of AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. '
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a copy job is created, in Unix format and Coordinated Universal Time (UTC). The value of CreationDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM. '
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to create a copy job is completed, in Unix format and Coordinated Universal Time (UTC). The value of CompletionDate is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM. '
      State:
        $ref: '#/definitions/CopyJobState'
        description: The current state of a resource recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of the job that to copy a resource.
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a copy job.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, arn:aws:iam::123456789012:role/S3Access.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource to be copied; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database. '
    description: Contains detailed information about a copy job.
  CopyJobsList:
    type: array
    items:
      $ref: '#/definitions/CopyJob'
  CreateBackupPlanInput:
    type: object
    required:
      - BackupPlan
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlanInput'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
      BackupPlanTags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair. The specified tags are assigned to all backups created with this plan.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: 'Identifies the request and allows failed requests to be retried without the risk of executing the operation twice. If the request includes a <code>CreatorRequestId</code> that matches an existing backup plan, that plan is returned. This parameter is optional.'
  CreateBackupSelectionInput:
    type: object
    required:
      - BackupSelection
    properties:
      BackupSelection:
        $ref: '#/definitions/BackupSelection'
        description: Specifies the body of a request to assign a set of resources to a backup plan.
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
  CreateBackupVaultInput:
    type: object
    properties:
      BackupVaultTags:
        $ref: '#/definitions/Tags'
        description: Metadata that you can assign to help organize the resources that you create. Each tag is a key-value pair.
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      CreatorRequestId:
        $ref: '#/definitions/string'
        description: A unique string that identifies the request and allows failed requests to be retried without the risk of executing the operation twice.
  DeleteBackupPlanInput:
    type: object
    properties: {}
  DeleteBackupSelectionInput:
    type: object
    properties: {}
  DeleteBackupVaultAccessPolicyInput:
    type: object
    properties: {}
  DeleteBackupVaultInput:
    type: object
    properties: {}
  DeleteBackupVaultNotificationsInput:
    type: object
    properties: {}
  DeleteRecoveryPointInput:
    type: object
    properties: {}
  DescribeBackupJobInput:
    type: object
    properties: {}
  DescribeBackupVaultInput:
    type: object
    properties: {}
  DescribeCopyJobInput:
    type: object
    properties: {}
  DescribeProtectedResourceInput:
    type: object
    properties: {}
  DescribeRecoveryPointInput:
    type: object
    properties: {}
  RecoveryPointStatus:
    type: string
    enum:
      - COMPLETED
      - PARTIAL
      - DELETING
      - EXPIRED
  boolean:
    type: boolean
  StorageClass:
    type: string
    enum:
      - WARM
      - COLD
      - DELETED
  RestoreJobId:
    type: string
  DescribeRestoreJobInput:
    type: object
    properties: {}
  RestoreJobStatus:
    type: string
    enum:
      - PENDING
      - RUNNING
      - COMPLETED
      - ABORTED
      - FAILED
  ExportBackupPlanTemplateInput:
    type: object
    properties: {}
  GetBackupPlanFromJSONInput:
    type: object
    required:
      - BackupPlanTemplateJson
    properties:
      BackupPlanTemplateJson:
        $ref: '#/definitions/string'
        description: A customer-supplied backup plan document in JSON format.
  GetBackupPlanFromTemplateInput:
    type: object
    properties: {}
  GetBackupPlanInput:
    type: object
    properties: {}
  GetBackupSelectionInput:
    type: object
    properties: {}
  GetBackupVaultAccessPolicyInput:
    type: object
    properties: {}
  IAMPolicy:
    type: string
  GetBackupVaultNotificationsInput:
    type: object
    properties: {}
  GetRecoveryPointRestoreMetadataInput:
    type: object
    properties: {}
  Metadata:
    type: object
    additionalProperties:
      $ref: '#/definitions/MetadataValue'
  ResourceTypes:
    type: array
    items:
      $ref: '#/definitions/ResourceType'
  MaxResults:
    type: integer
    minimum: 1
    maximum: 1000
  ListBackupJobsInput:
    type: object
    properties: {}
  ListBackupPlanTemplatesInput:
    type: object
    properties: {}
  ListBackupPlanVersionsInput:
    type: object
    properties: {}
  ListBackupPlansInput:
    type: object
    properties: {}
  ListBackupSelectionsInput:
    type: object
    properties: {}
  ListBackupVaultsInput:
    type: object
    properties: {}
  ListCopyJobsInput:
    type: object
    properties: {}
  ListProtectedResourcesInput:
    type: object
    properties: {}
  ProtectedResourcesList:
    type: array
    items:
      $ref: '#/definitions/ProtectedResource'
  ListRecoveryPointsByBackupVaultInput:
    type: object
    properties: {}
  RecoveryPointByBackupVaultList:
    type: array
    items:
      $ref: '#/definitions/RecoveryPointByBackupVault'
  ListRecoveryPointsByResourceInput:
    type: object
    properties: {}
  RecoveryPointByResourceList:
    type: array
    items:
      $ref: '#/definitions/RecoveryPointByResource'
  ListRestoreJobsInput:
    type: object
    properties: {}
  RestoreJobsList:
    type: array
    items:
      $ref: '#/definitions/RestoreJobsListMember'
  ListTagsInput:
    type: object
    properties: {}
  MetadataKey:
    type: string
  ProtectedResource:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      LastBackupTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a resource was last backed up, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    description: A structure that contains information about a backed-up resource.
  PutBackupVaultAccessPolicyInput:
    type: object
    properties:
      Policy:
        $ref: '#/definitions/IAMPolicy'
        description: The backup vault access policy document in JSON format.
  PutBackupVaultNotificationsInput:
    type: object
    required:
      - SNSTopicArn
      - BackupVaultEvents
    properties:
      SNSTopicArn:
        $ref: '#/definitions/ARN'
        description: 'The Amazon Resource Name (ARN) that specifies the topic for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>.'
      BackupVaultEvents:
        $ref: '#/definitions/BackupVaultEvents'
        description: An array of events that indicate the status of jobs to back up resources to the backup vault.
  RecoveryPointByBackupVault:
    type: object
    properties:
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      BackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: 'The type of AWS resource saved as a recovery point; for example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database Service (Amazon RDS) database.'
      CreatedBy:
        $ref: '#/definitions/RecoveryPointCreator'
        description: 'Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      Status:
        $ref: '#/definitions/RecoveryPointStatus'
        description: A status code specifying the state of the recovery point.
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      CalculatedLifecycle:
        $ref: '#/definitions/CalculatedLifecycle'
        description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      IsEncrypted:
        $ref: '#/definitions/boolean'
        description: 'A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted.'
      LastRestoreTime:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a recovery point was last restored, in Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
    description: Contains detailed information about the recovery points stored in a backup vault.
  RecoveryPointByResource:
    type: object
    properties:
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a recovery point is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      Status:
        $ref: '#/definitions/RecoveryPointStatus'
        description: A status code specifying the state of the recovery point.
      EncryptionKeyArn:
        $ref: '#/definitions/ARN'
        description: 'The server-side encryption key that is used to protect your backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.'
      BackupSizeBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of a backup.'
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
    description: Contains detailed information about a saved recovery point.
  RestoreJobsListMember:
    type: object
    properties:
      RestoreJobId:
        $ref: '#/definitions/string'
        description: Uniquely identifies the job that restores a recovery point.
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      CreationDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a restore job is created, in Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      CompletionDate:
        $ref: '#/definitions/timestamp'
        description: 'The date and time a job to restore a recovery point is completed, in Unix format and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.'
      Status:
        $ref: '#/definitions/RestoreJobStatus'
        description: A status code specifying the state of the job initiated by AWS Backup to restore a recovery point.
      StatusMessage:
        $ref: '#/definitions/string'
        description: A detailed message explaining the status of the job to restore a recovery point.
      PercentDone:
        $ref: '#/definitions/string'
        description: Contains an estimated percentage complete of a job at the time the job status was queried.
      BackupSizeInBytes:
        $ref: '#/definitions/Long'
        description: 'The size, in bytes, of the restored resource.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      ExpectedCompletionTimeMinutes:
        $ref: '#/definitions/Long'
        description: The amount of time in minutes that a job restoring a recovery point is expected to take.
      CreatedResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
    description: Contains metadata about a restore job.
  StartBackupJobInput:
    type: object
    required:
      - BackupVaultName
      - ResourceArn
      - IamRoleArn
    properties:
      BackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens.'
      ResourceArn:
        $ref: '#/definitions/ARN'
        description: An Amazon Resource Name (ARN) that uniquely identifies a resource. The format of the ARN depends on the resource type.
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      IdempotencyToken:
        $ref: '#/definitions/string'
        description: A customer chosen string that can be used to distinguish between calls to <code>StartBackupJob</code>.
      StartWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time in minutes before beginning a backup.
      CompleteWindowMinutes:
        $ref: '#/definitions/WindowMinutes'
        description: The amount of time AWS Backup attempts a backup before canceling the job and returning an error.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup will transition and expire backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
      RecoveryPointTags:
        $ref: '#/definitions/Tags'
        description: 'To help organize your resources, you can assign your own metadata to the resources that you create. Each tag is a key-value pair.'
  StartCopyJobInput:
    type: object
    required:
      - RecoveryPointArn
      - SourceBackupVaultName
      - DestinationBackupVaultArn
      - IamRoleArn
    properties:
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point to use for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. '
      SourceBackupVaultName:
        $ref: '#/definitions/BackupVaultName'
        description: 'The name of a logical source container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of lowercase letters, numbers, and hyphens. &gt;'
      DestinationBackupVaultArn:
        $ref: '#/definitions/ARN'
        description: 'An Amazon Resource Name (ARN) that uniquely identifies a destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>.'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'Specifies the IAM role ARN used to copy the target recovery point; for example, arn:aws:iam::123456789012:role/S3Access.'
      IdempotencyToken:
        $ref: '#/definitions/string'
        description: A customer chosen string that can be used to distinguish between calls to <code>StartCopyJob</code>.
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
  StartRestoreJobInput:
    type: object
    required:
      - RecoveryPointArn
      - Metadata
      - IamRoleArn
    properties:
      RecoveryPointArn:
        $ref: '#/definitions/ARN'
        description: 'An ARN that uniquely identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.'
      Metadata:
        $ref: '#/definitions/Metadata'
        description: '<p>A set of metadata key-value pairs. Contains information, such as a resource name, required to restore a recovery point.</p> <p> You can get configuration metadata about a resource at the time it was backed-up by calling <code>GetRecoveryPointRestoreMetadata</code>. However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code> might be required to restore a resource. For example, you might need to provide a new resource name if the original already exists.</p> <p>You need to specify specific metadata to restore an Amazon Elastic File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>: ID of the Amazon EFS file system that is backed up by AWS Backup. Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies that the file system is encrypted. If <code>KmsKeyId</code> is specified, <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li> <p> <code>KmsKeyId</code>: Specifies the AWS KMS key that is used to encrypt the restored file system.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A user-supplied value that ensures the uniqueness (idempotency) of the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value that, if true, specifies that the recovery point is restored to a new Amazon EFS file system.</p> </li> </ul>'
      IamRoleArn:
        $ref: '#/definitions/IAMRoleArn'
        description: 'The Amazon Resource Name (ARN) of the IAM role that AWS Backup uses to create the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>.'
      IdempotencyToken:
        $ref: '#/definitions/string'
        description: A customer chosen string that can be used to distinguish between calls to <code>StartRestoreJob</code>.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: '<p>Starts a job to restore a recovery point for one of the following resources:</p> <ul> <li> <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p> <code>Storage Gateway</code> for AWS Storage Gateway</p> </li> <li> <p> <code>RDS</code> for Amazon Relational Database Service</p> </li> <li> <p> <code>DDB</code> for Amazon DynamoDB</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li> </ul>'
  StopBackupJobInput:
    type: object
    properties: {}
  TagKey:
    type: string
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/string'
  TagResourceInput:
    type: object
    required:
      - Tags
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: 'Key-value pairs that are used to help organize your resources. You can assign your own metadata to the resources you create. '
  UntagResourceInput:
    type: object
    required:
      - TagKeyList
    properties:
      TagKeyList:
        $ref: '#/definitions/TagKeyList'
        description: A list of keys to identify which key-value tags to remove from a resource.
  UpdateBackupPlanInput:
    type: object
    required:
      - BackupPlan
    properties:
      BackupPlan:
        $ref: '#/definitions/BackupPlanInput'
        description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code> and one or more sets of <code>Rules</code>.
  UpdateRecoveryPointLifecycleInput:
    type: object
    properties:
      Lifecycle:
        $ref: '#/definitions/Lifecycle'
        description: '<p>The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. AWS Backup transitions and expires backups automatically according to the lifecycle that you define. </p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “expire after days” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold. </p>'
