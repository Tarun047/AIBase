swagger: '2.0'
info:
  version: '2015-04-16'
  x-release: v4
  title: AWS Directory Service
  description: '<fullname>AWS Directory Service</fullname> <p>AWS Directory Service is a web service that makes it easy for you to setup and run directories in the AWS cloud, or connect your AWS resources with an existing on-premises Microsoft Active Directory. This guide provides detailed information about AWS Directory Service operations, data types, parameters, and errors. For information about AWS Directory Services features, see <a href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a> and the <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html">AWS Directory Service Administration Guide</a>.</p> <note> <p>AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS Directory Service and other AWS services. For more information about the AWS SDKs, including how to download and install them, see <a href="http://aws.amazon.com/tools/">Tools for Amazon Web Services</a>.</p> </note>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: ds
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ds-2015-04-16.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/ds/'
host: ds.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://ds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Directory Service multi-region endpoint
  - url: 'https://ds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Directory Service multi-region endpoint
  - url: 'http://ds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://ds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Directory Service endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#X-Amz-Target=DirectoryService_20150416.AcceptSharedDirectory':
    post:
      operationId: AcceptSharedDirectory
      description: Accepts a directory sharing request that was sent from the directory owner account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AcceptSharedDirectoryResult'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: DirectoryAlreadySharedException
          schema:
            $ref: '#/definitions/DirectoryAlreadySharedException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AcceptSharedDirectoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.AcceptSharedDirectory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.AddIpRoutes':
    post:
      operationId: AddIpRoutes
      description: '<p>If the DNS server for your on-premises domain uses a publicly addressable IP address, you must add a CIDR address block to correctly route traffic to and from your Microsoft AD on Amazon Web Services. <i>AddIpRoutes</i> adds this address block. You can also use <i>AddIpRoutes</i> to facilitate routing traffic that uses public IP ranges from your Microsoft AD on AWS to a peer VPC. </p> <p>Before you call <i>AddIpRoutes</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>AddIpRoutes</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '484':
          description: IpRouteLimitExceededException
          schema:
            $ref: '#/definitions/IpRouteLimitExceededException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddIpRoutesRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.AddIpRoutes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.AddTagsToResource':
    post:
      operationId: AddTagsToResource
      description: Adds or overwrites one or more tags for the specified directory. Each directory can have a maximum of 50 tags. Each tag consists of a key and optional value. Tag keys must be unique to each resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddTagsToResourceResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: TagLimitExceededException
          schema:
            $ref: '#/definitions/TagLimitExceededException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddTagsToResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.AddTagsToResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CancelSchemaExtension':
    post:
      operationId: CancelSchemaExtension
      description: 'Cancels an in-progress schema extension to a Microsoft AD directory. Once a schema extension has started replicating to all domain controllers, the task can no longer be canceled. A schema extension can be canceled during any of the following states; <code>Initializing</code>, <code>CreatingSnapshot</code>, and <code>UpdatingSchema</code>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelSchemaExtensionResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CancelSchemaExtensionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CancelSchemaExtension
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ConnectDirectory':
    post:
      operationId: ConnectDirectory
      description: '<p>Creates an AD Connector to connect to an on-premises directory.</p> <p>Before you call <code>ConnectDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>ConnectDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConnectDirectoryResult'
        '480':
          description: DirectoryLimitExceededException
          schema:
            $ref: '#/definitions/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConnectDirectoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ConnectDirectory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateAlias':
    post:
      operationId: CreateAlias
      description: '<p>Creates an alias for a directory and assigns the alias to the directory. The alias is used to construct the access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>.</p> <important> <p>After an alias has been created, it cannot be deleted or reused, so this operation should only be used when absolutely necessary.</p> </important>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAliasResult'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAliasRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateAlias
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateComputer':
    post:
      operationId: CreateComputer
      description: 'Creates a computer account in the specified directory, and joins the computer to the directory.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateComputerResult'
        '480':
          description: AuthenticationFailedException
          schema:
            $ref: '#/definitions/AuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '483':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '486':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '487':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateComputerRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateComputer
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateConditionalForwarder':
    post:
      operationId: CreateConditionalForwarder
      description: Creates a conditional forwarder associated with your AWS directory. Conditional forwarders are required in order to set up a trust relationship with another domain. The conditional forwarder points to the trusted domain.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateConditionalForwarderResult'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateConditionalForwarderRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateConditionalForwarder
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateDirectory':
    post:
      operationId: CreateDirectory
      description: '<p>Creates a Simple AD directory. For more information, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_simple_ad.html">Simple Active Directory</a> in the <i>AWS Directory Service Admin Guide</i>.</p> <p>Before you call <code>CreateDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>CreateDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDirectoryResult'
        '480':
          description: DirectoryLimitExceededException
          schema:
            $ref: '#/definitions/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDirectoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateDirectory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateLogSubscription':
    post:
      operationId: CreateLogSubscription
      description: Creates a subscription to forward real-time Directory Service domain controller security logs to the specified Amazon CloudWatch log group in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLogSubscriptionResult'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '483':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLogSubscriptionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateLogSubscription
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateMicrosoftAD':
    post:
      operationId: CreateMicrosoftAD
      description: '<p>Creates a Microsoft AD directory in the AWS Cloud. For more information, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/directory_microsoft_ad.html">AWS Managed Microsoft AD</a> in the <i>AWS Directory Service Admin Guide</i>.</p> <p>Before you call <i>CreateMicrosoftAD</i>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <i>CreateMicrosoftAD</i> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMicrosoftADResult'
        '480':
          description: DirectoryLimitExceededException
          schema:
            $ref: '#/definitions/DirectoryLimitExceededException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateMicrosoftADRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateMicrosoftAD
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateSnapshot':
    post:
      operationId: CreateSnapshot
      description: <p>Creates a snapshot of a Simple AD or Microsoft AD directory in the AWS cloud.</p> <note> <p>You cannot take snapshots of AD Connector directories.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: SnapshotLimitExceededException
          schema:
            $ref: '#/definitions/SnapshotLimitExceededException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateSnapshotRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateSnapshot
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.CreateTrust':
    post:
      operationId: CreateTrust
      description: '<p>AWS Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your AWS Managed Microsoft AD directory, and your existing on-premises Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the AWS side of a trust relationship between an AWS Managed Microsoft AD directory and an external domain. You can create either a forest trust or an external trust.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTrustResult'
        '480':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateTrustRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.CreateTrust
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DeleteConditionalForwarder':
    post:
      operationId: DeleteConditionalForwarder
      description: Deletes a conditional forwarder that has been set up for your AWS directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteConditionalForwarderResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteConditionalForwarderRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DeleteConditionalForwarder
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DeleteDirectory':
    post:
      operationId: DeleteDirectory
      description: '<p>Deletes an AWS Directory Service directory.</p> <p>Before you call <code>DeleteDirectory</code>, ensure that all of the required permissions have been explicitly granted through a policy. For details about what permissions are required to run the <code>DeleteDirectory</code> operation, see <a href="http://docs.aws.amazon.com/directoryservice/latest/admin-guide/UsingWithDS_IAM_ResourcePermissions.html">AWS Directory Service API Permissions: Actions, Resources, and Conditions Reference</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDirectoryResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteDirectoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DeleteDirectory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DeleteLogSubscription':
    post:
      operationId: DeleteLogSubscription
      description: Deletes the specified log subscription.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLogSubscriptionResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLogSubscriptionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DeleteLogSubscription
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DeleteSnapshot':
    post:
      operationId: DeleteSnapshot
      description: Deletes a directory snapshot.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteSnapshotRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DeleteSnapshot
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DeleteTrust':
    post:
      operationId: DeleteTrust
      description: Deletes an existing trust relationship between your AWS Managed Microsoft AD directory and an external domain.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTrustResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteTrustRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DeleteTrust
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DeregisterCertificate':
    post:
      operationId: DeregisterCertificate
      description: Deletes from the system the certificate that was registered for a secured LDAP connection.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterCertificateResult'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          schema:
            $ref: '#/definitions/DirectoryDoesNotExistException'
        '482':
          description: CertificateDoesNotExistException
          schema:
            $ref: '#/definitions/CertificateDoesNotExistException'
        '483':
          description: CertificateInUseException
          schema:
            $ref: '#/definitions/CertificateInUseException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '485':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '486':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '487':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterCertificateRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DeregisterCertificate
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DeregisterEventTopic':
    post:
      operationId: DeregisterEventTopic
      description: Removes the specified directory as a publisher to the specified SNS topic.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterEventTopicResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterEventTopicRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DeregisterEventTopic
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeCertificate':
    post:
      operationId: DescribeCertificate
      description: Displays information about the certificate registered for a secured LDAP connection.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCertificateResult'
        '480':
          description: DirectoryDoesNotExistException
          schema:
            $ref: '#/definitions/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '482':
          description: CertificateDoesNotExistException
          schema:
            $ref: '#/definitions/CertificateDoesNotExistException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeCertificateRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeCertificate
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeConditionalForwarders':
    post:
      operationId: DescribeConditionalForwarders
      description: '<p>Obtains information about the conditional forwarders for this account.</p> <p>If no input parameters are provided for RemoteDomainNames, this request describes all conditional forwarders for the specified directory ID.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeConditionalForwardersResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeConditionalForwardersRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeConditionalForwarders
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeDirectories':
    post:
      operationId: DescribeDirectories
      description: '<p>Obtains information about the directories that belong to this account.</p> <p>You can retrieve information about specific directories by passing the directory identifiers in the <code>DirectoryIds</code> parameter. Otherwise, all directories that belong to the current account are returned.</p> <p>This operation supports pagination with the use of the <code>NextToken</code> request and response parameters. If more results are available, the <code>DescribeDirectoriesResult.NextToken</code> member contains a token that you pass in the next call to <a>DescribeDirectories</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <code>Limit</code> parameter.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDirectoriesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDirectoriesRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeDirectories
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeDomainControllers':
    post:
      operationId: DescribeDomainControllers
      description: Provides information about any domain controllers in your directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDomainControllersResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDomainControllersRequest'
        - name: Limit
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeDomainControllers
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeEventTopics':
    post:
      operationId: DescribeEventTopics
      description: '<p>Obtains information about which SNS topics receive status messages from the specified directory.</p> <p>If no input parameters are provided, such as DirectoryId or TopicName, this request describes all of the associations in the account.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventTopicsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeEventTopicsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeEventTopics
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeLDAPSSettings':
    post:
      operationId: DescribeLDAPSSettings
      description: Describes the status of LDAP security for the specified directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeLDAPSSettingsResult'
        '480':
          description: DirectoryDoesNotExistException
          schema:
            $ref: '#/definitions/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeLDAPSSettingsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeLDAPSSettings
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeSharedDirectories':
    post:
      operationId: DescribeSharedDirectories
      description: 'Returns the shared directories in your account. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSharedDirectoriesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSharedDirectoriesRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeSharedDirectories
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeSnapshots':
    post:
      operationId: DescribeSnapshots
      description: '<p>Obtains information about the directory snapshots that belong to this account.</p> <p>This operation supports pagination with the use of the <i>NextToken</i> request and response parameters. If more results are available, the <i>DescribeSnapshots.NextToken</i> member contains a token that you pass in the next call to <a>DescribeSnapshots</a> to retrieve the next set of items.</p> <p>You can also specify a maximum number of return results with the <i>Limit</i> parameter.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSnapshotsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeSnapshotsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeSnapshots
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DescribeTrusts':
    post:
      operationId: DescribeTrusts
      description: '<p>Obtains information about the trust relationships for this account.</p> <p>If no input parameters are provided, such as DirectoryId or TrustIds, this request describes all the trust relationships belonging to the account.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTrustsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTrustsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DescribeTrusts
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DisableLDAPS':
    post:
      operationId: DisableLDAPS
      description: Deactivates LDAP secure calls for the specified directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableLDAPSResult'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          schema:
            $ref: '#/definitions/DirectoryDoesNotExistException'
        '482':
          description: InvalidLDAPSStatusException
          schema:
            $ref: '#/definitions/InvalidLDAPSStatusException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableLDAPSRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DisableLDAPS
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DisableRadius':
    post:
      operationId: DisableRadius
      description: Disables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableRadiusResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableRadiusRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DisableRadius
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.DisableSso':
    post:
      operationId: DisableSso
      description: Disables single-sign on for a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableSsoResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '482':
          description: AuthenticationFailedException
          schema:
            $ref: '#/definitions/AuthenticationFailedException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisableSsoRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.DisableSso
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.EnableLDAPS':
    post:
      operationId: EnableLDAPS
      description: Activates the switch for the specific directory to always use LDAP secure calls.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableLDAPSResult'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          schema:
            $ref: '#/definitions/DirectoryDoesNotExistException'
        '482':
          description: NoAvailableCertificateException
          schema:
            $ref: '#/definitions/NoAvailableCertificateException'
        '483':
          description: InvalidLDAPSStatusException
          schema:
            $ref: '#/definitions/InvalidLDAPSStatusException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '485':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '486':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '487':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableLDAPSRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.EnableLDAPS
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.EnableRadius':
    post:
      operationId: EnableRadius
      description: Enables multi-factor authentication (MFA) with the Remote Authentication Dial In User Service (RADIUS) server for an AD Connector or Microsoft AD directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableRadiusResult'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: EntityAlreadyExistsException
          schema:
            $ref: '#/definitions/EntityAlreadyExistsException'
        '482':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableRadiusRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.EnableRadius
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.EnableSso':
    post:
      operationId: EnableSso
      description: Enables single sign-on for a directory. Single sign-on allows users in your directory to access certain AWS services from a computer joined to the directory without having to enter their credentials separately.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableSsoResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InsufficientPermissionsException
          schema:
            $ref: '#/definitions/InsufficientPermissionsException'
        '482':
          description: AuthenticationFailedException
          schema:
            $ref: '#/definitions/AuthenticationFailedException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EnableSsoRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.EnableSso
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.GetDirectoryLimits':
    post:
      operationId: GetDirectoryLimits
      description: Obtains directory limit information for the current Region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDirectoryLimitsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetDirectoryLimitsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.GetDirectoryLimits
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.GetSnapshotLimits':
    post:
      operationId: GetSnapshotLimits
      description: Obtains the manual snapshot limits for a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSnapshotLimitsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetSnapshotLimitsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.GetSnapshotLimits
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ListCertificates':
    post:
      operationId: ListCertificates
      description: 'For the specified directory, lists all the certificates registered for a secured LDAP connection.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCertificatesResult'
        '480':
          description: DirectoryDoesNotExistException
          schema:
            $ref: '#/definitions/DirectoryDoesNotExistException'
        '481':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListCertificatesRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ListCertificates
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ListIpRoutes':
    post:
      operationId: ListIpRoutes
      description: Lists the address blocks that you have added to a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListIpRoutesRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ListIpRoutes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ListLogSubscriptions':
    post:
      operationId: ListLogSubscriptions
      description: Lists the active log subscriptions for the AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLogSubscriptionsResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLogSubscriptionsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ListLogSubscriptions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ListSchemaExtensions':
    post:
      operationId: ListSchemaExtensions
      description: Lists all schema extensions applied to a Microsoft AD Directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSchemaExtensionsResult'
        '480':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListSchemaExtensionsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ListSchemaExtensions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Lists all tags on a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidNextTokenException
          schema:
            $ref: '#/definitions/InvalidNextTokenException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ListTagsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.RegisterCertificate':
    post:
      operationId: RegisterCertificate
      description: Registers a certificate for secured LDAP connection.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterCertificateResult'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: DirectoryDoesNotExistException
          schema:
            $ref: '#/definitions/DirectoryDoesNotExistException'
        '482':
          description: InvalidCertificateException
          schema:
            $ref: '#/definitions/InvalidCertificateException'
        '483':
          description: CertificateLimitExceededException
          schema:
            $ref: '#/definitions/CertificateLimitExceededException'
        '484':
          description: CertificateAlreadyExistsException
          schema:
            $ref: '#/definitions/CertificateAlreadyExistsException'
        '485':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '486':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '487':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '488':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterCertificateRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.RegisterCertificate
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.RegisterEventTopic':
    post:
      operationId: RegisterEventTopic
      description: Associates a directory with an SNS topic. This establishes the directory as a publisher to the specified SNS topic. You can then receive email or text (SMS) messages when the status of your directory changes. You get notified if your directory goes from an Active status to an Impaired or Inoperable status. You also receive a notification when the directory returns to an Active status.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterEventTopicResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterEventTopicRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.RegisterEventTopic
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.RejectSharedDirectory':
    post:
      operationId: RejectSharedDirectory
      description: Rejects a directory sharing request that was sent from the directory owner account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RejectSharedDirectoryResult'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: DirectoryAlreadySharedException
          schema:
            $ref: '#/definitions/DirectoryAlreadySharedException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RejectSharedDirectoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.RejectSharedDirectory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.RemoveIpRoutes':
    post:
      operationId: RemoveIpRoutes
      description: Removes IP address blocks from a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveIpRoutesResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveIpRoutesRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.RemoveIpRoutes
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.RemoveTagsFromResource':
    post:
      operationId: RemoveTagsFromResource
      description: Removes tags from a directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveTagsFromResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.RemoveTagsFromResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ResetUserPassword':
    post:
      operationId: ResetUserPassword
      description: '<p>Resets the password for any user in your AWS Managed Microsoft AD or Simple AD directory.</p> <p>You can reset the password for any user in your directory with the following exceptions:</p> <ul> <li> <p>For Simple AD, you cannot reset the password for any user that is a member of either the <b>Domain Admins</b> or <b>Enterprise Admins</b> group except for the administrator user.</p> </li> <li> <p>For AWS Managed Microsoft AD, you can only reset the password for a user that is in an OU based off of the NetBIOS name that you typed when you created your directory. For example, you cannot reset the password for a user in the <b>AWS Reserved</b> OU. For more information about the OU structure for an AWS Managed Microsoft AD directory, see <a href="https://docs.aws.amazon.com/directoryservice/latest/admin-guide/ms_ad_getting_started_what_gets_created.html">What Gets Created</a> in the <i>AWS Directory Service Administration Guide</i>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetUserPasswordResult'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: UserDoesNotExistException
          schema:
            $ref: '#/definitions/UserDoesNotExistException'
        '482':
          description: InvalidPasswordException
          schema:
            $ref: '#/definitions/InvalidPasswordException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResetUserPasswordRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ResetUserPassword
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.RestoreFromSnapshot':
    post:
      operationId: RestoreFromSnapshot
      description: '<p>Restores a directory using an existing directory snapshot.</p> <p>When you restore a directory from a snapshot, any changes made to the directory after the snapshot date are overwritten.</p> <p>This action returns as soon as the restore operation is initiated. You can monitor the progress of the restore operation by calling the <a>DescribeDirectories</a> operation with the directory identifier. When the <b>DirectoryDescription.Stage</b> value changes to <code>Active</code>, the restore operation is complete.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreFromSnapshotResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RestoreFromSnapshotRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.RestoreFromSnapshot
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.ShareDirectory':
    post:
      operationId: ShareDirectory
      description: '<p>Shares a specified directory (<code>DirectoryId</code>) in your AWS account (directory owner) with another AWS account (directory consumer). With this operation you can use your directory from any AWS account and from any Amazon VPC within an AWS Region.</p> <p>When you share your AWS Managed Microsoft AD directory, AWS Directory Service creates a shared directory in the directory consumer account. This shared directory contains the metadata to provide access to the directory within the directory owner account. The shared directory is visible in all VPCs in the directory consumer account.</p> <p>The <code>ShareMethod</code> parameter determines whether the specified directory can be shared between AWS accounts inside the same AWS organization (<code>ORGANIZATIONS</code>). It also determines whether you can share the directory with any other AWS account either inside or outside of the organization (<code>HANDSHAKE</code>).</p> <p>The <code>ShareNotes</code> parameter is only used when <code>HANDSHAKE</code> is called, which sends a directory sharing request to the directory consumer. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ShareDirectoryResult'
        '480':
          description: DirectoryAlreadySharedException
          schema:
            $ref: '#/definitions/DirectoryAlreadySharedException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ShareLimitExceededException
          schema:
            $ref: '#/definitions/ShareLimitExceededException'
        '486':
          description: OrganizationsException
          schema:
            $ref: '#/definitions/OrganizationsException'
        '487':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '488':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '489':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ShareDirectoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.ShareDirectory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.StartSchemaExtension':
    post:
      operationId: StartSchemaExtension
      description: Applies a schema extension to a Microsoft AD directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartSchemaExtensionResult'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: SnapshotLimitExceededException
          schema:
            $ref: '#/definitions/SnapshotLimitExceededException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartSchemaExtensionRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.StartSchemaExtension
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.UnshareDirectory':
    post:
      operationId: UnshareDirectory
      description: 'Stops the directory sharing between the directory owner and consumer accounts. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UnshareDirectoryResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidTargetException
          schema:
            $ref: '#/definitions/InvalidTargetException'
        '482':
          description: DirectoryNotSharedException
          schema:
            $ref: '#/definitions/DirectoryNotSharedException'
        '483':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '484':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UnshareDirectoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.UnshareDirectory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.UpdateConditionalForwarder':
    post:
      operationId: UpdateConditionalForwarder
      description: Updates a conditional forwarder that has been set up for your AWS directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateConditionalForwarderResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '484':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '485':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateConditionalForwarderRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.UpdateConditionalForwarder
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.UpdateNumberOfDomainControllers':
    post:
      operationId: UpdateNumberOfDomainControllers
      description: 'Adds or removes domain controllers to or from the directory. Based on the difference between current value and new value (provided through this API call), domain controllers will be added or removed. It may take up to 45 minutes for any new domain controllers to become fully active once the requested number of domain controllers is updated. During this time, you cannot make another update request.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateNumberOfDomainControllersResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: DomainControllerLimitExceededException
          schema:
            $ref: '#/definitions/DomainControllerLimitExceededException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
        '485':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '486':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateNumberOfDomainControllersRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.UpdateNumberOfDomainControllers
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.UpdateRadius':
    post:
      operationId: UpdateRadius
      description: Updates the Remote Authentication Dial In User Service (RADIUS) server information for an AD Connector or Microsoft AD directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRadiusResult'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateRadiusRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.UpdateRadius
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.UpdateTrust':
    post:
      operationId: UpdateTrust
      description: Updates the trust that has been set up between your AWS Managed Microsoft AD directory and an on-premises Active Directory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTrustResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateTrustRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.UpdateTrust
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=DirectoryService_20150416.VerifyTrust':
    post:
      operationId: VerifyTrust
      description: <p>AWS Directory Service for Microsoft Active Directory allows you to configure and verify trust relationships.</p> <p>This action verifies a trust relationship between your AWS Managed Microsoft AD directory and an external domain.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VerifyTrustResult'
        '480':
          description: EntityDoesNotExistException
          schema:
            $ref: '#/definitions/EntityDoesNotExistException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '483':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '484':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/VerifyTrustRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - DirectoryService_20150416.VerifyTrust
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AcceptSharedDirectoryResult:
    type: object
    properties:
      SharedDirectory:
        $ref: '#/definitions/SharedDirectory'
        description: The shared directory in the directory consumer account.
  AcceptSharedDirectoryRequest:
    type: object
    required:
      - SharedDirectoryId
    properties:
      SharedDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: 'Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account. '
  InvalidParameterException: {}
  EntityDoesNotExistException: {}
  DirectoryAlreadySharedException: {}
  ClientException: {}
  ServiceException: {}
  AddIpRoutesResult:
    type: object
    properties: {}
  AddIpRoutesRequest:
    type: object
    required:
      - DirectoryId
      - IpRoutes
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory to which to add the address block.
      IpRoutes:
        $ref: '#/definitions/IpRoutes'
        description: 'IP address blocks, using CIDR format, of the traffic to route. This is often the IP address block of the DNS server used for your on-premises domain.'
      UpdateSecurityGroupForDirectoryControllers:
        $ref: '#/definitions/UpdateSecurityGroupForDirectoryControllers'
        description: '<p>If set to true, updates the inbound and outbound rules of the security group that has the description: "AWS created security group for <i>directory ID</i> directory controllers." Following are the new rules: </p> <p>Inbound:</p> <ul> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 123, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 138, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 135, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 636, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 1024-65535, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 3268-33269, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (UDP), Protocol: UDP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (TCP), Protocol: TCP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: LDAP, Protocol: TCP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: All ICMP, Protocol: All, Range: N/A, Source: 0.0.0.0/0</p> </li> </ul> <p/> <p>Outbound:</p> <ul> <li> <p>Type: All traffic, Protocol: All, Range: All, Destination: 0.0.0.0/0</p> </li> </ul> <p>These security rules impact an internal network interface that is not exposed publicly.</p>'
  EntityAlreadyExistsException: {}
  DirectoryUnavailableException: {}
  IpRouteLimitExceededException: {}
  AddTagsToResourceResult:
    type: object
    properties: {}
  AddTagsToResourceRequest:
    type: object
    required:
      - ResourceId
      - Tags
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: Identifier (ID) for the directory to which to add the tag.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to be assigned to the directory.
  TagLimitExceededException: {}
  CancelSchemaExtensionResult:
    type: object
    properties: {}
  CancelSchemaExtensionRequest:
    type: object
    required:
      - DirectoryId
      - SchemaExtensionId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory whose schema extension will be canceled.
      SchemaExtensionId:
        $ref: '#/definitions/SchemaExtensionId'
        description: The identifier of the schema extension that will be canceled.
  ConnectDirectoryResult:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the new directory.
    description: Contains the results of the <a>ConnectDirectory</a> operation.
  ConnectDirectoryRequest:
    type: object
    required:
      - Name
      - Password
      - Size
      - ConnectSettings
    properties:
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name of the on-premises directory, such as <code>corp.example.com</code>.'
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: 'The NetBIOS name of the on-premises directory, such as <code>CORP</code>.'
      Password:
        $ref: '#/definitions/ConnectPassword'
        description: The password for the on-premises user account.
      Description:
        $ref: '#/definitions/Description'
        description: A description for the directory.
      Size:
        $ref: '#/definitions/DirectorySize'
        description: The size of the directory.
      ConnectSettings:
        $ref: '#/definitions/DirectoryConnectSettings'
        description: A <a>DirectoryConnectSettings</a> object that contains additional information for the operation.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to be assigned to AD Connector.
    description: Contains the inputs for the <a>ConnectDirectory</a> operation.
  DirectoryLimitExceededException: {}
  CreateAliasResult:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      Alias:
        $ref: '#/definitions/AliasName'
        description: The alias for the directory.
    description: Contains the results of the <a>CreateAlias</a> operation.
  CreateAliasRequest:
    type: object
    required:
      - DirectoryId
      - Alias
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to create the alias.
      Alias:
        $ref: '#/definitions/AliasName'
        description: <p>The requested alias.</p> <p>The alias must be unique amongst all aliases in AWS. This operation throws an <code>EntityAlreadyExistsException</code> error if the alias already exists.</p>
    description: Contains the inputs for the <a>CreateAlias</a> operation.
  CreateComputerResult:
    type: object
    properties:
      Computer:
        $ref: '#/definitions/Computer'
        description: A <a>Computer</a> object that represents the computer account.
    description: Contains the results for the <a>CreateComputer</a> operation.
  CreateComputerRequest:
    type: object
    required:
      - DirectoryId
      - ComputerName
      - Password
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory in which to create the computer account.
      ComputerName:
        $ref: '#/definitions/ComputerName'
        description: The name of the computer account.
      Password:
        $ref: '#/definitions/ComputerPassword'
        description: 'A one-time password that is used to join the computer to the directory. You should generate a random, strong password to use for this parameter.'
      OrganizationalUnitDistinguishedName:
        $ref: '#/definitions/OrganizationalUnitDN'
        description: The fully-qualified distinguished name of the organizational unit to place the computer account in.
      ComputerAttributes:
        $ref: '#/definitions/Attributes'
        description: An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to the computer account.
    description: Contains the inputs for the <a>CreateComputer</a> operation.
  AuthenticationFailedException: {}
  UnsupportedOperationException: {}
  CreateConditionalForwarderResult:
    type: object
    properties: {}
    description: The result of a CreateConditinalForwarder request.
  CreateConditionalForwarderRequest:
    type: object
    required:
      - DirectoryId
      - RemoteDomainName
      - DnsIpAddrs
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID of the AWS directory for which you are creating the conditional forwarder.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The IP addresses of the remote DNS server associated with RemoteDomainName.
    description: Initiates the creation of a conditional forwarder for your AWS Directory Service for Microsoft Active Directory. Conditional forwarders are required in order to set up a trust relationship with another domain.
  CreateDirectoryResult:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory that was created.
    description: Contains the results of the <a>CreateDirectory</a> operation.
  CreateDirectoryRequest:
    type: object
    required:
      - Name
      - Password
      - Size
    properties:
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified name for the directory, such as <code>corp.example.com</code>.'
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: 'The NetBIOS name of the directory, such as <code>CORP</code>.'
      Password:
        $ref: '#/definitions/Password'
        description: '<p>The password for the directory administrator. The directory creation process creates a directory administrator account with the user name <code>Administrator</code> and this password.</p> <p>If you need to change the password for the administrator account, you can use the <a>ResetUserPassword</a> API call.</p>'
      Description:
        $ref: '#/definitions/Description'
        description: A description for the directory.
      Size:
        $ref: '#/definitions/DirectorySize'
        description: The size of the directory.
      VpcSettings:
        $ref: '#/definitions/DirectoryVpcSettings'
        description: A <a>DirectoryVpcSettings</a> object that contains additional information for the operation.
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to be assigned to the Simple AD directory.
    description: 'Contains the inputs for the <a>CreateDirectory</a> operation. '
  CreateLogSubscriptionResult:
    type: object
    properties: {}
  CreateLogSubscriptionRequest:
    type: object
    required:
      - DirectoryId
      - LogGroupName
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory to which you want to subscribe and receive real-time logs to your specified CloudWatch log group.
      LogGroupName:
        $ref: '#/definitions/LogGroupName'
        description: The name of the CloudWatch log group where the real-time domain controller logs are forwarded.
  InsufficientPermissionsException: {}
  CreateMicrosoftADResult:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory that was created.
    description: Result of a CreateMicrosoftAD request.
  CreateMicrosoftADRequest:
    type: object
    required:
      - Name
      - Password
      - VpcSettings
    properties:
      Name:
        $ref: '#/definitions/DirectoryName'
        description: 'The fully qualified domain name for the AWS Managed Microsoft AD directory, such as <code>corp.example.com</code>. This name will resolve inside your VPC only. It does not need to be publicly resolvable.'
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: 'The NetBIOS name for your domain, such as <code>CORP</code>. If you don''t specify a NetBIOS name, it will default to the first part of your directory DNS. For example, <code>CORP</code> for the directory DNS <code>corp.example.com</code>. '
      Password:
        $ref: '#/definitions/Password'
        description: '<p>The password for the default administrative user named <code>Admin</code>.</p> <p>If you need to change the password for the administrator account, you can use the <a>ResetUserPassword</a> API call.</p>'
      Description:
        $ref: '#/definitions/Description'
        description: A description for the directory. This label will appear on the AWS console <code>Directory Details</code> page after the directory is created.
      VpcSettings:
        $ref: '#/definitions/DirectoryVpcSettings'
        description: Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.
      Edition:
        $ref: '#/definitions/DirectoryEdition'
        description: 'AWS Managed Microsoft AD is available in two editions: <code>Standard</code> and <code>Enterprise</code>. <code>Enterprise</code> is the default.'
      Tags:
        $ref: '#/definitions/Tags'
        description: The tags to be assigned to the AWS Managed Microsoft AD directory.
    description: Creates an AWS Managed Microsoft AD directory.
  CreateSnapshotResult:
    type: object
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the snapshot that was created.
    description: Contains the results of the <a>CreateSnapshot</a> operation.
  CreateSnapshotRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory of which to take a snapshot.
      Name:
        $ref: '#/definitions/SnapshotName'
        description: The descriptive name to apply to the snapshot.
    description: Contains the inputs for the <a>CreateSnapshot</a> operation.
  SnapshotLimitExceededException: {}
  CreateTrustResult:
    type: object
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: A unique identifier for the trust relationship that was created.
    description: The result of a CreateTrust request.
  CreateTrustRequest:
    type: object
    required:
      - DirectoryId
      - RemoteDomainName
      - TrustPassword
      - TrustDirection
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of the AWS Managed Microsoft AD directory for which to establish the trust relationship.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The Fully Qualified Domain Name (FQDN) of the external domain for which to create the trust relationship.
      TrustPassword:
        $ref: '#/definitions/TrustPassword'
        description: The trust password. The must be the same password that was used when creating the trust relationship on the external domain.
      TrustDirection:
        $ref: '#/definitions/TrustDirection'
        description: The direction of the trust relationship.
      TrustType:
        $ref: '#/definitions/TrustType'
        description: The trust relationship type. <code>Forest</code> is the default.
      ConditionalForwarderIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The IP addresses of the remote DNS server associated with RemoteDomainName.
      SelectiveAuth:
        $ref: '#/definitions/SelectiveAuth'
        description: Optional parameter to enable selective authentication for the trust.
    description: '<p>AWS Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your AWS Managed Microsoft AD directory, and your existing on-premises Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the AWS side of a trust relationship between an AWS Managed Microsoft AD directory and an external domain.</p>'
  DeleteConditionalForwarderResult:
    type: object
    properties: {}
    description: The result of a DeleteConditionalForwarder request.
  DeleteConditionalForwarderRequest:
    type: object
    required:
      - DirectoryId
      - RemoteDomainName
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID for which you are deleting the conditional forwarder.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domain with which you are deleting the conditional forwarder.
    description: Deletes a conditional forwarder.
  DeleteDirectoryResult:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory identifier.
    description: Contains the results of the <a>DeleteDirectory</a> operation.
  DeleteDirectoryRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory to delete.
    description: Contains the inputs for the <a>DeleteDirectory</a> operation.
  DeleteLogSubscriptionResult:
    type: object
    properties: {}
  DeleteLogSubscriptionRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory whose log subscription you want to delete.
  DeleteSnapshotResult:
    type: object
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the directory snapshot that was deleted.
    description: Contains the results of the <a>DeleteSnapshot</a> operation.
  DeleteSnapshotRequest:
    type: object
    required:
      - SnapshotId
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the directory snapshot to be deleted.
    description: Contains the inputs for the <a>DeleteSnapshot</a> operation.
  DeleteTrustResult:
    type: object
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The Trust ID of the trust relationship that was deleted.
    description: The result of a DeleteTrust request.
  DeleteTrustRequest:
    type: object
    required:
      - TrustId
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The Trust ID of the trust relationship to be deleted.
      DeleteAssociatedConditionalForwarder:
        $ref: '#/definitions/DeleteAssociatedConditionalForwarder'
        description: Delete a conditional forwarder as part of a DeleteTrustRequest.
    description: Deletes the local side of an existing trust relationship between the AWS Managed Microsoft AD directory and the external domain.
  DeregisterCertificateResult:
    type: object
    properties: {}
  DeregisterCertificateRequest:
    type: object
    required:
      - DirectoryId
      - CertificateId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      CertificateId:
        $ref: '#/definitions/CertificateId'
        description: The identifier of the certificate.
  DirectoryDoesNotExistException: {}
  CertificateDoesNotExistException: {}
  CertificateInUseException: {}
  DeregisterEventTopicResult:
    type: object
    properties: {}
    description: The result of a DeregisterEventTopic request.
  DeregisterEventTopicRequest:
    type: object
    required:
      - DirectoryId
      - TopicName
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID to remove as a publisher. This directory will no longer send messages to the specified SNS topic.
      TopicName:
        $ref: '#/definitions/TopicName'
        description: The name of the SNS topic from which to remove the directory as a publisher.
    description: Removes the specified directory as a publisher to the specified SNS topic.
  DescribeCertificateResult:
    type: object
    properties:
      Certificate:
        $ref: '#/definitions/Certificate'
        description: 'Information about the certificate, including registered date time, certificate state, the reason for the state, expiration date time, and certificate common name.'
  DescribeCertificateRequest:
    type: object
    required:
      - DirectoryId
      - CertificateId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      CertificateId:
        $ref: '#/definitions/CertificateId'
        description: The identifier of the certificate.
  DescribeConditionalForwardersResult:
    type: object
    properties:
      ConditionalForwarders:
        $ref: '#/definitions/ConditionalForwarders'
        description: The list of conditional forwarders that have been created.
    description: The result of a DescribeConditionalForwarder request.
  DescribeConditionalForwardersRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID for which to get the list of associated conditional forwarders.
      RemoteDomainNames:
        $ref: '#/definitions/RemoteDomainNames'
        description: 'The fully qualified domain names (FQDN) of the remote domains for which to get the list of associated conditional forwarders. If this member is null, all conditional forwarders are returned.'
    description: Describes a conditional forwarder.
  DescribeDirectoriesResult:
    type: object
    properties:
      DirectoryDescriptions:
        $ref: '#/definitions/DirectoryDescriptions'
        description: '<p>The list of <a>DirectoryDescription</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <code>Limit</code> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next set of items.'
    description: Contains the results of the <a>DescribeDirectories</a> operation.
  DescribeDirectoriesRequest:
    type: object
    properties:
      DirectoryIds:
        $ref: '#/definitions/DirectoryIds'
        description: '<p>A list of identifiers of the directories for which to obtain the information. If this member is null, all directories that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <code>DescribeDirectoriesResult.NextToken</code> value from a previous call to <a>DescribeDirectories</a>. Pass null if this is the first call.
      Limit:
        $ref: '#/definitions/Limit'
        description: 'The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'
    description: Contains the inputs for the <a>DescribeDirectories</a> operation.
  InvalidNextTokenException: {}
  DescribeDomainControllersResult:
    type: object
    properties:
      DomainControllers:
        $ref: '#/definitions/DomainControllers'
        description: List of the <a>DomainController</a> objects that were retrieved.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeDomainControllers</a> retrieve the next set of items.'
  DescribeDomainControllersRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory for which to retrieve the domain controller information.
      DomainControllerIds:
        $ref: '#/definitions/DomainControllerIds'
        description: A list of identifiers for the domain controllers whose information will be provided.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The <i>DescribeDomainControllers.NextToken</i> value from a previous call to <a>DescribeDomainControllers</a>. Pass null if this is the first call. '
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of items to return.
  DescribeEventTopicsResult:
    type: object
    properties:
      EventTopics:
        $ref: '#/definitions/EventTopics'
        description: A list of SNS topic names that receive status messages from the specified Directory ID.
    description: The result of a DescribeEventTopic request.
  DescribeEventTopicsRequest:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: 'The Directory ID for which to get the list of associated SNS topics. If this member is null, associations for all Directory IDs are returned.'
      TopicNames:
        $ref: '#/definitions/TopicNames'
        description: '<p>A list of SNS topic names for which to obtain the information. If this member is null, all associations for the specified Directory ID are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
    description: Describes event topics.
  DescribeLDAPSSettingsResult:
    type: object
    properties:
      LDAPSSettingsInfo:
        $ref: '#/definitions/LDAPSSettingsInfo'
        description: 'Information about LDAP security for the specified directory, including status of enablement, state last updated date time, and the reason for the state.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The next token used to retrieve the LDAPS settings if the number of setting types exceeds page limit and there is another page.
  DescribeLDAPSSettingsRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      Type:
        $ref: '#/definitions/LDAPSType'
        description: 'The type of LDAP security the customer wants to enable, either server or client. Currently supports only <code>Client</code>, (the default).'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The type of next token used for pagination.
      Limit:
        $ref: '#/definitions/PageLimit'
        description: Specifies the number of items that should be displayed on one page.
  DescribeSharedDirectoriesResult:
    type: object
    properties:
      SharedDirectories:
        $ref: '#/definitions/SharedDirectories'
        description: A list of all shared directories in your account.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, token that indicates that more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <a>DescribeSharedDirectories</a> to retrieve the next set of items.'
  DescribeSharedDirectoriesRequest:
    type: object
    required:
      - OwnerDirectoryId
    properties:
      OwnerDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: 'Returns the identifier of the directory in the directory owner account. '
      SharedDirectoryIds:
        $ref: '#/definitions/DirectoryIds'
        description: 'A list of identifiers of all shared directories in your account. '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The <code>DescribeSharedDirectoriesResult.NextToken</code> value from a previous call to <a>DescribeSharedDirectories</a>. Pass null if this is the first call. '
      Limit:
        $ref: '#/definitions/Limit'
        description: The number of shared directories to return in the response object.
  DescribeSnapshotsResult:
    type: object
    properties:
      Snapshots:
        $ref: '#/definitions/Snapshots'
        description: '<p>The list of <a>Snapshot</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value in the <i>NextToken</i> member of a subsequent call to <a>DescribeSnapshots</a>.'
    description: Contains the results of the <a>DescribeSnapshots</a> operation.
  DescribeSnapshotsRequest:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to retrieve snapshot information.
      SnapshotIds:
        $ref: '#/definitions/SnapshotIds'
        description: 'A list of identifiers of the snapshots to obtain the information for. If this member is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i> members.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>. Pass null if this is the first call.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of objects to return.
    description: Contains the inputs for the <a>DescribeSnapshots</a> operation.
  DescribeTrustsResult:
    type: object
    properties:
      Trusts:
        $ref: '#/definitions/Trusts'
        description: '<p>The list of Trust objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeTrusts</a> to retrieve the next set of items.'
    description: The result of a DescribeTrust request.
  DescribeTrustsRequest:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of the AWS directory that is a part of the requested trust relationship.
      TrustIds:
        $ref: '#/definitions/TrustIds'
        description: '<p>A list of identifiers of the trust relationships for which to obtain the information. If this member is null, all trust relationships that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <i>DescribeTrustsResult.NextToken</i> value from a previous call to <a>DescribeTrusts</a>. Pass null if this is the first call.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of objects to return.
    description: 'Describes the trust relationships for a particular AWS Managed Microsoft AD directory. If no input parameters are are provided, such as directory ID or trust ID, this request describes all the trust relationships.'
  DisableLDAPSResult:
    type: object
    properties: {}
  DisableLDAPSRequest:
    type: object
    required:
      - DirectoryId
      - Type
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      Type:
        $ref: '#/definitions/LDAPSType'
        description: 'The type of LDAP security that the customer wants to enable. The security can be either server or client, but currently only the default <code>Client</code> is supported.'
  InvalidLDAPSStatusException: {}
  DisableRadiusResult:
    type: object
    properties: {}
    description: Contains the results of the <a>DisableRadius</a> operation.
  DisableRadiusRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to disable MFA.
    description: Contains the inputs for the <a>DisableRadius</a> operation.
  DisableSsoResult:
    type: object
    properties: {}
    description: Contains the results of the <a>DisableSso</a> operation.
  DisableSsoRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to disable single-sign on.
      UserName:
        $ref: '#/definitions/UserName'
        description: '<p>The username of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. This account must have privileges to remove a service principal name.</p> <p>If the AD Connector service account does not have privileges to remove a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to disable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>'
      Password:
        $ref: '#/definitions/ConnectPassword'
        description: 'The password of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.'
    description: Contains the inputs for the <a>DisableSso</a> operation.
  EnableLDAPSResult:
    type: object
    properties: {}
  EnableLDAPSRequest:
    type: object
    required:
      - DirectoryId
      - Type
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      Type:
        $ref: '#/definitions/LDAPSType'
        description: 'The type of LDAP security the customer wants to enable. The security can be either server or client, but currently only the default <code>Client</code> is supported.'
  NoAvailableCertificateException: {}
  EnableRadiusResult:
    type: object
    properties: {}
    description: Contains the results of the <a>EnableRadius</a> operation.
  EnableRadiusRequest:
    type: object
    required:
      - DirectoryId
      - RadiusSettings
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to enable MFA.
      RadiusSettings:
        $ref: '#/definitions/RadiusSettings'
        description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
    description: Contains the inputs for the <a>EnableRadius</a> operation.
  EnableSsoResult:
    type: object
    properties: {}
    description: Contains the results of the <a>EnableSso</a> operation.
  EnableSsoRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to enable single-sign on.
      UserName:
        $ref: '#/definitions/UserName'
        description: '<p>The username of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. This account must have privileges to add a service principal name.</p> <p>If the AD Connector service account does not have privileges to add a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to enable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>'
      Password:
        $ref: '#/definitions/ConnectPassword'
        description: 'The password of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter.'
    description: Contains the inputs for the <a>EnableSso</a> operation.
  GetDirectoryLimitsResult:
    type: object
    properties:
      DirectoryLimits:
        $ref: '#/definitions/DirectoryLimits'
        description: A <a>DirectoryLimits</a> object that contains the directory limits for the current rRegion.
    description: Contains the results of the <a>GetDirectoryLimits</a> operation.
  GetDirectoryLimitsRequest:
    type: object
    properties: {}
    description: Contains the inputs for the <a>GetDirectoryLimits</a> operation.
  GetSnapshotLimitsResult:
    type: object
    properties:
      SnapshotLimits:
        $ref: '#/definitions/SnapshotLimits'
        description: A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified directory.
    description: Contains the results of the <a>GetSnapshotLimits</a> operation.
  GetSnapshotLimitsRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Contains the identifier of the directory to obtain the limits for.
    description: Contains the inputs for the <a>GetSnapshotLimits</a> operation.
  ListCertificatesResult:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Indicates whether another page of certificates is available when the number of available certificates exceeds the page limit.
      CertificatesInfo:
        $ref: '#/definitions/CertificatesInfo'
        description: 'A list of certificates with basic details including certificate ID, certificate common name, certificate state.'
  ListCertificatesRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: A token for requesting another page of certificates if the <code>NextToken</code> response element indicates that more certificates are available. Use the value of the returned <code>NextToken</code> element in your request until the token comes back as <code>null</code>. Pass <code>null</code> if this is the first call.
      Limit:
        $ref: '#/definitions/PageLimit'
        description: The number of items that should show up on one page
  ListIpRoutesResult:
    type: object
    properties:
      IpRoutesInfo:
        $ref: '#/definitions/IpRoutesInfo'
        description: A list of <a>IpRoute</a>s.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>ListIpRoutes</a> to retrieve the next set of items.'
  ListIpRoutesRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory for which you want to retrieve the IP addresses.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <i>ListIpRoutes.NextToken</i> value from a previous call to <a>ListIpRoutes</a>. Pass null if this is the first call.
      Limit:
        $ref: '#/definitions/Limit'
        description: 'Maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation.'
  ListLogSubscriptionsResult:
    type: object
    properties:
      LogSubscriptions:
        $ref: '#/definitions/LogSubscriptions'
        description: A list of active <a>LogSubscription</a> objects for calling the AWS account.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return.
  ListLogSubscriptionsRequest:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: 'If a <i>DirectoryID</i> is provided, lists only the log subscription associated with that directory. If no <i>DirectoryId</i> is provided, lists all log subscriptions associated with your AWS account. If there are no log subscriptions for the AWS account or the directory, an empty list will be returned.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of items to return.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of items returned.
  ListSchemaExtensionsResult:
    type: object
    properties:
      SchemaExtensionsInfo:
        $ref: '#/definitions/SchemaExtensionsInfo'
        description: Information about the schema extensions applied to the directory.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <code>ListSchemaExtensions</code> to retrieve the next set of items.'
  ListSchemaExtensionsRequest:
    type: object
    required:
      - DirectoryId
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory from which to retrieve the schema extension information.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The <code>ListSchemaExtensions.NextToken</code> value from a previous call to <code>ListSchemaExtensions</code>. Pass null if this is the first call.
      Limit:
        $ref: '#/definitions/Limit'
        description: The maximum number of items to return.
  ListTagsForResourceResult:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/Tags'
        description: List of tags returned by the ListTagsForResource operation.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Reserved for future use.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceId
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: Identifier (ID) of the directory for which you want to retrieve tags.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Reserved for future use.
      Limit:
        $ref: '#/definitions/Limit'
        description: Reserved for future use.
  RegisterCertificateResult:
    type: object
    properties:
      CertificateId:
        $ref: '#/definitions/CertificateId'
        description: The identifier of the certificate.
  RegisterCertificateRequest:
    type: object
    required:
      - DirectoryId
      - CertificateData
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory.
      CertificateData:
        $ref: '#/definitions/CertificateData'
        description: The certificate PEM string that needs to be registered.
  InvalidCertificateException: {}
  CertificateLimitExceededException: {}
  CertificateAlreadyExistsException: {}
  RegisterEventTopicResult:
    type: object
    properties: {}
    description: The result of a RegisterEventTopic request.
  RegisterEventTopicRequest:
    type: object
    required:
      - DirectoryId
      - TopicName
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID that will publish status messages to the SNS topic.
      TopicName:
        $ref: '#/definitions/TopicName'
        description: The SNS topic name to which the directory will publish status messages. This SNS topic must be in the same region as the specified Directory ID.
    description: Registers a new event topic.
  RejectSharedDirectoryResult:
    type: object
    properties:
      SharedDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the shared directory in the directory consumer account.
  RejectSharedDirectoryRequest:
    type: object
    required:
      - SharedDirectoryId
    properties:
      SharedDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account.
  RemoveIpRoutesResult:
    type: object
    properties: {}
  RemoveIpRoutesRequest:
    type: object
    required:
      - DirectoryId
      - CidrIps
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory from which you want to remove the IP addresses.
      CidrIps:
        $ref: '#/definitions/CidrIps'
        description: IP address blocks that you want to remove.
  RemoveTagsFromResourceResult:
    type: object
    properties: {}
  RemoveTagsFromResourceRequest:
    type: object
    required:
      - ResourceId
      - TagKeys
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: Identifier (ID) of the directory from which to remove the tag.
      TagKeys:
        $ref: '#/definitions/TagKeys'
        description: The tag key (name) of the tag to be removed.
  ResetUserPasswordResult:
    type: object
    properties: {}
  ResetUserPasswordRequest:
    type: object
    required:
      - DirectoryId
      - UserName
      - NewPassword
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the AWS Managed Microsoft AD or Simple AD directory in which the user resides.
      UserName:
        $ref: '#/definitions/CustomerUserName'
        description: The user name of the user whose password will be reset.
      NewPassword:
        $ref: '#/definitions/UserPassword'
        description: The new password that will be reset.
  UserDoesNotExistException: {}
  InvalidPasswordException: {}
  RestoreFromSnapshotResult:
    type: object
    properties: {}
    description: Contains the results of the <a>RestoreFromSnapshot</a> operation.
  RestoreFromSnapshotRequest:
    type: object
    required:
      - SnapshotId
    properties:
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The identifier of the snapshot to restore from.
    description: An object representing the inputs for the <a>RestoreFromSnapshot</a> operation.
  ShareDirectoryResult:
    type: object
    properties:
      SharedDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory that is stored in the directory consumer account that is shared from the specified directory (<code>DirectoryId</code>).
  ShareDirectoryRequest:
    type: object
    required:
      - DirectoryId
      - ShareTarget
      - ShareMethod
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the AWS Managed Microsoft AD directory that you want to share with other AWS accounts.
      ShareNotes:
        $ref: '#/definitions/Notes'
        description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.
      ShareTarget:
        $ref: '#/definitions/ShareTarget'
        description: Identifier for the directory consumer account with whom the directory is to be shared.
      ShareMethod:
        $ref: '#/definitions/ShareMethod'
        description: The method used when sharing a directory to determine whether the directory should be shared within your AWS organization (<code>ORGANIZATIONS</code>) or with any AWS account by sending a directory sharing request (<code>HANDSHAKE</code>).
  InvalidTargetException: {}
  ShareLimitExceededException: {}
  OrganizationsException: {}
  AccessDeniedException: {}
  StartSchemaExtensionResult:
    type: object
    properties:
      SchemaExtensionId:
        $ref: '#/definitions/SchemaExtensionId'
        description: The identifier of the schema extension that will be applied.
  StartSchemaExtensionRequest:
    type: object
    required:
      - DirectoryId
      - CreateSnapshotBeforeSchemaExtension
      - LdifContent
      - Description
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which the schema extension will be applied to.
      CreateSnapshotBeforeSchemaExtension:
        $ref: '#/definitions/CreateSnapshotBeforeSchemaExtension'
        description: 'If true, creates a snapshot of the directory before applying the schema extension.'
      LdifContent:
        $ref: '#/definitions/LdifContent'
        description: 'The LDIF file represented as a string. To construct the LdifContent string, precede each line as it would be formatted in an ldif file with \n. See the example request below for more details. The file size can be no larger than 1MB.'
      Description:
        $ref: '#/definitions/Description'
        description: A description of the schema extension.
  UnshareDirectoryResult:
    type: object
    properties:
      SharedDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory stored in the directory consumer account that is to be unshared from the specified directory (<code>DirectoryId</code>).
  UnshareDirectoryRequest:
    type: object
    required:
      - DirectoryId
      - UnshareTarget
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the AWS Managed Microsoft AD directory that you want to stop sharing.
      UnshareTarget:
        $ref: '#/definitions/UnshareTarget'
        description: Identifier for the directory consumer account with whom the directory has to be unshared.
  DirectoryNotSharedException: {}
  UpdateConditionalForwarderResult:
    type: object
    properties: {}
    description: The result of an UpdateConditionalForwarder request.
  UpdateConditionalForwarderRequest:
    type: object
    required:
      - DirectoryId
      - RemoteDomainName
      - DnsIpAddrs
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory ID of the AWS directory for which to update the conditional forwarder.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The updated IP addresses of the remote DNS server associated with the conditional forwarder.
    description: Updates a conditional forwarder.
  UpdateNumberOfDomainControllersResult:
    type: object
    properties: {}
  UpdateNumberOfDomainControllersRequest:
    type: object
    required:
      - DirectoryId
      - DesiredNumber
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory to which the domain controllers will be added or removed.
      DesiredNumber:
        $ref: '#/definitions/DesiredNumberOfDomainControllers'
        description: The number of domain controllers desired in the directory.
  DomainControllerLimitExceededException: {}
  UpdateRadiusResult:
    type: object
    properties: {}
    description: Contains the results of the <a>UpdateRadius</a> operation.
  UpdateRadiusRequest:
    type: object
    required:
      - DirectoryId
      - RadiusSettings
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory for which to update the RADIUS server information.
      RadiusSettings:
        $ref: '#/definitions/RadiusSettings'
        description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
    description: Contains the inputs for the <a>UpdateRadius</a> operation.
  UpdateTrustResult:
    type: object
    properties:
      RequestId:
        $ref: '#/definitions/RequestId'
      TrustId:
        $ref: '#/definitions/TrustId'
        description: Identifier of the trust relationship.
  UpdateTrustRequest:
    type: object
    required:
      - TrustId
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: Identifier of the trust relationship.
      SelectiveAuth:
        $ref: '#/definitions/SelectiveAuth'
        description: Updates selective authentication for the trust.
  VerifyTrustResult:
    type: object
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The unique Trust ID of the trust relationship that was verified.
    description: Result of a VerifyTrust request.
  VerifyTrustRequest:
    type: object
    required:
      - TrustId
    properties:
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The unique Trust ID of the trust relationship to verify.
    description: Initiates the verification of an existing trust relationship between an AWS Managed Microsoft AD directory and an external domain.
  DirectoryId:
    type: string
    pattern: '^d-[0-9a-f]{10}$'
  SharedDirectory:
    type: object
    properties:
      OwnerAccountId:
        $ref: '#/definitions/CustomerId'
        description: 'Identifier of the directory owner account, which contains the directory that has been shared to the consumer account.'
      OwnerDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: 'Identifier of the directory in the directory owner account. '
      ShareMethod:
        $ref: '#/definitions/ShareMethod'
        description: The method used when sharing a directory to determine whether the directory should be shared within your AWS organization (<code>ORGANIZATIONS</code>) or with any AWS account by sending a shared directory request (<code>HANDSHAKE</code>).
      SharedAccountId:
        $ref: '#/definitions/CustomerId'
        description: Identifier of the directory consumer account that has access to the shared directory (<code>OwnerDirectoryId</code>) in the directory owner account.
      SharedDirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the shared directory in the directory consumer account. This identifier is different for each directory owner account.
      ShareStatus:
        $ref: '#/definitions/ShareStatus'
        description: Current directory status of the shared AWS Managed Microsoft AD directory.
      ShareNotes:
        $ref: '#/definitions/Notes'
        description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.
      CreatedDateTime:
        $ref: '#/definitions/CreatedDateTime'
        description: The date and time that the shared directory was created.
      LastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time that the shared directory was last updated.
    description: Details about the shared directory in the directory owner account for which the share request in the directory consumer account has been accepted.
  AccessUrl:
    type: string
    minLength: 1
    maxLength: 128
  IpRoutes:
    type: array
    items:
      $ref: '#/definitions/IpRoute'
  UpdateSecurityGroupForDirectoryControllers:
    type: boolean
  ResourceId:
    type: string
    pattern: '^[d]-[0-9a-f]{10}$'
  Tags:
    type: array
    items:
      $ref: '#/definitions/Tag'
  AddedDateTime:
    type: string
    format: date-time
  AliasName:
    type: string
    pattern: '^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*'
    minLength: 1
    maxLength: 62
  AttributeName:
    type: string
    minLength: 1
  AttributeValue:
    type: string
  Attribute:
    type: object
    properties:
      Name:
        $ref: '#/definitions/AttributeName'
        description: The name of the attribute.
      Value:
        $ref: '#/definitions/AttributeValue'
        description: The value of the attribute.
    description: Represents a named directory attribute.
  Attributes:
    type: array
    items:
      $ref: '#/definitions/Attribute'
  AvailabilityZone:
    type: string
  AvailabilityZones:
    type: array
    items:
      $ref: '#/definitions/AvailabilityZone'
  SchemaExtensionId:
    type: string
    pattern: '^e-[0-9a-f]{10}$'
  CertificateId:
    type: string
    pattern: '^c-[0-9a-f]{10}$'
  CertificateState:
    type: string
    enum:
      - Registering
      - Registered
      - RegisterFailed
      - Deregistering
      - Deregistered
      - DeregisterFailed
  CertificateStateReason:
    type: string
  CertificateCN:
    type: string
  CertificateRegisteredDateTime:
    type: string
    format: date-time
  CertificateExpiryDateTime:
    type: string
    format: date-time
  Certificate:
    type: object
    properties:
      CertificateId:
        $ref: '#/definitions/CertificateId'
        description: The identifier of the certificate.
      State:
        $ref: '#/definitions/CertificateState'
        description: The state of the certificate.
      StateReason:
        $ref: '#/definitions/CertificateStateReason'
        description: Describes a state change for the certificate.
      CommonName:
        $ref: '#/definitions/CertificateCN'
        description: The common name for the certificate.
      RegisteredDateTime:
        $ref: '#/definitions/CertificateRegisteredDateTime'
        description: The date and time that the certificate was registered.
      ExpiryDateTime:
        $ref: '#/definitions/CertificateExpiryDateTime'
        description: The date and time when the certificate will expire.
    description: Information about the certificate.
  CertificateData:
    type: string
    minLength: 1
    maxLength: 8192
  CertificateInfo:
    type: object
    properties:
      CertificateId:
        $ref: '#/definitions/CertificateId'
        description: The identifier of the certificate.
      CommonName:
        $ref: '#/definitions/CertificateCN'
        description: The common name for the certificate.
      State:
        $ref: '#/definitions/CertificateState'
        description: The state of the certificate.
    description: Contains general information about a certificate.
  CertificatesInfo:
    type: array
    items:
      $ref: '#/definitions/CertificateInfo'
  CidrIp:
    type: string
    pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-9]|[1-2][0-9]|3[0-2]))$'
  CidrIps:
    type: array
    items:
      $ref: '#/definitions/CidrIp'
  CloudOnlyDirectoriesLimitReached:
    type: boolean
  SID:
    type: string
    pattern: '[&\w+-.@]+'
    minLength: 1
    maxLength: 256
  ComputerName:
    type: string
    minLength: 1
    maxLength: 15
  Computer:
    type: object
    properties:
      ComputerId:
        $ref: '#/definitions/SID'
        description: The identifier of the computer.
      ComputerName:
        $ref: '#/definitions/ComputerName'
        description: The computer name.
      ComputerAttributes:
        $ref: '#/definitions/Attributes'
        description: An array of <a>Attribute</a> objects containing the LDAP attributes that belong to the computer account.
    description: Contains information about a computer account in a directory.
  ComputerPassword:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 8
    maxLength: 64
    format: password
  RemoteDomainName:
    type: string
    pattern: '^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+[.]?$'
  DnsIpAddrs:
    type: array
    items:
      $ref: '#/definitions/IpAddr'
  ReplicationScope:
    type: string
    enum:
      - Domain
  ConditionalForwarder:
    type: object
    properties:
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The fully qualified domain name (FQDN) of the remote domains pointed to by the conditional forwarder.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: The IP addresses of the remote DNS server associated with RemoteDomainName. This is the IP address of the DNS server that your conditional forwarder points to.
      ReplicationScope:
        $ref: '#/definitions/ReplicationScope'
        description: 'The replication scope of the conditional forwarder. The only allowed value is <code>Domain</code>, which will replicate the conditional forwarder to all of the domain controllers for your AWS directory.'
    description: Points to a remote domain with which you are setting up a trust relationship. Conditional forwarders are required in order to set up a trust relationship with another domain.
  ConditionalForwarders:
    type: array
    items:
      $ref: '#/definitions/ConditionalForwarder'
  DirectoryName:
    type: string
    pattern: '^([a-zA-Z0-9]+[\\.-])+([a-zA-Z0-9])+$'
  DirectoryShortName:
    type: string
    pattern: '^[^\\/:*?\"\<\>|.]+[^\\/:*?\"<>|]*$'
  ConnectPassword:
    type: string
    minLength: 1
    maxLength: 128
    format: password
  Description:
    type: string
    pattern: '^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$'
    minLength: 0
    maxLength: 128
  DirectorySize:
    type: string
    enum:
      - Small
      - Large
  DirectoryConnectSettings:
    type: object
    required:
      - VpcId
      - SubnetIds
      - CustomerDnsIps
      - CustomerUserName
    properties:
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC in which the AD Connector is created.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of subnet identifiers in the VPC in which the AD Connector is created.
      CustomerDnsIps:
        $ref: '#/definitions/DnsIpAddrs'
        description: A list of one or more IP addresses of DNS servers or domain controllers in the on-premises directory.
      CustomerUserName:
        $ref: '#/definitions/UserName'
        description: '<p>The user name of an account in the on-premises directory that is used to connect to the directory. This account must have the following permissions:</p> <ul> <li> <p>Read users and groups</p> </li> <li> <p>Create computer objects</p> </li> <li> <p>Join computers to the domain</p> </li> </ul>'
    description: Contains information for the <a>ConnectDirectory</a> operation when an AD Connector directory is being created.
  ConnectedDirectoriesLimitReached:
    type: boolean
  OrganizationalUnitDN:
    type: string
    minLength: 1
    maxLength: 2000
  Password:
    type: string
    pattern: '(?=^.{8,64}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\s]))^.*'
    format: password
  DirectoryVpcSettings:
    type: object
    required:
      - VpcId
      - SubnetIds
    properties:
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC in which to create the directory.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. AWS Directory Service creates a directory server and a DNS server in each of these subnets.
    description: Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.
  LogGroupName:
    type: string
    pattern: '[-._/#A-Za-z0-9]+'
    minLength: 1
    maxLength: 512
  DirectoryEdition:
    type: string
    enum:
      - Enterprise
      - Standard
  CreateSnapshotBeforeSchemaExtension:
    type: boolean
  SnapshotName:
    type: string
    pattern: '^([a-zA-Z0-9_])[\\a-zA-Z0-9_@#%*+=:?./!\s-]*$'
    minLength: 0
    maxLength: 128
  SnapshotId:
    type: string
    pattern: '^s-[0-9a-f]{10}$'
  TrustPassword:
    type: string
    pattern: (.|\s)*\S(.|\s)*
    minLength: 1
    maxLength: 128
    format: password
  TrustDirection:
    type: string
    enum:
      - 'One-Way: Outgoing'
      - 'One-Way: Incoming'
      - Two-Way
  TrustType:
    type: string
    enum:
      - Forest
      - External
  SelectiveAuth:
    type: string
    enum:
      - Enabled
      - Disabled
  TrustId:
    type: string
    pattern: '^t-[0-9a-f]{10}$'
  CreatedDateTime:
    type: string
    format: date-time
  CustomerId:
    type: string
    pattern: '^(\d{12})$'
  CustomerUserName:
    type: string
    pattern: '^(?!.*\\|.*"|.*\/|.*\[|.*\]|.*:|.*;|.*\||.*=|.*,|.*\+|.*\*|.*\?|.*<|.*>|.*@).*$'
    minLength: 1
    maxLength: 64
  DeleteAssociatedConditionalForwarder:
    type: boolean
  TopicName:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 256
  RemoteDomainNames:
    type: array
    items:
      $ref: '#/definitions/RemoteDomainName'
  DirectoryIds:
    type: array
    description: A list of directory identifiers.
    items:
      $ref: '#/definitions/DirectoryId'
  NextToken:
    type: string
  Limit:
    type: integer
    minimum: 0
  DirectoryDescriptions:
    type: array
    description: A list of directory descriptions.
    items:
      $ref: '#/definitions/DirectoryDescription'
  DomainControllerIds:
    type: array
    items:
      $ref: '#/definitions/DomainControllerId'
  DomainControllers:
    type: array
    items:
      $ref: '#/definitions/DomainController'
  TopicNames:
    type: array
    items:
      $ref: '#/definitions/TopicName'
  EventTopics:
    type: array
    items:
      $ref: '#/definitions/EventTopic'
  LDAPSType:
    type: string
    enum:
      - Client
  PageLimit:
    type: integer
    minimum: 1
    maximum: 50
  LDAPSSettingsInfo:
    type: array
    items:
      $ref: '#/definitions/LDAPSSettingInfo'
  SharedDirectories:
    type: array
    items:
      $ref: '#/definitions/SharedDirectory'
  SnapshotIds:
    type: array
    description: A list of directory snapshot identifiers.
    items:
      $ref: '#/definitions/SnapshotId'
  Snapshots:
    type: array
    description: A list of descriptions of directory snapshots.
    items:
      $ref: '#/definitions/Snapshot'
  TrustIds:
    type: array
    items:
      $ref: '#/definitions/TrustId'
  Trusts:
    type: array
    items:
      $ref: '#/definitions/Trust'
  DesiredNumberOfDomainControllers:
    type: integer
    minimum: 2
  VpcId:
    type: string
    pattern: '^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$'
  SubnetIds:
    type: array
    items:
      $ref: '#/definitions/SubnetId'
  UserName:
    type: string
    pattern: '[a-zA-Z0-9._-]+'
    minLength: 1
  SecurityGroupId:
    type: string
    pattern: '^(sg-[0-9a-f]{8}|sg-[0-9a-f]{17})$'
  IpAddrs:
    type: array
    items:
      $ref: '#/definitions/IpAddr'
  DirectoryConnectSettingsDescription:
    type: object
    properties:
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC that the AD Connector is in.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: A list of subnet identifiers in the VPC that the AD Connector is in.
      CustomerUserName:
        $ref: '#/definitions/UserName'
        description: The user name of the service account in the on-premises directory.
      SecurityGroupId:
        $ref: '#/definitions/SecurityGroupId'
        description: The security group identifier for the AD Connector directory.
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: A list of the Availability Zones that the directory is in.
      ConnectIps:
        $ref: '#/definitions/IpAddrs'
        description: The IP addresses of the AD Connector servers.
    description: Contains information about an AD Connector directory.
  DirectoryStage:
    type: string
    enum:
      - Requested
      - Creating
      - Created
      - Active
      - Inoperable
      - Impaired
      - Restoring
      - RestoreFailed
      - Deleting
      - Deleted
      - Failed
  ShareStatus:
    type: string
    enum:
      - Shared
      - PendingAcceptance
      - Rejected
      - Rejecting
      - RejectFailed
      - Sharing
      - ShareFailed
      - Deleted
      - Deleting
  ShareMethod:
    type: string
    enum:
      - ORGANIZATIONS
      - HANDSHAKE
  Notes:
    type: string
    maxLength: 1024
    format: password
  LaunchTime:
    type: string
    format: date-time
  LastUpdatedDateTime:
    type: string
    format: date-time
  DirectoryType:
    type: string
    enum:
      - SimpleAD
      - ADConnector
      - MicrosoftAD
      - SharedMicrosoftAD
  DirectoryVpcSettingsDescription:
    type: object
    properties:
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC that the directory is in.
      SubnetIds:
        $ref: '#/definitions/SubnetIds'
        description: The identifiers of the subnets for the directory servers.
      SecurityGroupId:
        $ref: '#/definitions/SecurityGroupId'
        description: The domain controller security group identifier for the directory.
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZones'
        description: The list of Availability Zones that the directory is in.
    description: Contains information about the directory.
  RadiusSettings:
    type: object
    properties:
      RadiusServers:
        $ref: '#/definitions/Servers'
        description: 'An array of strings that contains the IP addresses of the RADIUS server endpoints, or the IP addresses of your RADIUS server load balancer.'
      RadiusPort:
        $ref: '#/definitions/PortNumber'
        description: The port that your RADIUS server is using for communications. Your on-premises network must allow inbound traffic over this port from the AWS Directory Service servers.
      RadiusTimeout:
        $ref: '#/definitions/RadiusTimeout'
        description: 'The amount of time, in seconds, to wait for the RADIUS server to respond.'
      RadiusRetries:
        $ref: '#/definitions/RadiusRetries'
        description: The maximum number of times that communication with the RADIUS server is attempted.
      SharedSecret:
        $ref: '#/definitions/RadiusSharedSecret'
        description: Required for enabling RADIUS on the directory.
      AuthenticationProtocol:
        $ref: '#/definitions/RadiusAuthenticationProtocol'
        description: The protocol specified for your RADIUS endpoints.
      DisplayLabel:
        $ref: '#/definitions/RadiusDisplayLabel'
        description: Not currently used.
      UseSameUsername:
        $ref: '#/definitions/UseSameUsername'
        description: Not currently used.
    description: Contains information about a Remote Authentication Dial In User Service (RADIUS) server.
  RadiusStatus:
    type: string
    enum:
      - Creating
      - Completed
      - Failed
  StageReason:
    type: string
  SsoEnabled:
    type: boolean
  OwnerDirectoryDescription:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the AWS Managed Microsoft AD directory in the directory owner account.
      AccountId:
        $ref: '#/definitions/CustomerId'
        description: Identifier of the directory owner account.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: IP address of the directory’s domain controllers.
      VpcSettings:
        $ref: '#/definitions/DirectoryVpcSettingsDescription'
        description: Information about the VPC settings for the directory.
      RadiusSettings:
        $ref: '#/definitions/RadiusSettings'
        description: A <a>RadiusSettings</a> object that contains information about the RADIUS server.
      RadiusStatus:
        $ref: '#/definitions/RadiusStatus'
        description: Information about the status of the RADIUS server.
    description: Describes the directory owner account details that have been shared to the directory consumer account.
  DirectoryDescription:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory identifier.
      Name:
        $ref: '#/definitions/DirectoryName'
        description: The fully qualified name of the directory.
      ShortName:
        $ref: '#/definitions/DirectoryShortName'
        description: The short name of the directory.
      Size:
        $ref: '#/definitions/DirectorySize'
        description: The directory size.
      Edition:
        $ref: '#/definitions/DirectoryEdition'
        description: The edition associated with this directory.
      Alias:
        $ref: '#/definitions/AliasName'
        description: 'The alias for the directory. If no alias has been created for the directory, the alias is the directory identifier, such as <code>d-XXXXXXXXXX</code>.'
      AccessUrl:
        $ref: '#/definitions/AccessUrl'
        description: 'The access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>. If no alias has been created for the directory, <code>&lt;alias&gt;</code> is the directory identifier, such as <code>d-XXXXXXXXXX</code>.'
      Description:
        $ref: '#/definitions/Description'
        description: The description for the directory.
      DnsIpAddrs:
        $ref: '#/definitions/DnsIpAddrs'
        description: 'The IP addresses of the DNS servers for the directory. For a Simple AD or Microsoft AD directory, these are the IP addresses of the Simple AD or Microsoft AD directory servers. For an AD Connector directory, these are the IP addresses of the DNS servers or domain controllers in the on-premises directory to which the AD Connector is connected.'
      Stage:
        $ref: '#/definitions/DirectoryStage'
        description: The current stage of the directory.
      ShareStatus:
        $ref: '#/definitions/ShareStatus'
        description: Current directory status of the shared AWS Managed Microsoft AD directory.
      ShareMethod:
        $ref: '#/definitions/ShareMethod'
        description: The method used when sharing a directory to determine whether the directory should be shared within your AWS organization (<code>ORGANIZATIONS</code>) or with any AWS account by sending a shared directory request (<code>HANDSHAKE</code>).
      ShareNotes:
        $ref: '#/definitions/Notes'
        description: A directory share request that is sent by the directory owner to the directory consumer. The request includes a typed message to help the directory consumer administrator determine whether to approve or reject the share invitation.
      LaunchTime:
        $ref: '#/definitions/LaunchTime'
        description: Specifies when the directory was created.
      StageLastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time that the stage was last updated.
      Type:
        $ref: '#/definitions/DirectoryType'
        description: The directory size.
      VpcSettings:
        $ref: '#/definitions/DirectoryVpcSettingsDescription'
        description: A <a>DirectoryVpcSettingsDescription</a> object that contains additional information about a directory. This member is only present if the directory is a Simple AD or Managed AD directory.
      ConnectSettings:
        $ref: '#/definitions/DirectoryConnectSettingsDescription'
        description: A <a>DirectoryConnectSettingsDescription</a> object that contains additional information about an AD Connector directory. This member is only present if the directory is an AD Connector directory.
      RadiusSettings:
        $ref: '#/definitions/RadiusSettings'
        description: A <a>RadiusSettings</a> object that contains information about the RADIUS server configured for this directory.
      RadiusStatus:
        $ref: '#/definitions/RadiusStatus'
        description: The status of the RADIUS MFA server connection.
      StageReason:
        $ref: '#/definitions/StageReason'
        description: Additional information about the directory stage.
      SsoEnabled:
        $ref: '#/definitions/SsoEnabled'
        description: 'Indicates if single sign-on is enabled for the directory. For more information, see <a>EnableSso</a> and <a>DisableSso</a>.'
      DesiredNumberOfDomainControllers:
        $ref: '#/definitions/DesiredNumberOfDomainControllers'
        description: The desired number of domain controllers in the directory if the directory is Microsoft AD.
      OwnerDirectoryDescription:
        $ref: '#/definitions/OwnerDirectoryDescription'
        description: Describes the AWS Managed Microsoft AD directory in the directory owner account.
    description: Contains information about an AWS Directory Service directory.
  DirectoryLimits:
    type: object
    properties:
      CloudOnlyDirectoriesLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of cloud directories allowed in the Region.
      CloudOnlyDirectoriesCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of cloud directories in the Region.
      CloudOnlyDirectoriesLimitReached:
        $ref: '#/definitions/CloudOnlyDirectoriesLimitReached'
        description: Indicates if the cloud directory limit has been reached.
      CloudOnlyMicrosoftADLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of AWS Managed Microsoft AD directories allowed in the region.
      CloudOnlyMicrosoftADCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of AWS Managed Microsoft AD directories in the region.
      CloudOnlyMicrosoftADLimitReached:
        $ref: '#/definitions/CloudOnlyDirectoriesLimitReached'
        description: Indicates if the AWS Managed Microsoft AD directory limit has been reached.
      ConnectedDirectoriesLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of connected directories allowed in the Region.
      ConnectedDirectoriesCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of connected directories in the Region.
      ConnectedDirectoriesLimitReached:
        $ref: '#/definitions/ConnectedDirectoriesLimitReached'
        description: Indicates if the connected directory limit has been reached.
    description: Contains directory limit information for a Region.
  IpAddr:
    type: string
    pattern: '^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$'
  DomainControllerId:
    type: string
    pattern: '^dc-[0-9a-f]{10}$'
  SubnetId:
    type: string
    pattern: '^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$'
  DomainControllerStatus:
    type: string
    enum:
      - Creating
      - Active
      - Impaired
      - Restoring
      - Deleting
      - Deleted
      - Failed
  DomainControllerStatusReason:
    type: string
  DomainController:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier of the directory where the domain controller resides.
      DomainControllerId:
        $ref: '#/definitions/DomainControllerId'
        description: Identifies a specific domain controller in the directory.
      DnsIpAddr:
        $ref: '#/definitions/IpAddr'
        description: The IP address of the domain controller.
      VpcId:
        $ref: '#/definitions/VpcId'
        description: The identifier of the VPC that contains the domain controller.
      SubnetId:
        $ref: '#/definitions/SubnetId'
        description: Identifier of the subnet in the VPC that contains the domain controller.
      AvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
        description: The Availability Zone where the domain controller is located.
      Status:
        $ref: '#/definitions/DomainControllerStatus'
        description: The status of the domain controller.
      StatusReason:
        $ref: '#/definitions/DomainControllerStatusReason'
        description: A description of the domain controller state.
      LaunchTime:
        $ref: '#/definitions/LaunchTime'
        description: Specifies when the domain controller was created.
      StatusLastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time that the status was last updated.
    description: Contains information about the domain controllers for a specified directory.
  EndDateTime:
    type: string
    format: date-time
  TopicArn:
    type: string
  TopicStatus:
    type: string
    enum:
      - Registered
      - Topic not found
      - Failed
      - Deleted
  EventTopic:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of an AWS Directory Service directory that will publish status messages to an SNS topic.
      TopicName:
        $ref: '#/definitions/TopicName'
        description: The name of an AWS SNS topic the receives status messages from the directory.
      TopicArn:
        $ref: '#/definitions/TopicArn'
        description: The SNS topic ARN (Amazon Resource Name).
      CreatedDateTime:
        $ref: '#/definitions/CreatedDateTime'
        description: The date and time of when you associated your directory with the SNS topic.
      Status:
        $ref: '#/definitions/TopicStatus'
        description: The topic registration status.
    description: Information about SNS topic and AWS Directory Service directory associations.
  SnapshotLimits:
    type: object
    properties:
      ManualSnapshotsLimit:
        $ref: '#/definitions/Limit'
        description: The maximum number of manual snapshots allowed.
      ManualSnapshotsCurrentCount:
        $ref: '#/definitions/Limit'
        description: The current number of manual snapshots of the directory.
      ManualSnapshotsLimitReached:
        $ref: '#/definitions/ManualSnapshotsLimitReached'
        description: Indicates if the manual snapshot limit has been reached.
    description: Contains manual snapshot limit information for a directory.
  IpRoute:
    type: object
    properties:
      CidrIp:
        $ref: '#/definitions/CidrIp'
        description: 'IP address block using CIDR format, for example 10.0.0.0/24. This is often the address block of the DNS server used for your on-premises domain. For a single IP address use a CIDR address block with /32. For example 10.0.0.0/32.'
      Description:
        $ref: '#/definitions/Description'
        description: Description of the address block.
    description: 'IP address block. This is often the address block of the DNS server used for your on-premises domain. '
  IpRouteStatusMsg:
    type: string
    enum:
      - Adding
      - Added
      - Removing
      - Removed
      - AddFailed
      - RemoveFailed
  IpRouteStatusReason:
    type: string
  IpRouteInfo:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory associated with the IP addresses.
      CidrIp:
        $ref: '#/definitions/CidrIp'
        description: IP address block in the <a>IpRoute</a>.
      IpRouteStatusMsg:
        $ref: '#/definitions/IpRouteStatusMsg'
        description: The status of the IP address block.
      AddedDateTime:
        $ref: '#/definitions/AddedDateTime'
        description: The date and time the address block was added to the directory.
      IpRouteStatusReason:
        $ref: '#/definitions/IpRouteStatusReason'
        description: The reason for the IpRouteStatusMsg.
      Description:
        $ref: '#/definitions/Description'
        description: Description of the <a>IpRouteInfo</a>.
    description: Information about one or more IP address blocks.
  IpRoutesInfo:
    type: array
    items:
      $ref: '#/definitions/IpRouteInfo'
  LDAPSStatus:
    type: string
    enum:
      - Enabling
      - Enabled
      - EnableFailed
      - Disabled
  LDAPSStatusReason:
    type: string
  LDAPSSettingInfo:
    type: object
    properties:
      LDAPSStatus:
        $ref: '#/definitions/LDAPSStatus'
        description: The state of the LDAPS settings.
      LDAPSStatusReason:
        $ref: '#/definitions/LDAPSStatusReason'
        description: Describes a state change for LDAPS.
      LastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time when the LDAPS settings were last updated.
    description: Contains general information about the LDAPS settings.
  LdifContent:
    type: string
    minLength: 1
    maxLength: 500000
  LogSubscriptions:
    type: array
    items:
      $ref: '#/definitions/LogSubscription'
  SchemaExtensionsInfo:
    type: array
    items:
      $ref: '#/definitions/SchemaExtensionInfo'
  SubscriptionCreatedDateTime:
    type: string
    format: date-time
  LogSubscription:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: Identifier (ID) of the directory that you want to associate with the log subscription.
      LogGroupName:
        $ref: '#/definitions/LogGroupName'
        description: The name of the log group.
      SubscriptionCreatedDateTime:
        $ref: '#/definitions/SubscriptionCreatedDateTime'
        description: The date and time that the log subscription was created.
    description: 'Represents a log subscription, which tracks real-time data from a chosen log group to a specified destination.'
  ManualSnapshotsLimitReached:
    type: boolean
  PortNumber:
    type: integer
    minimum: 1025
    maximum: 65535
  RadiusAuthenticationProtocol:
    type: string
    enum:
      - PAP
      - CHAP
      - MS-CHAPv1
      - MS-CHAPv2
  RadiusDisplayLabel:
    type: string
    minLength: 1
    maxLength: 64
  RadiusRetries:
    type: integer
    minimum: 0
    maximum: 10
  Servers:
    type: array
    items:
      $ref: '#/definitions/Server'
  RadiusTimeout:
    type: integer
    minimum: 1
    maximum: 20
  RadiusSharedSecret:
    type: string
    minLength: 8
    maxLength: 512
    format: password
  UseSameUsername:
    type: boolean
  TagKeys:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  RequestId:
    type: string
    pattern: '^([A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12})$'
    description: The AWS request identifier.
  UserPassword:
    type: string
    minLength: 1
    maxLength: 127
    format: password
  SchemaExtensionStatus:
    type: string
    enum:
      - Initializing
      - CreatingSnapshot
      - UpdatingSchema
      - Replicating
      - CancelInProgress
      - RollbackInProgress
      - Cancelled
      - Failed
      - Completed
  SchemaExtensionStatusReason:
    type: string
  StartDateTime:
    type: string
    format: date-time
  SchemaExtensionInfo:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The identifier of the directory to which the schema extension is applied.
      SchemaExtensionId:
        $ref: '#/definitions/SchemaExtensionId'
        description: The identifier of the schema extension.
      Description:
        $ref: '#/definitions/Description'
        description: A description of the schema extension.
      SchemaExtensionStatus:
        $ref: '#/definitions/SchemaExtensionStatus'
        description: The current status of the schema extension.
      SchemaExtensionStatusReason:
        $ref: '#/definitions/SchemaExtensionStatusReason'
        description: The reason for the <code>SchemaExtensionStatus</code>.
      StartDateTime:
        $ref: '#/definitions/StartDateTime'
        description: The date and time that the schema extension started being applied to the directory.
      EndDateTime:
        $ref: '#/definitions/EndDateTime'
        description: The date and time that the schema extension was completed.
    description: Information about a schema extension.
  Server:
    type: string
    minLength: 1
    maxLength: 256
  ShareTarget:
    type: object
    required:
      - Id
      - Type
    properties:
      Id:
        $ref: '#/definitions/TargetId'
        description: Identifier of the directory consumer account.
      Type:
        $ref: '#/definitions/TargetType'
        description: Type of identifier to be used in the <code>Id</code> field.
    description: Identifier that contains details about the directory consumer account.
  TargetId:
    type: string
    minLength: 1
    maxLength: 64
  TargetType:
    type: string
    enum:
      - ACCOUNT
  SnapshotType:
    type: string
    enum:
      - Auto
      - Manual
  SnapshotStatus:
    type: string
    enum:
      - Creating
      - Completed
      - Failed
  StartTime:
    type: string
    format: date-time
  Snapshot:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The directory identifier.
      SnapshotId:
        $ref: '#/definitions/SnapshotId'
        description: The snapshot identifier.
      Type:
        $ref: '#/definitions/SnapshotType'
        description: The snapshot type.
      Name:
        $ref: '#/definitions/SnapshotName'
        description: The descriptive name of the snapshot.
      Status:
        $ref: '#/definitions/SnapshotStatus'
        description: The snapshot status.
      StartTime:
        $ref: '#/definitions/StartTime'
        description: The date and time that the snapshot was taken.
    description: Describes a directory snapshot.
  StateLastUpdatedDateTime:
    type: string
    format: date-time
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: 'Required name of the tag. The string value can be Unicode characters and cannot be prefixed with "aws:". The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
      Value:
        $ref: '#/definitions/TagValue'
        description: 'The optional value of the tag. The string value can be Unicode characters. The string can contain only the set of Unicode letters, digits, white-space, ''_'', ''.'', ''/'', ''='', ''+'', ''-'' (Java regex: "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-]*)$").'
    description: Metadata assigned to a directory consisting of a key-value pair.
  TrustState:
    type: string
    enum:
      - Creating
      - Created
      - Verifying
      - VerifyFailed
      - Verified
      - Updating
      - UpdateFailed
      - Updated
      - Deleting
      - Deleted
      - Failed
  TrustStateReason:
    type: string
  Trust:
    type: object
    properties:
      DirectoryId:
        $ref: '#/definitions/DirectoryId'
        description: The Directory ID of the AWS directory involved in the trust relationship.
      TrustId:
        $ref: '#/definitions/TrustId'
        description: The unique ID of the trust relationship.
      RemoteDomainName:
        $ref: '#/definitions/RemoteDomainName'
        description: The Fully Qualified Domain Name (FQDN) of the external domain involved in the trust relationship.
      TrustType:
        $ref: '#/definitions/TrustType'
        description: The trust relationship type. <code>Forest</code> is the default.
      TrustDirection:
        $ref: '#/definitions/TrustDirection'
        description: The trust relationship direction.
      TrustState:
        $ref: '#/definitions/TrustState'
        description: The trust relationship state.
      CreatedDateTime:
        $ref: '#/definitions/CreatedDateTime'
        description: The date and time that the trust relationship was created.
      LastUpdatedDateTime:
        $ref: '#/definitions/LastUpdatedDateTime'
        description: The date and time that the trust relationship was last updated.
      StateLastUpdatedDateTime:
        $ref: '#/definitions/StateLastUpdatedDateTime'
        description: The date and time that the TrustState was last updated.
      TrustStateReason:
        $ref: '#/definitions/TrustStateReason'
        description: The reason for the TrustState.
      SelectiveAuth:
        $ref: '#/definitions/SelectiveAuth'
        description: Current state of selective authentication for the trust.
    description: Describes a trust relationship between an AWS Managed Microsoft AD directory and an external domain.
  UnshareTarget:
    type: object
    required:
      - Id
      - Type
    properties:
      Id:
        $ref: '#/definitions/TargetId'
        description: Identifier of the directory consumer account.
      Type:
        $ref: '#/definitions/TargetType'
        description: Type of identifier to be used in the <i>Id</i> field.
    description: Identifier that contains details about the directory consumer account with whom the directory is being unshared.
