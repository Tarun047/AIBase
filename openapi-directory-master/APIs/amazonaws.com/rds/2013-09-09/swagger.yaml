swagger: '2.0'
info:
  version: '2013-09-09'
  x-release: v4
  title: Amazon Relational Database Service
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: rds
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/rds-2013-09-09.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: false
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/rds/'
host: rds.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://rds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon RDS multi-region endpoint
  - url: 'https://rds.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon RDS multi-region endpoint
  - url: 'http://rds.amazonaws.com'
    variables: {}
    description: The general Amazon RDS multi-region endpoint
  - url: 'https://rds.amazonaws.com'
    variables: {}
    description: The general Amazon RDS multi-region endpoint
  - url: 'http://rds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://rds.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon RDS endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - text/xml
produces:
  - text/xml
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#Action=AddSourceIdentifierToSubscription':
    get:
      x-aws-operation-name: AddSourceIdentifierToSubscription
      operationId: GET AddSourceIdentifierToSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          type: string
        - name: SourceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - AddSourceIdentifierToSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AddSourceIdentifierToSubscription
      operationId: POST AddSourceIdentifierToSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddSourceIdentifierToSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: formData
          required: true
          description: ''
          type: string
        - name: SourceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - AddSourceIdentifierToSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=AddTagsToResource':
    get:
      x-aws-operation-name: AddTagsToResource
      operationId: GET AddTagsToResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: ''
          type: string
        - name: Tags
          in: query
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - AddTagsToResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AddTagsToResource
      operationId: POST AddTagsToResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: formData
          required: true
          description: ''
          type: string
        - name: Tags
          in: formData
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - AddTagsToResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=AuthorizeDBSecurityGroupIngress':
    get:
      x-aws-operation-name: AuthorizeDBSecurityGroupIngress
      operationId: GET AuthorizeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          schema:
            $ref: '#/definitions/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          schema:
            $ref: '#/definitions/AuthorizationQuotaExceededFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: CIDRIP
          in: query
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupId
          in: query
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - AuthorizeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: AuthorizeDBSecurityGroupIngress
      operationId: POST AuthorizeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AuthorizeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: AuthorizationAlreadyExistsFault
          schema:
            $ref: '#/definitions/AuthorizationAlreadyExistsFault'
        '483':
          description: AuthorizationQuotaExceededFault
          schema:
            $ref: '#/definitions/AuthorizationQuotaExceededFault'
      parameters:
        - name: DBSecurityGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: CIDRIP
          in: formData
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupId
          in: formData
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupOwnerId
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - AuthorizeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CopyDBSnapshot':
    get:
      x-aws-operation-name: CopyDBSnapshot
      operationId: GET CopyDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: SourceDBSnapshotIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: TargetDBSnapshotIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CopyDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CopyDBSnapshot
      operationId: POST CopyDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CopyDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: SourceDBSnapshotIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: TargetDBSnapshotIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CopyDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateDBInstance':
    get:
      x-aws-operation-name: CreateDBInstance
      operationId: GET CreateDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '489':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '490':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '491':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: DBName
          in: query
          required: false
          description: ''
          type: string
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: AllocatedStorage
          in: query
          required: true
          description: ''
          type: integer
        - name: DBInstanceClass
          in: query
          required: true
          description: ''
          type: string
        - name: Engine
          in: query
          required: true
          description: ''
          type: string
        - name: MasterUsername
          in: query
          required: true
          description: ''
          type: string
        - name: MasterUserPassword
          in: query
          required: true
          description: ''
          type: string
        - name: DBSecurityGroups
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: ''
          type: string
        - name: DBParameterGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: ''
          type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: ''
          type: string
        - name: Port
          in: query
          required: false
          description: ''
          type: integer
        - name: MultiAZ
          in: query
          required: false
          description: ''
          type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: ''
          type: string
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: ''
          type: string
        - name: Iops
          in: query
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: CharacterSetName
          in: query
          required: false
          description: ''
          type: string
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          type: boolean
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBInstance
      operationId: POST CreateDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '487':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '488':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '489':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '490':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '491':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: DBName
          in: formData
          required: false
          description: ''
          type: string
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: AllocatedStorage
          in: formData
          required: true
          description: ''
          type: integer
        - name: DBInstanceClass
          in: formData
          required: true
          description: ''
          type: string
        - name: Engine
          in: formData
          required: true
          description: ''
          type: string
        - name: MasterUsername
          in: formData
          required: true
          description: ''
          type: string
        - name: MasterUserPassword
          in: formData
          required: true
          description: ''
          type: string
        - name: DBSecurityGroups
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: VpcSecurityGroupIds
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: AvailabilityZone
          in: formData
          required: false
          description: ''
          type: string
        - name: DBSubnetGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: PreferredMaintenanceWindow
          in: formData
          required: false
          description: ''
          type: string
        - name: DBParameterGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: BackupRetentionPeriod
          in: formData
          required: false
          description: ''
          type: integer
        - name: PreferredBackupWindow
          in: formData
          required: false
          description: ''
          type: string
        - name: Port
          in: formData
          required: false
          description: ''
          type: integer
        - name: MultiAZ
          in: formData
          required: false
          description: ''
          type: boolean
        - name: EngineVersion
          in: formData
          required: false
          description: ''
          type: string
        - name: AutoMinorVersionUpgrade
          in: formData
          required: false
          description: ''
          type: boolean
        - name: LicenseModel
          in: formData
          required: false
          description: ''
          type: string
        - name: Iops
          in: formData
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: CharacterSetName
          in: formData
          required: false
          description: ''
          type: string
        - name: PubliclyAccessible
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateDBInstanceReadReplica':
    get:
      x-aws-operation-name: CreateDBInstanceReadReplica
      operationId: GET CreateDBInstanceReadReplica
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '494':
          description: DBSubnetGroupNotAllowedFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotAllowedFault'
        '495':
          description: InvalidDBSubnetGroupFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetGroupFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: SourceDBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          type: string
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          type: string
        - name: Port
          in: query
          required: false
          description: ''
          type: integer
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          type: boolean
        - name: Iops
          in: query
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          type: boolean
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBInstanceReadReplica
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBInstanceReadReplica
      operationId: POST CreateDBInstanceReadReplica
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBInstanceReadReplicaResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '482':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '483':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '484':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '487':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '494':
          description: DBSubnetGroupNotAllowedFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotAllowedFault'
        '495':
          description: InvalidDBSubnetGroupFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetGroupFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: SourceDBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: DBInstanceClass
          in: formData
          required: false
          description: ''
          type: string
        - name: AvailabilityZone
          in: formData
          required: false
          description: ''
          type: string
        - name: Port
          in: formData
          required: false
          description: ''
          type: integer
        - name: AutoMinorVersionUpgrade
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Iops
          in: formData
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: PubliclyAccessible
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: DBSubnetGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBInstanceReadReplica
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateDBParameterGroup':
    get:
      x-aws-operation-name: CreateDBParameterGroup
      operationId: GET CreateDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBParameterGroupAlreadyExistsFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: ''
          type: string
        - name: Description
          in: query
          required: true
          description: ''
          type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBParameterGroup
      operationId: POST CreateDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBParameterGroupResult'
        '480':
          description: DBParameterGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBParameterGroupQuotaExceededFault'
        '481':
          description: DBParameterGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBParameterGroupAlreadyExistsFault'
      parameters:
        - name: DBParameterGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: DBParameterGroupFamily
          in: formData
          required: true
          description: ''
          type: string
        - name: Description
          in: formData
          required: true
          description: ''
          type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateDBSecurityGroup':
    get:
      x-aws-operation-name: CreateDBSecurityGroup
      operationId: GET CreateDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotSupportedFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: DBSecurityGroupDescription
          in: query
          required: true
          description: ''
          type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBSecurityGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBSecurityGroup
      operationId: POST CreateDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSecurityGroupResult'
        '480':
          description: DBSecurityGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSecurityGroupAlreadyExistsFault'
        '481':
          description: DBSecurityGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSecurityGroupQuotaExceededFault'
        '482':
          description: DBSecurityGroupNotSupportedFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotSupportedFault'
      parameters:
        - name: DBSecurityGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: DBSecurityGroupDescription
          in: formData
          required: true
          description: ''
          type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBSecurityGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateDBSnapshot':
    get:
      x-aws-operation-name: CreateDBSnapshot
      operationId: GET CreateDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: DBSnapshotIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBSnapshot
      operationId: POST CreateDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSnapshotResult'
        '480':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: DBSnapshotIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateDBSubnetGroup':
    get:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: GET CreateDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: DBSubnetGroupDescription
          in: query
          required: true
          description: ''
          type: string
        - name: SubnetIds
          in: query
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateDBSubnetGroup
      operationId: POST CreateDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSubnetGroupAlreadyExistsFault'
        '481':
          description: DBSubnetGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetGroupQuotaExceededFault'
        '482':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: DBSubnetGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: DBSubnetGroupDescription
          in: formData
          required: true
          description: ''
          type: string
        - name: SubnetIds
          in: formData
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateDBSubnetGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateEventSubscription':
    get:
      x-aws-operation-name: CreateEventSubscription
      operationId: GET CreateEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          schema:
            $ref: '#/definitions/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          type: string
        - name: SnsTopicArn
          in: query
          required: true
          description: ''
          type: string
        - name: SourceType
          in: query
          required: false
          description: ''
          type: string
        - name: EventCategories
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: SourceIds
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Enabled
          in: query
          required: false
          description: ''
          type: boolean
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateEventSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateEventSubscription
      operationId: POST CreateEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionAlreadyExistFault
          schema:
            $ref: '#/definitions/SubscriptionAlreadyExistFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
        '486':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: formData
          required: true
          description: ''
          type: string
        - name: SnsTopicArn
          in: formData
          required: true
          description: ''
          type: string
        - name: SourceType
          in: formData
          required: false
          description: ''
          type: string
        - name: EventCategories
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: SourceIds
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Enabled
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateEventSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=CreateOptionGroup':
    get:
      x-aws-operation-name: CreateOptionGroup
      operationId: GET CreateOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/OptionGroupQuotaExceededFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: EngineName
          in: query
          required: true
          description: ''
          type: string
        - name: MajorEngineVersion
          in: query
          required: true
          description: ''
          type: string
        - name: OptionGroupDescription
          in: query
          required: true
          description: ''
          type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateOptionGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: CreateOptionGroup
      operationId: POST CreateOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOptionGroupResult'
        '480':
          description: OptionGroupAlreadyExistsFault
          schema:
            $ref: '#/definitions/OptionGroupAlreadyExistsFault'
        '481':
          description: OptionGroupQuotaExceededFault
          schema:
            $ref: '#/definitions/OptionGroupQuotaExceededFault'
      parameters:
        - name: OptionGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: EngineName
          in: formData
          required: true
          description: ''
          type: string
        - name: MajorEngineVersion
          in: formData
          required: true
          description: ''
          type: string
        - name: OptionGroupDescription
          in: formData
          required: true
          description: ''
          type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - CreateOptionGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DeleteDBInstance':
    get:
      x-aws-operation-name: DeleteDBInstance
      operationId: GET DeleteDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: SkipFinalSnapshot
          in: query
          required: false
          description: ''
          type: boolean
        - name: FinalDBSnapshotIdentifier
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBInstance
      operationId: POST DeleteDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBInstanceResult'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '482':
          description: DBSnapshotAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBSnapshotAlreadyExistsFault'
        '483':
          description: SnapshotQuotaExceededFault
          schema:
            $ref: '#/definitions/SnapshotQuotaExceededFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: SkipFinalSnapshot
          in: formData
          required: false
          description: ''
          type: boolean
        - name: FinalDBSnapshotIdentifier
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DeleteDBParameterGroup':
    get:
      x-aws-operation-name: DeleteDBParameterGroup
      operationId: GET DeleteDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBParameterGroup
      operationId: POST DeleteDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DeleteDBSecurityGroup':
    get:
      x-aws-operation-name: DeleteDBSecurityGroup
      operationId: GET DeleteDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBSecurityGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBSecurityGroup
      operationId: POST DeleteDBSecurityGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '481':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      parameters:
        - name: DBSecurityGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBSecurityGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DeleteDBSnapshot':
    get:
      x-aws-operation-name: DeleteDBSnapshot
      operationId: GET DeleteDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: DBSnapshotIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBSnapshot
      operationId: POST DeleteDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDBSnapshotResult'
        '480':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: DBSnapshotIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DeleteDBSubnetGroup':
    get:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: GET DeleteDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDBSubnetGroup
      operationId: POST DeleteDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: InvalidDBSubnetGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetGroupStateFault'
        '481':
          description: InvalidDBSubnetStateFault
          schema:
            $ref: '#/definitions/InvalidDBSubnetStateFault'
        '482':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      parameters:
        - name: DBSubnetGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDBSubnetGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DeleteEventSubscription':
    get:
      x-aws-operation-name: DeleteEventSubscription
      operationId: GET DeleteEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          schema:
            $ref: '#/definitions/InvalidEventSubscriptionStateFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteEventSubscription
      operationId: POST DeleteEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteEventSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: InvalidEventSubscriptionStateFault
          schema:
            $ref: '#/definitions/InvalidEventSubscriptionStateFault'
      parameters:
        - name: SubscriptionName
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteEventSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DeleteOptionGroup':
    get:
      x-aws-operation-name: DeleteOptionGroup
      operationId: GET DeleteOptionGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteOptionGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteOptionGroup
      operationId: POST DeleteOptionGroup
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '481':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
      parameters:
        - name: OptionGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteOptionGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBEngineVersions':
    get:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: GET DescribeDBEngineVersions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBEngineVersionMessage'
      parameters:
        - name: Engine
          in: query
          required: false
          description: ''
          type: string
        - name: EngineVersion
          in: query
          required: false
          description: ''
          type: string
        - name: DBParameterGroupFamily
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: DefaultOnly
          in: query
          required: false
          description: ''
          type: boolean
        - name: ListSupportedCharacterSets
          in: query
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBEngineVersions
      operationId: POST DescribeDBEngineVersions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBEngineVersionMessage'
      parameters:
        - name: Engine
          in: formData
          required: false
          description: ''
          type: string
        - name: EngineVersion
          in: formData
          required: false
          description: ''
          type: string
        - name: DBParameterGroupFamily
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: DefaultOnly
          in: formData
          required: false
          description: ''
          type: boolean
        - name: ListSupportedCharacterSets
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBEngineVersions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBInstances':
    get:
      x-aws-operation-name: DescribeDBInstances
      operationId: GET DescribeDBInstances
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBInstances
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBInstances
      operationId: POST DescribeDBInstances
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBInstanceMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBInstances
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBLogFiles':
    get:
      x-aws-operation-name: DescribeDBLogFiles
      operationId: GET DescribeDBLogFiles
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDBLogFilesResponse'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: FilenameContains
          in: query
          required: false
          description: ''
          type: string
        - name: FileLastWritten
          in: query
          required: false
          description: ''
          type: integer
        - name: FileSize
          in: query
          required: false
          description: ''
          type: integer
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBLogFiles
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBLogFiles
      operationId: POST DescribeDBLogFiles
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDBLogFilesResponse'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: FilenameContains
          in: formData
          required: false
          description: ''
          type: string
        - name: FileLastWritten
          in: formData
          required: false
          description: ''
          type: integer
        - name: FileSize
          in: formData
          required: false
          description: ''
          type: integer
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBLogFiles
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBParameterGroups':
    get:
      x-aws-operation-name: DescribeDBParameterGroups
      operationId: GET DescribeDBParameterGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBParameterGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBParameterGroups
      operationId: POST DescribeDBParameterGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupsMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBParameterGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBParameters':
    get:
      x-aws-operation-name: DescribeDBParameters
      operationId: GET DescribeDBParameters
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: Source
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBParameters
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBParameters
      operationId: POST DescribeDBParameters
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupDetails'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: Source
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBParameters
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBSecurityGroups':
    get:
      x-aws-operation-name: DescribeDBSecurityGroups
      operationId: GET DescribeDBSecurityGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBSecurityGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBSecurityGroups
      operationId: POST DescribeDBSecurityGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSecurityGroupMessage'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
      parameters:
        - name: DBSecurityGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBSecurityGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBSnapshots':
    get:
      x-aws-operation-name: DescribeDBSnapshots
      operationId: GET DescribeDBSnapshots
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: false
          description: ''
          type: string
        - name: DBSnapshotIdentifier
          in: query
          required: false
          description: ''
          type: string
        - name: SnapshotType
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBSnapshots
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBSnapshots
      operationId: POST DescribeDBSnapshots
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSnapshotMessage'
        '480':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: false
          description: ''
          type: string
        - name: DBSnapshotIdentifier
          in: formData
          required: false
          description: ''
          type: string
        - name: SnapshotType
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBSnapshots
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeDBSubnetGroups':
    get:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: GET DescribeDBSubnetGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeDBSubnetGroups
      operationId: POST DescribeDBSubnetGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBSubnetGroupMessage'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
      parameters:
        - name: DBSubnetGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeDBSubnetGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeEngineDefaultParameters':
    get:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: GET DescribeEngineDefaultParameters
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEngineDefaultParametersResult'
      parameters:
        - name: DBParameterGroupFamily
          in: query
          required: true
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEngineDefaultParameters
      operationId: POST DescribeEngineDefaultParameters
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEngineDefaultParametersResult'
      parameters:
        - name: DBParameterGroupFamily
          in: formData
          required: true
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEngineDefaultParameters
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeEventCategories':
    get:
      x-aws-operation-name: DescribeEventCategories
      operationId: GET DescribeEventCategories
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventCategoriesMessage'
      parameters:
        - name: SourceType
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEventCategories
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEventCategories
      operationId: POST DescribeEventCategories
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventCategoriesMessage'
      parameters:
        - name: SourceType
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEventCategories
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeEventSubscriptions':
    get:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: GET DescribeEventSubscriptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEventSubscriptions
      operationId: POST DescribeEventSubscriptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventSubscriptionsMessage'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEventSubscriptions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeEvents':
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET DescribeEvents
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventsMessage'
      parameters:
        - name: SourceIdentifier
          in: query
          required: false
          description: ''
          type: string
        - name: SourceType
          in: query
          required: false
          description: ''
          type: string
          enum:
            - db-instance
            - db-parameter-group
            - db-security-group
            - db-snapshot
        - name: StartTime
          in: query
          required: false
          description: ''
          type: string
          format: date-time
        - name: EndTime
          in: query
          required: false
          description: ''
          type: string
          format: date-time
        - name: Duration
          in: query
          required: false
          description: ''
          type: integer
        - name: EventCategories
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEvents
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST DescribeEvents
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EventsMessage'
      parameters:
        - name: SourceIdentifier
          in: formData
          required: false
          description: ''
          type: string
        - name: SourceType
          in: formData
          required: false
          description: ''
          type: string
          enum:
            - db-instance
            - db-parameter-group
            - db-security-group
            - db-snapshot
        - name: StartTime
          in: formData
          required: false
          description: ''
          type: string
          format: date-time
        - name: EndTime
          in: formData
          required: false
          description: ''
          type: string
          format: date-time
        - name: Duration
          in: formData
          required: false
          description: ''
          type: integer
        - name: EventCategories
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeEvents
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeOptionGroupOptions':
    get:
      x-aws-operation-name: DescribeOptionGroupOptions
      operationId: GET DescribeOptionGroupOptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroupOptionsMessage'
      parameters:
        - name: EngineName
          in: query
          required: true
          description: ''
          type: string
        - name: MajorEngineVersion
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeOptionGroupOptions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeOptionGroupOptions
      operationId: POST DescribeOptionGroupOptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroupOptionsMessage'
      parameters:
        - name: EngineName
          in: formData
          required: true
          description: ''
          type: string
        - name: MajorEngineVersion
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeOptionGroupOptions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeOptionGroups':
    get:
      x-aws-operation-name: DescribeOptionGroups
      operationId: GET DescribeOptionGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: EngineName
          in: query
          required: false
          description: ''
          type: string
        - name: MajorEngineVersion
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeOptionGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeOptionGroups
      operationId: POST DescribeOptionGroups
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OptionGroups'
        '480':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: OptionGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: EngineName
          in: formData
          required: false
          description: ''
          type: string
        - name: MajorEngineVersion
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeOptionGroups
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeOrderableDBInstanceOptions':
    get:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: GET DescribeOrderableDBInstanceOptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderableDBInstanceOptionsMessage'
      parameters:
        - name: Engine
          in: query
          required: true
          description: ''
          type: string
        - name: EngineVersion
          in: query
          required: false
          description: ''
          type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          type: string
        - name: LicenseModel
          in: query
          required: false
          description: ''
          type: string
        - name: Vpc
          in: query
          required: false
          description: ''
          type: boolean
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeOrderableDBInstanceOptions
      operationId: POST DescribeOrderableDBInstanceOptions
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OrderableDBInstanceOptionsMessage'
      parameters:
        - name: Engine
          in: formData
          required: true
          description: ''
          type: string
        - name: EngineVersion
          in: formData
          required: false
          description: ''
          type: string
        - name: DBInstanceClass
          in: formData
          required: false
          description: ''
          type: string
        - name: LicenseModel
          in: formData
          required: false
          description: ''
          type: string
        - name: Vpc
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeOrderableDBInstanceOptions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeReservedDBInstances':
    get:
      x-aws-operation-name: DescribeReservedDBInstances
      operationId: GET DescribeReservedDBInstances
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceNotFoundFault'
      parameters:
        - name: ReservedDBInstanceId
          in: query
          required: false
          description: ''
          type: string
        - name: ReservedDBInstancesOfferingId
          in: query
          required: false
          description: ''
          type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          type: string
        - name: Duration
          in: query
          required: false
          description: ''
          type: string
        - name: ProductDescription
          in: query
          required: false
          description: ''
          type: string
        - name: OfferingType
          in: query
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          type: boolean
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeReservedDBInstances
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedDBInstances
      operationId: POST DescribeReservedDBInstances
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstanceMessage'
        '480':
          description: ReservedDBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceNotFoundFault'
      parameters:
        - name: ReservedDBInstanceId
          in: formData
          required: false
          description: ''
          type: string
        - name: ReservedDBInstancesOfferingId
          in: formData
          required: false
          description: ''
          type: string
        - name: DBInstanceClass
          in: formData
          required: false
          description: ''
          type: string
        - name: Duration
          in: formData
          required: false
          description: ''
          type: string
        - name: ProductDescription
          in: formData
          required: false
          description: ''
          type: string
        - name: OfferingType
          in: formData
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeReservedDBInstances
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DescribeReservedDBInstancesOfferings':
    get:
      x-aws-operation-name: DescribeReservedDBInstancesOfferings
      operationId: GET DescribeReservedDBInstancesOfferings
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
      parameters:
        - name: ReservedDBInstancesOfferingId
          in: query
          required: false
          description: ''
          type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          type: string
        - name: Duration
          in: query
          required: false
          description: ''
          type: string
        - name: ProductDescription
          in: query
          required: false
          description: ''
          type: string
        - name: OfferingType
          in: query
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          type: boolean
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: query
          required: false
          description: ''
          type: integer
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeReservedDBInstancesOfferings
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeReservedDBInstancesOfferings
      operationId: POST DescribeReservedDBInstancesOfferings
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingMessage'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
      parameters:
        - name: ReservedDBInstancesOfferingId
          in: formData
          required: false
          description: ''
          type: string
        - name: DBInstanceClass
          in: formData
          required: false
          description: ''
          type: string
        - name: Duration
          in: formData
          required: false
          description: ''
          type: string
        - name: ProductDescription
          in: formData
          required: false
          description: ''
          type: string
        - name: OfferingType
          in: formData
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: MaxRecords
          in: formData
          required: false
          description: ''
          type: integer
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeReservedDBInstancesOfferings
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=DownloadDBLogFilePortion':
    get:
      x-aws-operation-name: DownloadDBLogFilePortion
      operationId: GET DownloadDBLogFilePortion
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DownloadDBLogFilePortionDetails'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBLogFileNotFoundFault
          schema:
            $ref: '#/definitions/DBLogFileNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: LogFileName
          in: query
          required: true
          description: ''
          type: string
        - name: Marker
          in: query
          required: false
          description: ''
          type: string
        - name: NumberOfLines
          in: query
          required: false
          description: ''
          type: integer
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DownloadDBLogFilePortion
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DownloadDBLogFilePortion
      operationId: POST DownloadDBLogFilePortion
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DownloadDBLogFilePortionDetails'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBLogFileNotFoundFault
          schema:
            $ref: '#/definitions/DBLogFileNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: LogFileName
          in: formData
          required: true
          description: ''
          type: string
        - name: Marker
          in: formData
          required: false
          description: ''
          type: string
        - name: NumberOfLines
          in: formData
          required: false
          description: ''
          type: integer
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DownloadDBLogFilePortion
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=ListTagsForResource':
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET ListTagsForResource
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: ''
          type: string
        - name: Filters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListTagsForResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST ListTagsForResource
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagListMessage'
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: formData
          required: true
          description: ''
          type: string
        - name: Filters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListTagsForResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=ModifyDBInstance':
    get:
      x-aws-operation-name: ModifyDBInstance
      operationId: GET ModifyDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          schema:
            $ref: '#/definitions/DBUpgradeDependencyFailureFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: AllocatedStorage
          in: query
          required: false
          description: ''
          type: integer
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          type: string
        - name: DBSecurityGroups
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: VpcSecurityGroupIds
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: ''
          type: boolean
        - name: MasterUserPassword
          in: query
          required: false
          description: ''
          type: string
        - name: DBParameterGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: ''
          type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: ''
          type: string
        - name: PreferredMaintenanceWindow
          in: query
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          type: boolean
        - name: EngineVersion
          in: query
          required: false
          description: ''
          type: string
        - name: AllowMajorVersionUpgrade
          in: query
          required: false
          description: ''
          type: boolean
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          type: boolean
        - name: Iops
          in: query
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: NewDBInstanceIdentifier
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyDBInstance
      operationId: POST ModifyDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
        '482':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '483':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '484':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '485':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '486':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '487':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '488':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '489':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '490':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
        '491':
          description: DBUpgradeDependencyFailureFault
          schema:
            $ref: '#/definitions/DBUpgradeDependencyFailureFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: AllocatedStorage
          in: formData
          required: false
          description: ''
          type: integer
        - name: DBInstanceClass
          in: formData
          required: false
          description: ''
          type: string
        - name: DBSecurityGroups
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: VpcSecurityGroupIds
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: ApplyImmediately
          in: formData
          required: false
          description: ''
          type: boolean
        - name: MasterUserPassword
          in: formData
          required: false
          description: ''
          type: string
        - name: DBParameterGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: BackupRetentionPeriod
          in: formData
          required: false
          description: ''
          type: integer
        - name: PreferredBackupWindow
          in: formData
          required: false
          description: ''
          type: string
        - name: PreferredMaintenanceWindow
          in: formData
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: formData
          required: false
          description: ''
          type: boolean
        - name: EngineVersion
          in: formData
          required: false
          description: ''
          type: string
        - name: AllowMajorVersionUpgrade
          in: formData
          required: false
          description: ''
          type: boolean
        - name: AutoMinorVersionUpgrade
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Iops
          in: formData
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: NewDBInstanceIdentifier
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=ModifyDBParameterGroup':
    get:
      x-aws-operation-name: ModifyDBParameterGroup
      operationId: GET ModifyDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: Parameters
          in: query
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyDBParameterGroup
      operationId: POST ModifyDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
        '481':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
      parameters:
        - name: DBParameterGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: Parameters
          in: formData
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=ModifyDBSubnetGroup':
    get:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: GET ModifyDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          schema:
            $ref: '#/definitions/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: DBSubnetGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: DBSubnetGroupDescription
          in: query
          required: false
          description: ''
          type: string
        - name: SubnetIds
          in: query
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyDBSubnetGroup
      operationId: POST ModifyDBSubnetGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyDBSubnetGroupResult'
        '480':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '481':
          description: DBSubnetQuotaExceededFault
          schema:
            $ref: '#/definitions/DBSubnetQuotaExceededFault'
        '482':
          description: SubnetAlreadyInUse
          schema:
            $ref: '#/definitions/SubnetAlreadyInUse'
        '483':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '484':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
      parameters:
        - name: DBSubnetGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: DBSubnetGroupDescription
          in: formData
          required: false
          description: ''
          type: string
        - name: SubnetIds
          in: formData
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyDBSubnetGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=ModifyEventSubscription':
    get:
      x-aws-operation-name: ModifyEventSubscription
      operationId: GET ModifyEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          type: string
        - name: SnsTopicArn
          in: query
          required: false
          description: ''
          type: string
        - name: SourceType
          in: query
          required: false
          description: ''
          type: string
        - name: EventCategories
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Enabled
          in: query
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyEventSubscription
      operationId: POST ModifyEventSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyEventSubscriptionResult'
        '480':
          description: EventSubscriptionQuotaExceededFault
          schema:
            $ref: '#/definitions/EventSubscriptionQuotaExceededFault'
        '481':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '482':
          description: SNSInvalidTopicFault
          schema:
            $ref: '#/definitions/SNSInvalidTopicFault'
        '483':
          description: SNSNoAuthorizationFault
          schema:
            $ref: '#/definitions/SNSNoAuthorizationFault'
        '484':
          description: SNSTopicArnNotFoundFault
          schema:
            $ref: '#/definitions/SNSTopicArnNotFoundFault'
        '485':
          description: SubscriptionCategoryNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionCategoryNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: formData
          required: true
          description: ''
          type: string
        - name: SnsTopicArn
          in: formData
          required: false
          description: ''
          type: string
        - name: SourceType
          in: formData
          required: false
          description: ''
          type: string
        - name: EventCategories
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Enabled
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyEventSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=ModifyOptionGroup':
    get:
      x-aws-operation-name: ModifyOptionGroup
      operationId: GET ModifyOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: OptionGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: OptionsToInclude
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: OptionsToRemove
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: ApplyImmediately
          in: query
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyOptionGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ModifyOptionGroup
      operationId: POST ModifyOptionGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModifyOptionGroupResult'
        '480':
          description: InvalidOptionGroupStateFault
          schema:
            $ref: '#/definitions/InvalidOptionGroupStateFault'
        '481':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: OptionGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: OptionsToInclude
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: OptionsToRemove
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: ApplyImmediately
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ModifyOptionGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=PromoteReadReplica':
    get:
      x-aws-operation-name: PromoteReadReplica
      operationId: GET PromoteReadReplica
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: BackupRetentionPeriod
          in: query
          required: false
          description: ''
          type: integer
        - name: PreferredBackupWindow
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PromoteReadReplica
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PromoteReadReplica
      operationId: POST PromoteReadReplica
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PromoteReadReplicaResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: BackupRetentionPeriod
          in: formData
          required: false
          description: ''
          type: integer
        - name: PreferredBackupWindow
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PromoteReadReplica
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=PurchaseReservedDBInstancesOffering':
    get:
      x-aws-operation-name: PurchaseReservedDBInstancesOffering
      operationId: GET PurchaseReservedDBInstancesOffering
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceQuotaExceededFault'
      parameters:
        - name: ReservedDBInstancesOfferingId
          in: query
          required: true
          description: ''
          type: string
        - name: ReservedDBInstanceId
          in: query
          required: false
          description: ''
          type: string
        - name: DBInstanceCount
          in: query
          required: false
          description: ''
          type: integer
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PurchaseReservedDBInstancesOffering
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PurchaseReservedDBInstancesOffering
      operationId: POST PurchaseReservedDBInstancesOffering
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PurchaseReservedDBInstancesOfferingResult'
        '480':
          description: ReservedDBInstancesOfferingNotFoundFault
          schema:
            $ref: '#/definitions/ReservedDBInstancesOfferingNotFoundFault'
        '481':
          description: ReservedDBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceAlreadyExistsFault'
        '482':
          description: ReservedDBInstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/ReservedDBInstanceQuotaExceededFault'
      parameters:
        - name: ReservedDBInstancesOfferingId
          in: formData
          required: true
          description: ''
          type: string
        - name: ReservedDBInstanceId
          in: formData
          required: false
          description: ''
          type: string
        - name: DBInstanceCount
          in: formData
          required: false
          description: ''
          type: integer
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PurchaseReservedDBInstancesOffering
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=RebootDBInstance':
    get:
      x-aws-operation-name: RebootDBInstance
      operationId: GET RebootDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: ForceFailover
          in: query
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RebootDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RebootDBInstance
      operationId: POST RebootDBInstance
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RebootDBInstanceResult'
        '480':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: ForceFailover
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RebootDBInstance
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=RemoveSourceIdentifierFromSubscription':
    get:
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      operationId: GET RemoveSourceIdentifierFromSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: query
          required: true
          description: ''
          type: string
        - name: SourceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RemoveSourceIdentifierFromSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RemoveSourceIdentifierFromSubscription
      operationId: POST RemoveSourceIdentifierFromSubscription
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveSourceIdentifierFromSubscriptionResult'
        '480':
          description: SubscriptionNotFoundFault
          schema:
            $ref: '#/definitions/SubscriptionNotFoundFault'
        '481':
          description: SourceNotFoundFault
          schema:
            $ref: '#/definitions/SourceNotFoundFault'
      parameters:
        - name: SubscriptionName
          in: formData
          required: true
          description: ''
          type: string
        - name: SourceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RemoveSourceIdentifierFromSubscription
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=RemoveTagsFromResource':
    get:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: GET RemoveTagsFromResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: query
          required: true
          description: ''
          type: string
        - name: TagKeys
          in: query
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RemoveTagsFromResource
      operationId: POST RemoveTagsFromResource
      description: ''
      responses:
        '200':
          description: Success
        '480':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
      parameters:
        - name: ResourceName
          in: formData
          required: true
          description: ''
          type: string
        - name: TagKeys
          in: formData
          required: true
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RemoveTagsFromResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=ResetDBParameterGroup':
    get:
      x-aws-operation-name: ResetDBParameterGroup
      operationId: GET ResetDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: ResetAllParameters
          in: query
          required: false
          description: ''
          type: boolean
        - name: Parameters
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ResetDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ResetDBParameterGroup
      operationId: POST ResetDBParameterGroup
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DBParameterGroupNameMessage'
        '480':
          description: InvalidDBParameterGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBParameterGroupStateFault'
        '481':
          description: DBParameterGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBParameterGroupNotFoundFault'
      parameters:
        - name: DBParameterGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: ResetAllParameters
          in: formData
          required: false
          description: ''
          type: boolean
        - name: Parameters
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ResetDBParameterGroup
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=RestoreDBInstanceFromDBSnapshot':
    get:
      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot
      operationId: GET RestoreDBInstanceFromDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: DBSnapshotIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          type: string
        - name: Port
          in: query
          required: false
          description: ''
          type: integer
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          type: boolean
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          type: boolean
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: ''
          type: string
        - name: DBName
          in: query
          required: false
          description: ''
          type: string
        - name: Engine
          in: query
          required: false
          description: ''
          type: string
        - name: Iops
          in: query
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RestoreDBInstanceFromDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreDBInstanceFromDBSnapshot
      operationId: POST RestoreDBInstanceFromDBSnapshot
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceFromDBSnapshotResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBSnapshotNotFoundFault
          schema:
            $ref: '#/definitions/DBSnapshotNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBSnapshotStateFault
          schema:
            $ref: '#/definitions/InvalidDBSnapshotStateFault'
        '485':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '486':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '487':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '488':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '489':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '490':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '491':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '492':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: DBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: DBSnapshotIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: DBInstanceClass
          in: formData
          required: false
          description: ''
          type: string
        - name: Port
          in: formData
          required: false
          description: ''
          type: integer
        - name: AvailabilityZone
          in: formData
          required: false
          description: ''
          type: string
        - name: DBSubnetGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: formData
          required: false
          description: ''
          type: boolean
        - name: PubliclyAccessible
          in: formData
          required: false
          description: ''
          type: boolean
        - name: AutoMinorVersionUpgrade
          in: formData
          required: false
          description: ''
          type: boolean
        - name: LicenseModel
          in: formData
          required: false
          description: ''
          type: string
        - name: DBName
          in: formData
          required: false
          description: ''
          type: string
        - name: Engine
          in: formData
          required: false
          description: ''
          type: string
        - name: Iops
          in: formData
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RestoreDBInstanceFromDBSnapshot
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=RestoreDBInstanceToPointInTime':
    get:
      x-aws-operation-name: RestoreDBInstanceToPointInTime
      operationId: GET RestoreDBInstanceToPointInTime
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          schema:
            $ref: '#/definitions/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: SourceDBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: TargetDBInstanceIdentifier
          in: query
          required: true
          description: ''
          type: string
        - name: RestoreTime
          in: query
          required: false
          description: ''
          type: string
          format: date-time
        - name: UseLatestRestorableTime
          in: query
          required: false
          description: ''
          type: boolean
        - name: DBInstanceClass
          in: query
          required: false
          description: ''
          type: string
        - name: Port
          in: query
          required: false
          description: ''
          type: integer
        - name: AvailabilityZone
          in: query
          required: false
          description: ''
          type: string
        - name: DBSubnetGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: query
          required: false
          description: ''
          type: boolean
        - name: PubliclyAccessible
          in: query
          required: false
          description: ''
          type: boolean
        - name: AutoMinorVersionUpgrade
          in: query
          required: false
          description: ''
          type: boolean
        - name: LicenseModel
          in: query
          required: false
          description: ''
          type: string
        - name: DBName
          in: query
          required: false
          description: ''
          type: string
        - name: Engine
          in: query
          required: false
          description: ''
          type: string
        - name: Iops
          in: query
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: Tags
          in: query
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RestoreDBInstanceToPointInTime
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RestoreDBInstanceToPointInTime
      operationId: POST RestoreDBInstanceToPointInTime
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RestoreDBInstanceToPointInTimeResult'
        '480':
          description: DBInstanceAlreadyExistsFault
          schema:
            $ref: '#/definitions/DBInstanceAlreadyExistsFault'
        '481':
          description: DBInstanceNotFoundFault
          schema:
            $ref: '#/definitions/DBInstanceNotFoundFault'
        '482':
          description: InstanceQuotaExceededFault
          schema:
            $ref: '#/definitions/InstanceQuotaExceededFault'
        '483':
          description: InsufficientDBInstanceCapacityFault
          schema:
            $ref: '#/definitions/InsufficientDBInstanceCapacityFault'
        '484':
          description: InvalidDBInstanceStateFault
          schema:
            $ref: '#/definitions/InvalidDBInstanceStateFault'
        '485':
          description: PointInTimeRestoreNotEnabledFault
          schema:
            $ref: '#/definitions/PointInTimeRestoreNotEnabledFault'
        '486':
          description: StorageQuotaExceededFault
          schema:
            $ref: '#/definitions/StorageQuotaExceededFault'
        '487':
          description: InvalidVPCNetworkStateFault
          schema:
            $ref: '#/definitions/InvalidVPCNetworkStateFault'
        '488':
          description: InvalidRestoreFault
          schema:
            $ref: '#/definitions/InvalidRestoreFault'
        '489':
          description: DBSubnetGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSubnetGroupNotFoundFault'
        '490':
          description: DBSubnetGroupDoesNotCoverEnoughAZs
          schema:
            $ref: '#/definitions/DBSubnetGroupDoesNotCoverEnoughAZs'
        '491':
          description: InvalidSubnet
          schema:
            $ref: '#/definitions/InvalidSubnet'
        '492':
          description: ProvisionedIopsNotAvailableInAZFault
          schema:
            $ref: '#/definitions/ProvisionedIopsNotAvailableInAZFault'
        '493':
          description: OptionGroupNotFoundFault
          schema:
            $ref: '#/definitions/OptionGroupNotFoundFault'
      parameters:
        - name: SourceDBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: TargetDBInstanceIdentifier
          in: formData
          required: true
          description: ''
          type: string
        - name: RestoreTime
          in: formData
          required: false
          description: ''
          type: string
          format: date-time
        - name: UseLatestRestorableTime
          in: formData
          required: false
          description: ''
          type: boolean
        - name: DBInstanceClass
          in: formData
          required: false
          description: ''
          type: string
        - name: Port
          in: formData
          required: false
          description: ''
          type: integer
        - name: AvailabilityZone
          in: formData
          required: false
          description: ''
          type: string
        - name: DBSubnetGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: MultiAZ
          in: formData
          required: false
          description: ''
          type: boolean
        - name: PubliclyAccessible
          in: formData
          required: false
          description: ''
          type: boolean
        - name: AutoMinorVersionUpgrade
          in: formData
          required: false
          description: ''
          type: boolean
        - name: LicenseModel
          in: formData
          required: false
          description: ''
          type: string
        - name: DBName
          in: formData
          required: false
          description: ''
          type: string
        - name: Engine
          in: formData
          required: false
          description: ''
          type: string
        - name: Iops
          in: formData
          required: false
          description: ''
          type: integer
        - name: OptionGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: Tags
          in: formData
          required: false
          description: ''
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RestoreDBInstanceToPointInTime
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
  '/#Action=RevokeDBSecurityGroupIngress':
    get:
      x-aws-operation-name: RevokeDBSecurityGroupIngress
      operationId: GET RevokeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          schema:
            $ref: '#/definitions/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
      parameters:
        - name: DBSecurityGroupName
          in: query
          required: true
          description: ''
          type: string
        - name: CIDRIP
          in: query
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupName
          in: query
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupId
          in: query
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupOwnerId
          in: query
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RevokeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: RevokeDBSecurityGroupIngress
      operationId: POST RevokeDBSecurityGroupIngress
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RevokeDBSecurityGroupIngressResult'
        '480':
          description: DBSecurityGroupNotFoundFault
          schema:
            $ref: '#/definitions/DBSecurityGroupNotFoundFault'
        '481':
          description: AuthorizationNotFoundFault
          schema:
            $ref: '#/definitions/AuthorizationNotFoundFault'
        '482':
          description: InvalidDBSecurityGroupStateFault
          schema:
            $ref: '#/definitions/InvalidDBSecurityGroupStateFault'
      parameters:
        - name: DBSecurityGroupName
          in: formData
          required: true
          description: ''
          type: string
        - name: CIDRIP
          in: formData
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupName
          in: formData
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupId
          in: formData
          required: false
          description: ''
          type: string
        - name: EC2SecurityGroupOwnerId
          in: formData
          required: false
          description: ''
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - RevokeDBSecurityGroupIngress
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2013-09-09'
definitions:
  AddSourceIdentifierToSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
  SubscriptionNotFoundFault: {}
  SourceNotFoundFault: {}
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/String'
      Value:
        $ref: '#/definitions/String'
  DBInstanceNotFoundFault: {}
  DBSnapshotNotFoundFault: {}
  AuthorizeDBSecurityGroupIngressResult:
    type: object
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/DBSecurityGroup'
  DBSecurityGroupNotFoundFault: {}
  InvalidDBSecurityGroupStateFault: {}
  AuthorizationAlreadyExistsFault: {}
  AuthorizationQuotaExceededFault: {}
  CopyDBSnapshotResult:
    type: object
    properties:
      DBSnapshot:
        $ref: '#/definitions/DBSnapshot'
  DBSnapshotAlreadyExistsFault: {}
  InvalidDBSnapshotStateFault: {}
  SnapshotQuotaExceededFault: {}
  CreateDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  String:
    type: string
  DBInstanceAlreadyExistsFault: {}
  InsufficientDBInstanceCapacityFault: {}
  DBParameterGroupNotFoundFault: {}
  InstanceQuotaExceededFault: {}
  StorageQuotaExceededFault: {}
  DBSubnetGroupNotFoundFault: {}
  DBSubnetGroupDoesNotCoverEnoughAZs: {}
  InvalidSubnet: {}
  InvalidVPCNetworkStateFault: {}
  ProvisionedIopsNotAvailableInAZFault: {}
  OptionGroupNotFoundFault: {}
  CreateDBInstanceReadReplicaResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  InvalidDBInstanceStateFault: {}
  DBSubnetGroupNotAllowedFault: {}
  InvalidDBSubnetGroupFault: {}
  CreateDBParameterGroupResult:
    type: object
    properties:
      DBParameterGroup:
        $ref: '#/definitions/DBParameterGroup'
  DBParameterGroupQuotaExceededFault: {}
  DBParameterGroupAlreadyExistsFault: {}
  CreateDBSecurityGroupResult:
    type: object
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/DBSecurityGroup'
  DBSecurityGroupAlreadyExistsFault: {}
  DBSecurityGroupQuotaExceededFault: {}
  DBSecurityGroupNotSupportedFault: {}
  CreateDBSnapshotResult:
    type: object
    properties:
      DBSnapshot:
        $ref: '#/definitions/DBSnapshot'
  CreateDBSubnetGroupResult:
    type: object
    properties:
      DBSubnetGroup:
        $ref: '#/definitions/DBSubnetGroup'
  DBSubnetGroupAlreadyExistsFault: {}
  DBSubnetGroupQuotaExceededFault: {}
  DBSubnetQuotaExceededFault: {}
  CreateEventSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
  EventSubscriptionQuotaExceededFault: {}
  SubscriptionAlreadyExistFault: {}
  SNSInvalidTopicFault: {}
  SNSNoAuthorizationFault: {}
  SNSTopicArnNotFoundFault: {}
  SubscriptionCategoryNotFoundFault: {}
  CreateOptionGroupResult:
    type: object
    properties:
      OptionGroup:
        $ref: '#/definitions/OptionGroup'
  OptionGroupAlreadyExistsFault: {}
  OptionGroupQuotaExceededFault: {}
  DeleteDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  InvalidDBParameterGroupStateFault: {}
  DeleteDBSnapshotResult:
    type: object
    properties:
      DBSnapshot:
        $ref: '#/definitions/DBSnapshot'
  InvalidDBSubnetGroupStateFault: {}
  InvalidDBSubnetStateFault: {}
  DeleteEventSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
  InvalidEventSubscriptionStateFault: {}
  InvalidOptionGroupStateFault: {}
  DBEngineVersionMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      DBEngineVersions:
        $ref: '#/definitions/DBEngineVersionList'
  Filter:
    type: object
    required:
      - Name
      - Values
    properties:
      Name:
        $ref: '#/definitions/String'
      Values:
        $ref: '#/definitions/FilterValueList'
  DBInstanceMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      DBInstances:
        $ref: '#/definitions/DBInstanceList'
  DescribeDBLogFilesResponse:
    type: object
    properties:
      DescribeDBLogFiles:
        $ref: '#/definitions/DescribeDBLogFilesList'
      Marker:
        $ref: '#/definitions/String'
  DBParameterGroupsMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      DBParameterGroups:
        $ref: '#/definitions/DBParameterGroupList'
  DBParameterGroupDetails:
    type: object
    properties:
      Parameters:
        $ref: '#/definitions/ParametersList'
      Marker:
        $ref: '#/definitions/String'
  DBSecurityGroupMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroups'
  DBSnapshotMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      DBSnapshots:
        $ref: '#/definitions/DBSnapshotList'
  DBSubnetGroupMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      DBSubnetGroups:
        $ref: '#/definitions/DBSubnetGroups'
  DescribeEngineDefaultParametersResult:
    type: object
    properties:
      EngineDefaults:
        $ref: '#/definitions/EngineDefaults'
  EventCategoriesMessage:
    type: object
    properties:
      EventCategoriesMapList:
        $ref: '#/definitions/EventCategoriesMapList'
  EventSubscriptionsMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      EventSubscriptionsList:
        $ref: '#/definitions/EventSubscriptionsList'
  EventsMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      Events:
        $ref: '#/definitions/EventList'
  OptionGroupOptionsMessage:
    type: object
    properties:
      OptionGroupOptions:
        $ref: '#/definitions/OptionGroupOptionsList'
      Marker:
        $ref: '#/definitions/String'
  OptionGroups:
    type: object
    properties:
      OptionGroupsList:
        $ref: '#/definitions/OptionGroupsList'
      Marker:
        $ref: '#/definitions/String'
  OrderableDBInstanceOptionsMessage:
    type: object
    properties:
      OrderableDBInstanceOptions:
        $ref: '#/definitions/OrderableDBInstanceOptionsList'
      Marker:
        $ref: '#/definitions/String'
  ReservedDBInstanceMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      ReservedDBInstances:
        $ref: '#/definitions/ReservedDBInstanceList'
  ReservedDBInstanceNotFoundFault: {}
  ReservedDBInstancesOfferingMessage:
    type: object
    properties:
      Marker:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferings:
        $ref: '#/definitions/ReservedDBInstancesOfferingList'
  ReservedDBInstancesOfferingNotFoundFault: {}
  DownloadDBLogFilePortionDetails:
    type: object
    properties:
      LogFileData:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      AdditionalDataPending:
        $ref: '#/definitions/Boolean'
  DBLogFileNotFoundFault: {}
  TagListMessage:
    type: object
    properties:
      TagList:
        $ref: '#/definitions/TagList'
  ModifyDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  DBUpgradeDependencyFailureFault: {}
  DBParameterGroupNameMessage:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
  Parameter:
    type: object
    properties:
      ParameterName:
        $ref: '#/definitions/String'
      ParameterValue:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
      Source:
        $ref: '#/definitions/String'
      ApplyType:
        $ref: '#/definitions/String'
      DataType:
        $ref: '#/definitions/String'
      AllowedValues:
        $ref: '#/definitions/String'
      IsModifiable:
        $ref: '#/definitions/Boolean'
      MinimumEngineVersion:
        $ref: '#/definitions/String'
      ApplyMethod:
        $ref: '#/definitions/ApplyMethod'
  ModifyDBSubnetGroupResult:
    type: object
    properties:
      DBSubnetGroup:
        $ref: '#/definitions/DBSubnetGroup'
  SubnetAlreadyInUse: {}
  ModifyEventSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
  ModifyOptionGroupResult:
    type: object
    properties:
      OptionGroup:
        $ref: '#/definitions/OptionGroup'
  OptionConfiguration:
    type: object
    required:
      - OptionName
    properties:
      OptionName:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      DBSecurityGroupMemberships:
        $ref: '#/definitions/DBSecurityGroupNameList'
      VpcSecurityGroupMemberships:
        $ref: '#/definitions/VpcSecurityGroupIdList'
      OptionSettings:
        $ref: '#/definitions/OptionSettingsList'
  PromoteReadReplicaResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  PurchaseReservedDBInstancesOfferingResult:
    type: object
    properties:
      ReservedDBInstance:
        $ref: '#/definitions/ReservedDBInstance'
  ReservedDBInstanceAlreadyExistsFault: {}
  ReservedDBInstanceQuotaExceededFault: {}
  RebootDBInstanceResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  RemoveSourceIdentifierFromSubscriptionResult:
    type: object
    properties:
      EventSubscription:
        $ref: '#/definitions/EventSubscription'
  RestoreDBInstanceFromDBSnapshotResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  InvalidRestoreFault: {}
  RestoreDBInstanceToPointInTimeResult:
    type: object
    properties:
      DBInstance:
        $ref: '#/definitions/DBInstance'
  PointInTimeRestoreNotEnabledFault: {}
  RevokeDBSecurityGroupIngressResult:
    type: object
    properties:
      DBSecurityGroup:
        $ref: '#/definitions/DBSecurityGroup'
  AuthorizationNotFoundFault: {}
  AddSourceIdentifierToSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
      - SourceIdentifier
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
      SourceIdentifier:
        $ref: '#/definitions/String'
  EventSubscription:
    type: object
    properties:
      CustomerAwsId:
        $ref: '#/definitions/String'
      CustSubscriptionId:
        $ref: '#/definitions/String'
      SnsTopicArn:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
      SubscriptionCreationTime:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/String'
      SourceIdsList:
        $ref: '#/definitions/SourceIdsList'
      EventCategoriesList:
        $ref: '#/definitions/EventCategoriesList'
      Enabled:
        $ref: '#/definitions/Boolean'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  AddTagsToResourceMessage:
    type: object
    required:
      - ResourceName
      - Tags
    properties:
      ResourceName:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  ApplyMethod:
    type: string
    enum:
      - immediate
      - pending-reboot
  AuthorizeDBSecurityGroupIngressMessage:
    type: object
    required:
      - DBSecurityGroupName
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      CIDRIP:
        $ref: '#/definitions/String'
      EC2SecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupId:
        $ref: '#/definitions/String'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/String'
  DBSecurityGroup:
    type: object
    properties:
      OwnerId:
        $ref: '#/definitions/String'
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      DBSecurityGroupDescription:
        $ref: '#/definitions/String'
      VpcId:
        $ref: '#/definitions/String'
      EC2SecurityGroups:
        $ref: '#/definitions/EC2SecurityGroupList'
      IPRanges:
        $ref: '#/definitions/IPRangeList'
  Boolean:
    type: boolean
  AvailabilityZone:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
      ProvisionedIopsCapable:
        $ref: '#/definitions/Boolean'
  AvailabilityZoneList:
    type: array
    items:
      $ref: '#/definitions/AvailabilityZone'
  BooleanOptional:
    type: boolean
  CharacterSet:
    type: object
    properties:
      CharacterSetName:
        $ref: '#/definitions/String'
      CharacterSetDescription:
        $ref: '#/definitions/String'
  CopyDBSnapshotMessage:
    type: object
    required:
      - SourceDBSnapshotIdentifier
      - TargetDBSnapshotIdentifier
    properties:
      SourceDBSnapshotIdentifier:
        $ref: '#/definitions/String'
      TargetDBSnapshotIdentifier:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  DBSnapshot:
    type: object
    properties:
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      SnapshotCreateTime:
        $ref: '#/definitions/TStamp'
      Engine:
        $ref: '#/definitions/String'
      AllocatedStorage:
        $ref: '#/definitions/Integer'
      Status:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/Integer'
      AvailabilityZone:
        $ref: '#/definitions/String'
      VpcId:
        $ref: '#/definitions/String'
      InstanceCreateTime:
        $ref: '#/definitions/TStamp'
      MasterUsername:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      LicenseModel:
        $ref: '#/definitions/String'
      SnapshotType:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      PercentProgress:
        $ref: '#/definitions/Integer'
      SourceRegion:
        $ref: '#/definitions/String'
  IntegerOptional:
    type: integer
  DBSecurityGroupNameList:
    type: array
    items:
      $ref: '#/definitions/String'
  VpcSecurityGroupIdList:
    type: array
    items:
      $ref: '#/definitions/String'
  CreateDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
      - AllocatedStorage
      - DBInstanceClass
      - Engine
      - MasterUsername
      - MasterUserPassword
    properties:
      DBName:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      MasterUsername:
        $ref: '#/definitions/String'
      MasterUserPassword:
        $ref: '#/definitions/String'
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroupNameList'
      VpcSecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIdList'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
      DBParameterGroupName:
        $ref: '#/definitions/String'
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      EngineVersion:
        $ref: '#/definitions/String'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      LicenseModel:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      CharacterSetName:
        $ref: '#/definitions/String'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
      Tags:
        $ref: '#/definitions/TagList'
  CreateDBInstanceReadReplicaMessage:
    type: object
    required:
      - DBInstanceIdentifier
      - SourceDBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      SourceDBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      AvailabilityZone:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
      Tags:
        $ref: '#/definitions/TagList'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
  DBInstance:
    type: object
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      DBInstanceStatus:
        $ref: '#/definitions/String'
      MasterUsername:
        $ref: '#/definitions/String'
      DBName:
        $ref: '#/definitions/String'
      Endpoint:
        $ref: '#/definitions/Endpoint'
      AllocatedStorage:
        $ref: '#/definitions/Integer'
      InstanceCreateTime:
        $ref: '#/definitions/TStamp'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
      BackupRetentionPeriod:
        $ref: '#/definitions/Integer'
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroupMembershipList'
      VpcSecurityGroups:
        $ref: '#/definitions/VpcSecurityGroupMembershipList'
      DBParameterGroups:
        $ref: '#/definitions/DBParameterGroupStatusList'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBSubnetGroup:
        $ref: '#/definitions/DBSubnetGroup'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
      PendingModifiedValues:
        $ref: '#/definitions/PendingModifiedValues'
      LatestRestorableTime:
        $ref: '#/definitions/TStamp'
      MultiAZ:
        $ref: '#/definitions/Boolean'
      EngineVersion:
        $ref: '#/definitions/String'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/Boolean'
      ReadReplicaSourceDBInstanceIdentifier:
        $ref: '#/definitions/String'
      ReadReplicaDBInstanceIdentifiers:
        $ref: '#/definitions/ReadReplicaDBInstanceIdentifierList'
      LicenseModel:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupMemberships:
        $ref: '#/definitions/OptionGroupMembershipList'
      CharacterSetName:
        $ref: '#/definitions/String'
      SecondaryAvailabilityZone:
        $ref: '#/definitions/String'
      PubliclyAccessible:
        $ref: '#/definitions/Boolean'
      StatusInfos:
        $ref: '#/definitions/DBInstanceStatusInfoList'
  CreateDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
      - DBParameterGroupFamily
      - Description
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  DBParameterGroup:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
  CreateDBSecurityGroupMessage:
    type: object
    required:
      - DBSecurityGroupName
      - DBSecurityGroupDescription
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      DBSecurityGroupDescription:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  CreateDBSnapshotMessage:
    type: object
    required:
      - DBSnapshotIdentifier
      - DBInstanceIdentifier
    properties:
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  SubnetIdentifierList:
    type: array
    items:
      $ref: '#/definitions/String'
  CreateDBSubnetGroupMessage:
    type: object
    required:
      - DBSubnetGroupName
      - DBSubnetGroupDescription
      - SubnetIds
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      DBSubnetGroupDescription:
        $ref: '#/definitions/String'
      SubnetIds:
        $ref: '#/definitions/SubnetIdentifierList'
      Tags:
        $ref: '#/definitions/TagList'
  DBSubnetGroup:
    type: object
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      DBSubnetGroupDescription:
        $ref: '#/definitions/String'
      VpcId:
        $ref: '#/definitions/String'
      SubnetGroupStatus:
        $ref: '#/definitions/String'
      Subnets:
        $ref: '#/definitions/SubnetList'
  EventCategoriesList:
    type: array
    items:
      $ref: '#/definitions/String'
  SourceIdsList:
    type: array
    items:
      $ref: '#/definitions/String'
  CreateEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
      - SnsTopicArn
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
      SnsTopicArn:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/String'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      SourceIds:
        $ref: '#/definitions/SourceIdsList'
      Enabled:
        $ref: '#/definitions/BooleanOptional'
      Tags:
        $ref: '#/definitions/TagList'
  CreateOptionGroupMessage:
    type: object
    required:
      - OptionGroupName
      - EngineName
      - MajorEngineVersion
      - OptionGroupDescription
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      OptionGroupDescription:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  OptionGroup:
    type: object
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
      OptionGroupDescription:
        $ref: '#/definitions/String'
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      Options:
        $ref: '#/definitions/OptionsList'
      AllowsVpcAndNonVpcInstanceMemberships:
        $ref: '#/definitions/Boolean'
      VpcId:
        $ref: '#/definitions/String'
  SupportedCharacterSetsList:
    type: array
    items:
      $ref: '#/definitions/CharacterSet'
  DBEngineVersion:
    type: object
    properties:
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      DBEngineDescription:
        $ref: '#/definitions/String'
      DBEngineVersionDescription:
        $ref: '#/definitions/String'
      DefaultCharacterSet:
        $ref: '#/definitions/CharacterSet'
      SupportedCharacterSets:
        $ref: '#/definitions/SupportedCharacterSetsList'
  DBEngineVersionList:
    type: array
    items:
      $ref: '#/definitions/DBEngineVersion'
  Endpoint:
    type: object
    properties:
      Address:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/Integer'
  Integer:
    type: integer
  TStamp:
    type: string
    format: date-time
  DBSecurityGroupMembershipList:
    type: array
    items:
      $ref: '#/definitions/DBSecurityGroupMembership'
  VpcSecurityGroupMembershipList:
    type: array
    items:
      $ref: '#/definitions/VpcSecurityGroupMembership'
  DBParameterGroupStatusList:
    type: array
    items:
      $ref: '#/definitions/DBParameterGroupStatus'
  PendingModifiedValues:
    type: object
    properties:
      DBInstanceClass:
        $ref: '#/definitions/String'
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
      MasterUserPassword:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      EngineVersion:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
  ReadReplicaDBInstanceIdentifierList:
    type: array
    items:
      $ref: '#/definitions/String'
  OptionGroupMembershipList:
    type: array
    items:
      $ref: '#/definitions/OptionGroupMembership'
  DBInstanceStatusInfoList:
    type: array
    items:
      $ref: '#/definitions/DBInstanceStatusInfo'
  DBInstanceList:
    type: array
    items:
      $ref: '#/definitions/DBInstance'
  DBInstanceStatusInfo:
    type: object
    properties:
      StatusType:
        $ref: '#/definitions/String'
      Normal:
        $ref: '#/definitions/Boolean'
      Status:
        $ref: '#/definitions/String'
      Message:
        $ref: '#/definitions/String'
  ParametersList:
    type: array
    items:
      $ref: '#/definitions/Parameter'
  DBParameterGroupList:
    type: array
    items:
      $ref: '#/definitions/DBParameterGroup'
  DBParameterGroupStatus:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      ParameterApplyStatus:
        $ref: '#/definitions/String'
  EC2SecurityGroupList:
    type: array
    items:
      $ref: '#/definitions/EC2SecurityGroup'
  IPRangeList:
    type: array
    items:
      $ref: '#/definitions/IPRange'
  DBSecurityGroupMembership:
    type: object
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
  DBSecurityGroups:
    type: array
    items:
      $ref: '#/definitions/DBSecurityGroup'
  DBSnapshotList:
    type: array
    items:
      $ref: '#/definitions/DBSnapshot'
  SubnetList:
    type: array
    items:
      $ref: '#/definitions/Subnet'
  DBSubnetGroups:
    type: array
    items:
      $ref: '#/definitions/DBSubnetGroup'
  DeleteDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      SkipFinalSnapshot:
        $ref: '#/definitions/Boolean'
      FinalDBSnapshotIdentifier:
        $ref: '#/definitions/String'
  DeleteDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
  DeleteDBSecurityGroupMessage:
    type: object
    required:
      - DBSecurityGroupName
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
  DeleteDBSnapshotMessage:
    type: object
    required:
      - DBSnapshotIdentifier
    properties:
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
  DeleteDBSubnetGroupMessage:
    type: object
    required:
      - DBSubnetGroupName
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/String'
  DeleteEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
  DeleteOptionGroupMessage:
    type: object
    required:
      - OptionGroupName
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
  FilterList:
    type: array
    items:
      $ref: '#/definitions/Filter'
  DescribeDBEngineVersionsMessage:
    type: object
    properties:
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
      DefaultOnly:
        $ref: '#/definitions/Boolean'
      ListSupportedCharacterSets:
        $ref: '#/definitions/BooleanOptional'
  DescribeDBInstancesMessage:
    type: object
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  Long:
    type: integer
  DescribeDBLogFilesDetails:
    type: object
    properties:
      LogFileName:
        $ref: '#/definitions/String'
      LastWritten:
        $ref: '#/definitions/Long'
      Size:
        $ref: '#/definitions/Long'
  DescribeDBLogFilesList:
    type: array
    items:
      $ref: '#/definitions/DescribeDBLogFilesDetails'
  DescribeDBLogFilesMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      FilenameContains:
        $ref: '#/definitions/String'
      FileLastWritten:
        $ref: '#/definitions/Long'
      FileSize:
        $ref: '#/definitions/Long'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeDBParameterGroupsMessage:
    type: object
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeDBParametersMessage:
    type: object
    required:
      - DBParameterGroupName
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Source:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeDBSecurityGroupsMessage:
    type: object
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeDBSnapshotsMessage:
    type: object
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
      SnapshotType:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeDBSubnetGroupsMessage:
    type: object
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeEngineDefaultParametersMessage:
    type: object
    required:
      - DBParameterGroupFamily
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  EngineDefaults:
    type: object
    properties:
      DBParameterGroupFamily:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      Parameters:
        $ref: '#/definitions/ParametersList'
  DescribeEventCategoriesMessage:
    type: object
    properties:
      SourceType:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
  DescribeEventSubscriptionsMessage:
    type: object
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  SourceType:
    type: string
    enum:
      - db-instance
      - db-parameter-group
      - db-security-group
      - db-snapshot
  DescribeEventsMessage:
    type: object
    properties:
      SourceIdentifier:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/SourceType'
      StartTime:
        $ref: '#/definitions/TStamp'
      EndTime:
        $ref: '#/definitions/TStamp'
      Duration:
        $ref: '#/definitions/IntegerOptional'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeOptionGroupOptionsMessage:
    type: object
    required:
      - EngineName
    properties:
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeOptionGroupsMessage:
    type: object
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
      Marker:
        $ref: '#/definitions/String'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
  DescribeOrderableDBInstanceOptionsMessage:
    type: object
    required:
      - Engine
    properties:
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      LicenseModel:
        $ref: '#/definitions/String'
      Vpc:
        $ref: '#/definitions/BooleanOptional'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeReservedDBInstancesMessage:
    type: object
    properties:
      ReservedDBInstanceId:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Duration:
        $ref: '#/definitions/String'
      ProductDescription:
        $ref: '#/definitions/String'
      OfferingType:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  DescribeReservedDBInstancesOfferingsMessage:
    type: object
    properties:
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Duration:
        $ref: '#/definitions/String'
      ProductDescription:
        $ref: '#/definitions/String'
      OfferingType:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      Filters:
        $ref: '#/definitions/FilterList'
      MaxRecords:
        $ref: '#/definitions/IntegerOptional'
      Marker:
        $ref: '#/definitions/String'
  Double:
    type: number
    format: double
  DownloadDBLogFilePortionMessage:
    type: object
    required:
      - DBInstanceIdentifier
      - LogFileName
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      LogFileName:
        $ref: '#/definitions/String'
      Marker:
        $ref: '#/definitions/String'
      NumberOfLines:
        $ref: '#/definitions/Integer'
  EC2SecurityGroup:
    type: object
    properties:
      Status:
        $ref: '#/definitions/String'
      EC2SecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupId:
        $ref: '#/definitions/String'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/String'
  Event:
    type: object
    properties:
      SourceIdentifier:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/SourceType'
      Message:
        $ref: '#/definitions/String'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      Date:
        $ref: '#/definitions/TStamp'
  EventCategoriesMap:
    type: object
    properties:
      SourceType:
        $ref: '#/definitions/String'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
  EventCategoriesMapList:
    type: array
    items:
      $ref: '#/definitions/EventCategoriesMap'
  EventList:
    type: array
    items:
      $ref: '#/definitions/Event'
  EventSubscriptionsList:
    type: array
    items:
      $ref: '#/definitions/EventSubscription'
  FilterValueList:
    type: array
    items:
      $ref: '#/definitions/String'
  IPRange:
    type: object
    properties:
      Status:
        $ref: '#/definitions/String'
      CIDRIP:
        $ref: '#/definitions/String'
  KeyList:
    type: array
    items:
      $ref: '#/definitions/String'
  ListTagsForResourceMessage:
    type: object
    required:
      - ResourceName
    properties:
      ResourceName:
        $ref: '#/definitions/String'
      Filters:
        $ref: '#/definitions/FilterList'
  ModifyDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      AllocatedStorage:
        $ref: '#/definitions/IntegerOptional'
      DBInstanceClass:
        $ref: '#/definitions/String'
      DBSecurityGroups:
        $ref: '#/definitions/DBSecurityGroupNameList'
      VpcSecurityGroupIds:
        $ref: '#/definitions/VpcSecurityGroupIdList'
      ApplyImmediately:
        $ref: '#/definitions/Boolean'
      MasterUserPassword:
        $ref: '#/definitions/String'
      DBParameterGroupName:
        $ref: '#/definitions/String'
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
      PreferredMaintenanceWindow:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      EngineVersion:
        $ref: '#/definitions/String'
      AllowMajorVersionUpgrade:
        $ref: '#/definitions/Boolean'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      NewDBInstanceIdentifier:
        $ref: '#/definitions/String'
  ModifyDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
      - Parameters
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      Parameters:
        $ref: '#/definitions/ParametersList'
  ModifyDBSubnetGroupMessage:
    type: object
    required:
      - DBSubnetGroupName
      - SubnetIds
    properties:
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      DBSubnetGroupDescription:
        $ref: '#/definitions/String'
      SubnetIds:
        $ref: '#/definitions/SubnetIdentifierList'
  ModifyEventSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
      SnsTopicArn:
        $ref: '#/definitions/String'
      SourceType:
        $ref: '#/definitions/String'
      EventCategories:
        $ref: '#/definitions/EventCategoriesList'
      Enabled:
        $ref: '#/definitions/BooleanOptional'
  OptionConfigurationList:
    type: array
    items:
      $ref: '#/definitions/OptionConfiguration'
  OptionNamesList:
    type: array
    items:
      $ref: '#/definitions/String'
  ModifyOptionGroupMessage:
    type: object
    required:
      - OptionGroupName
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
      OptionsToInclude:
        $ref: '#/definitions/OptionConfigurationList'
      OptionsToRemove:
        $ref: '#/definitions/OptionNamesList'
      ApplyImmediately:
        $ref: '#/definitions/Boolean'
  OptionSettingConfigurationList:
    type: array
    items:
      $ref: '#/definitions/OptionSetting'
  Option:
    type: object
    properties:
      OptionName:
        $ref: '#/definitions/String'
      OptionDescription:
        $ref: '#/definitions/String'
      Persistent:
        $ref: '#/definitions/Boolean'
      Permanent:
        $ref: '#/definitions/Boolean'
      Port:
        $ref: '#/definitions/IntegerOptional'
      OptionSettings:
        $ref: '#/definitions/OptionSettingConfigurationList'
      DBSecurityGroupMemberships:
        $ref: '#/definitions/DBSecurityGroupMembershipList'
      VpcSecurityGroupMemberships:
        $ref: '#/definitions/VpcSecurityGroupMembershipList'
  OptionSettingsList:
    type: array
    items:
      $ref: '#/definitions/OptionSetting'
  OptionsList:
    type: array
    items:
      $ref: '#/definitions/Option'
  OptionGroupMembership:
    type: object
    properties:
      OptionGroupName:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
  OptionsDependedOn:
    type: array
    items:
      $ref: '#/definitions/String'
  OptionGroupOptionSettingsList:
    type: array
    items:
      $ref: '#/definitions/OptionGroupOptionSetting'
  OptionGroupOption:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
      EngineName:
        $ref: '#/definitions/String'
      MajorEngineVersion:
        $ref: '#/definitions/String'
      MinimumRequiredMinorEngineVersion:
        $ref: '#/definitions/String'
      PortRequired:
        $ref: '#/definitions/Boolean'
      DefaultPort:
        $ref: '#/definitions/IntegerOptional'
      OptionsDependedOn:
        $ref: '#/definitions/OptionsDependedOn'
      Persistent:
        $ref: '#/definitions/Boolean'
      Permanent:
        $ref: '#/definitions/Boolean'
      OptionGroupOptionSettings:
        $ref: '#/definitions/OptionGroupOptionSettingsList'
  OptionGroupOptionSetting:
    type: object
    properties:
      SettingName:
        $ref: '#/definitions/String'
      SettingDescription:
        $ref: '#/definitions/String'
      DefaultValue:
        $ref: '#/definitions/String'
      ApplyType:
        $ref: '#/definitions/String'
      AllowedValues:
        $ref: '#/definitions/String'
      IsModifiable:
        $ref: '#/definitions/Boolean'
  OptionGroupOptionsList:
    type: array
    items:
      $ref: '#/definitions/OptionGroupOption'
  OptionGroupsList:
    type: array
    items:
      $ref: '#/definitions/OptionGroup'
  OptionSetting:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
      Value:
        $ref: '#/definitions/String'
      DefaultValue:
        $ref: '#/definitions/String'
      Description:
        $ref: '#/definitions/String'
      ApplyType:
        $ref: '#/definitions/String'
      DataType:
        $ref: '#/definitions/String'
      AllowedValues:
        $ref: '#/definitions/String'
      IsModifiable:
        $ref: '#/definitions/Boolean'
      IsCollection:
        $ref: '#/definitions/Boolean'
  OrderableDBInstanceOption:
    type: object
    properties:
      Engine:
        $ref: '#/definitions/String'
      EngineVersion:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      LicenseModel:
        $ref: '#/definitions/String'
      AvailabilityZones:
        $ref: '#/definitions/AvailabilityZoneList'
      MultiAZCapable:
        $ref: '#/definitions/Boolean'
      ReadReplicaCapable:
        $ref: '#/definitions/Boolean'
      Vpc:
        $ref: '#/definitions/Boolean'
  OrderableDBInstanceOptionsList:
    type: array
    items:
      $ref: '#/definitions/OrderableDBInstanceOption'
  PromoteReadReplicaMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      BackupRetentionPeriod:
        $ref: '#/definitions/IntegerOptional'
      PreferredBackupWindow:
        $ref: '#/definitions/String'
  PurchaseReservedDBInstancesOfferingMessage:
    type: object
    required:
      - ReservedDBInstancesOfferingId
    properties:
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
      ReservedDBInstanceId:
        $ref: '#/definitions/String'
      DBInstanceCount:
        $ref: '#/definitions/IntegerOptional'
      Tags:
        $ref: '#/definitions/TagList'
  ReservedDBInstance:
    type: object
    properties:
      ReservedDBInstanceId:
        $ref: '#/definitions/String'
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      StartTime:
        $ref: '#/definitions/TStamp'
      Duration:
        $ref: '#/definitions/Integer'
      FixedPrice:
        $ref: '#/definitions/Double'
      UsagePrice:
        $ref: '#/definitions/Double'
      CurrencyCode:
        $ref: '#/definitions/String'
      DBInstanceCount:
        $ref: '#/definitions/Integer'
      ProductDescription:
        $ref: '#/definitions/String'
      OfferingType:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/Boolean'
      State:
        $ref: '#/definitions/String'
      RecurringCharges:
        $ref: '#/definitions/RecurringChargeList'
  RebootDBInstanceMessage:
    type: object
    required:
      - DBInstanceIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      ForceFailover:
        $ref: '#/definitions/BooleanOptional'
  RecurringCharge:
    type: object
    properties:
      RecurringChargeAmount:
        $ref: '#/definitions/Double'
      RecurringChargeFrequency:
        $ref: '#/definitions/String'
  RecurringChargeList:
    type: array
    items:
      $ref: '#/definitions/RecurringCharge'
  RemoveSourceIdentifierFromSubscriptionMessage:
    type: object
    required:
      - SubscriptionName
      - SourceIdentifier
    properties:
      SubscriptionName:
        $ref: '#/definitions/String'
      SourceIdentifier:
        $ref: '#/definitions/String'
  RemoveTagsFromResourceMessage:
    type: object
    required:
      - ResourceName
      - TagKeys
    properties:
      ResourceName:
        $ref: '#/definitions/String'
      TagKeys:
        $ref: '#/definitions/KeyList'
  ReservedDBInstanceList:
    type: array
    items:
      $ref: '#/definitions/ReservedDBInstance'
  ReservedDBInstancesOffering:
    type: object
    properties:
      ReservedDBInstancesOfferingId:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Duration:
        $ref: '#/definitions/Integer'
      FixedPrice:
        $ref: '#/definitions/Double'
      UsagePrice:
        $ref: '#/definitions/Double'
      CurrencyCode:
        $ref: '#/definitions/String'
      ProductDescription:
        $ref: '#/definitions/String'
      OfferingType:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/Boolean'
      RecurringCharges:
        $ref: '#/definitions/RecurringChargeList'
  ReservedDBInstancesOfferingList:
    type: array
    items:
      $ref: '#/definitions/ReservedDBInstancesOffering'
  ResetDBParameterGroupMessage:
    type: object
    required:
      - DBParameterGroupName
    properties:
      DBParameterGroupName:
        $ref: '#/definitions/String'
      ResetAllParameters:
        $ref: '#/definitions/Boolean'
      Parameters:
        $ref: '#/definitions/ParametersList'
  RestoreDBInstanceFromDBSnapshotMessage:
    type: object
    required:
      - DBInstanceIdentifier
      - DBSnapshotIdentifier
    properties:
      DBInstanceIdentifier:
        $ref: '#/definitions/String'
      DBSnapshotIdentifier:
        $ref: '#/definitions/String'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      LicenseModel:
        $ref: '#/definitions/String'
      DBName:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  RestoreDBInstanceToPointInTimeMessage:
    type: object
    required:
      - SourceDBInstanceIdentifier
      - TargetDBInstanceIdentifier
    properties:
      SourceDBInstanceIdentifier:
        $ref: '#/definitions/String'
      TargetDBInstanceIdentifier:
        $ref: '#/definitions/String'
      RestoreTime:
        $ref: '#/definitions/TStamp'
      UseLatestRestorableTime:
        $ref: '#/definitions/Boolean'
      DBInstanceClass:
        $ref: '#/definitions/String'
      Port:
        $ref: '#/definitions/IntegerOptional'
      AvailabilityZone:
        $ref: '#/definitions/String'
      DBSubnetGroupName:
        $ref: '#/definitions/String'
      MultiAZ:
        $ref: '#/definitions/BooleanOptional'
      PubliclyAccessible:
        $ref: '#/definitions/BooleanOptional'
      AutoMinorVersionUpgrade:
        $ref: '#/definitions/BooleanOptional'
      LicenseModel:
        $ref: '#/definitions/String'
      DBName:
        $ref: '#/definitions/String'
      Engine:
        $ref: '#/definitions/String'
      Iops:
        $ref: '#/definitions/IntegerOptional'
      OptionGroupName:
        $ref: '#/definitions/String'
      Tags:
        $ref: '#/definitions/TagList'
  RevokeDBSecurityGroupIngressMessage:
    type: object
    required:
      - DBSecurityGroupName
    properties:
      DBSecurityGroupName:
        $ref: '#/definitions/String'
      CIDRIP:
        $ref: '#/definitions/String'
      EC2SecurityGroupName:
        $ref: '#/definitions/String'
      EC2SecurityGroupId:
        $ref: '#/definitions/String'
      EC2SecurityGroupOwnerId:
        $ref: '#/definitions/String'
  Subnet:
    type: object
    properties:
      SubnetIdentifier:
        $ref: '#/definitions/String'
      SubnetAvailabilityZone:
        $ref: '#/definitions/AvailabilityZone'
      SubnetStatus:
        $ref: '#/definitions/String'
  VpcSecurityGroupMembership:
    type: object
    properties:
      VpcSecurityGroupId:
        $ref: '#/definitions/String'
      Status:
        $ref: '#/definitions/String'
