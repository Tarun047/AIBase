swagger: '2.0'
info:
  version: '2019-12-02'
  x-release: v4
  title: EC2 Image Builder
  description: 'EC2 Image Builder is a fully managed AWS service that makes it easier to automate the creation, management, and deployment of customized, secure, and up-to-date “golden” server images that are pre-installed and pre-configured with software and settings to meet specific IT standards.'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: imagebuilder
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/imagebuilder-2019-12-02.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/imagebuilder/'
host: imagebuilder.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://imagebuilder.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The imagebuilder multi-region endpoint
  - url: 'https://imagebuilder.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The imagebuilder multi-region endpoint
  - url: 'http://imagebuilder.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The imagebuilder endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://imagebuilder.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The imagebuilder endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /CancelImageCreation:
    put:
      operationId: CancelImageCreation
      description: CancelImageCreation cancels the creation of Image. This operation can only be used on images in a non-terminal state.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelImageCreationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imageBuildVersionArn
              - clientToken
            properties:
              imageBuildVersionArn:
                description: The Amazon Resource Name (ARN) of the image whose creation you want to cancel.
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
              clientToken:
                description: The idempotency token used to make this request idempotent.
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateComponent:
    put:
      operationId: CreateComponent
      description: 'Creates a new component that can be used to build, validate, test, and assess your image.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: InvalidVersionNumberException
          schema:
            $ref: '#/definitions/InvalidVersionNumberException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '489':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - semanticVersion
              - platform
              - clientToken
            properties:
              name:
                description: The name of the component.
                type: string
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
              semanticVersion:
                description: 'The semantic version of the component. This version follows the semantic version syntax. For example, major.minor.patch. This could be versioned like software (2.0.1) or like a date (2019.12.01).'
                type: string
                pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
              description:
                description: The description of the component. Describes the contents of the component.
                type: string
                minLength: 1
                maxLength: 1024
              changeDescription:
                description: 'The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.'
                type: string
                minLength: 1
                maxLength: 1024
              platform:
                description: The platform of the component.
                type: string
                enum:
                  - Windows
                  - Linux
              data:
                description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.
                type: string
                minLength: 1
                maxLength: 16000
              uri:
                description: 'The uri of the component. Must be an S3 URL and the requester must have permission to access the S3 bucket. If you use S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.'
                type: string
              kmsKeyId:
                description: The ID of the KMS key that should be used to encrypt this component.
                type: string
                minLength: 1
                maxLength: 1024
              tags:
                description: The tags of the component.
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              clientToken:
                description: The idempotency token of the component.
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateDistributionConfiguration:
    put:
      operationId: CreateDistributionConfiguration
      description: 'Creates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '489':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - distributions
              - clientToken
            properties:
              name:
                description: ' The name of the distribution configuration. '
                type: string
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
              description:
                description: ' The description of the distribution configuration. '
                type: string
                minLength: 1
                maxLength: 1024
              distributions:
                description: ' The distributions of the distribution configuration. '
                type: array
                items:
                  $ref: '#/definitions/Distribution'
              tags:
                description: ' The tags of the distribution configuration. '
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              clientToken:
                description: ' The idempotency token of the distribution configuration. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateImage:
    put:
      operationId: CreateImage
      description: ' Creates a new image. This request will create a new image along with all of the configured output resources defined in the distribution configuration. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImageResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imageRecipeArn
              - infrastructureConfigurationArn
              - clientToken
            properties:
              imageRecipeArn:
                description: ' The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
              distributionConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):distribution-configuration/[a-z0-9-_]+$'
              infrastructureConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'
              imageTestsConfiguration:
                description: Image tests configuration.
                type: object
                properties:
                  imageTestsEnabled:
                    $ref: '#/definitions/NullableBoolean'
                    description: Defines if tests should be executed when building this image.
                  timeoutMinutes:
                    $ref: '#/definitions/ImageTestsTimeoutMinutes'
                    description: The maximum time in minutes that tests are permitted to run.
              tags:
                description: ' The tags of the image. '
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              clientToken:
                description: ' The idempotency token used to make this request idempotent. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateImagePipeline:
    put:
      operationId: CreateImagePipeline
      description: ' Creates a new image pipeline. Image pipelines enable you to automate the creation and distribution of images. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - imageRecipeArn
              - infrastructureConfigurationArn
              - clientToken
            properties:
              name:
                description: ' The name of the image pipeline. '
                type: string
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
              description:
                description: ' The description of the image pipeline. '
                type: string
                minLength: 1
                maxLength: 1024
              imageRecipeArn:
                description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
              infrastructureConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'
              distributionConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):distribution-configuration/[a-z0-9-_]+$'
              imageTestsConfiguration:
                description: Image tests configuration.
                type: object
                properties:
                  imageTestsEnabled:
                    $ref: '#/definitions/NullableBoolean'
                    description: Defines if tests should be executed when building this image.
                  timeoutMinutes:
                    $ref: '#/definitions/ImageTestsTimeoutMinutes'
                    description: The maximum time in minutes that tests are permitted to run.
              schedule:
                description: ' A schedule configures how often and when a pipeline will automatically create a new image. '
                type: object
                properties:
                  scheduleExpression:
                    $ref: '#/definitions/NonEmptyString'
                    description: ' The expression determines how often EC2 Image Builder evaluates your <code>pipelineExecutionStartCondition</code>.'
                  pipelineExecutionStartCondition:
                    $ref: '#/definitions/PipelineExecutionStartCondition'
                    description: ' The condition configures when the pipeline should trigger a new image build. When the <code>pipelineExecutionStartCondition</code> is set to <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, EC2 Image Builder will build a new image only when there are known changes pending. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will build a new image every time the CRON expression matches the current time.'
              status:
                description: ' The status of the image pipeline. '
                type: string
                enum:
                  - DISABLED
                  - ENABLED
              tags:
                description: ' The tags of the image pipeline. '
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              clientToken:
                description: ' The idempotency token used to make this request idempotent. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateImageRecipe:
    put:
      operationId: CreateImageRecipe
      description: ' Creates a new image recipe. Image recipes define how images are configured, tested, and assessed. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateImageRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: InvalidVersionNumberException
          schema:
            $ref: '#/definitions/InvalidVersionNumberException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '489':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - semanticVersion
              - components
              - parentImage
              - clientToken
            properties:
              name:
                description: ' The name of the image recipe. '
                type: string
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
              description:
                description: ' The description of the image recipe. '
                type: string
                minLength: 1
                maxLength: 1024
              semanticVersion:
                description: ' The semantic version of the image recipe. '
                type: string
                pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
              components:
                description: ' The components of the image recipe. '
                type: array
                items:
                  $ref: '#/definitions/ComponentConfiguration'
                minItems: 1
              parentImage:
                description: ' The parent image of the image recipe. '
                type: string
                minLength: 1
                maxLength: 1024
              blockDeviceMappings:
                description: ' The block device mappings of the image recipe. '
                type: array
                items:
                  $ref: '#/definitions/InstanceBlockDeviceMapping'
              tags:
                description: ' The tags of the image recipe. '
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              clientToken:
                description: ' The idempotency token used to make this request idempotent. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /CreateInfrastructureConfiguration:
    put:
      operationId: CreateInfrastructureConfiguration
      description: ' Creates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - instanceProfileName
              - clientToken
            properties:
              name:
                description: ' The name of the infrastructure configuration. '
                type: string
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
              description:
                description: ' The description of the infrastructure configuration. '
                type: string
                minLength: 1
                maxLength: 1024
              instanceTypes:
                description: ' The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability. '
                type: array
                items:
                  $ref: '#/definitions/InstanceType'
              instanceProfileName:
                description: ' The instance profile to associate with the instance used to customize your EC2 AMI. '
                type: string
                minLength: 1
                maxLength: 1024
              securityGroupIds:
                description: ' The security group IDs to associate with the instance used to customize your EC2 AMI. '
                type: array
                items:
                  $ref: '#/definitions/NonEmptyString'
              subnetId:
                description: ' The subnet ID in which to place the instance used to customize your EC2 AMI. '
                type: string
                minLength: 1
                maxLength: 1024
              logging:
                description: Logging configuration defines where Image Builder uploads your logs.
                type: object
                properties:
                  s3Logs:
                    $ref: '#/definitions/S3Logs'
                    description: The Amazon S3 logging configuration.
              keyPair:
                description: ' The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image. '
                type: string
                minLength: 1
                maxLength: 1024
              terminateInstanceOnFailure:
                description: ' The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails. '
                type: boolean
              snsTopicArn:
                description: ' The SNS topic on which to send image build events. '
                type: string
                pattern: '^arn:aws[^:]*:sns:[^:]+:\d{12}:[a-zA-Z0-9-_]{1,256}$'
              tags:
                description: ' The tags of the infrastructure configuration. '
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              clientToken:
                description: ' The idempotency token used to make this request idempotent. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/DeleteComponent#componentBuildVersionArn':
    delete:
      operationId: DeleteComponent
      description: ' Deletes a component build version. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
      parameters:
        - name: componentBuildVersionArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the component build version to delete. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/DeleteDistributionConfiguration#distributionConfigurationArn':
    delete:
      operationId: DeleteDistributionConfiguration
      description: ' Deletes a distribution configuration. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
      parameters:
        - name: distributionConfigurationArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the distribution configuration to delete. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):distribution-configuration/[a-z0-9-_]+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/DeleteImage#imageBuildVersionArn':
    delete:
      operationId: DeleteImage
      description: ' Deletes an image. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImageResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
      parameters:
        - name: imageBuildVersionArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image to delete. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/DeleteImagePipeline#imagePipelineArn':
    delete:
      operationId: DeleteImagePipeline
      description: ' Deletes an image pipeline. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
      parameters:
        - name: imagePipelineArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image pipeline to delete. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-pipeline/[a-z0-9-_]+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/DeleteImageRecipe#imageRecipeArn':
    delete:
      operationId: DeleteImageRecipe
      description: ' Deletes an image recipe. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteImageRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
      parameters:
        - name: imageRecipeArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image recipe to delete. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/DeleteInfrastructureConfiguration#infrastructureConfigurationArn':
    delete:
      operationId: DeleteInfrastructureConfiguration
      description: ' Deletes an infrastructure configuration. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '486':
          description: ResourceDependencyException
          schema:
            $ref: '#/definitions/ResourceDependencyException'
      parameters:
        - name: infrastructureConfigurationArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the infrastructure configuration to delete. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetComponent#componentBuildVersionArn':
    get:
      operationId: GetComponent
      description: ' Gets a component object. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: componentBuildVersionArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the component that you want to retrieve. Regex requires "/\d+$" suffix.'
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetComponentPolicy#componentArn':
    get:
      operationId: GetComponentPolicy
      description: ' Gets a component policy. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetComponentPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: componentArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the component whose policy you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetDistributionConfiguration#distributionConfigurationArn':
    get:
      operationId: GetDistributionConfiguration
      description: ' Gets a distribution configuration. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: distributionConfigurationArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the distribution configuration that you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):distribution-configuration/[a-z0-9-_]+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetImage#imageBuildVersionArn':
    get:
      operationId: GetImage
      description: ' Gets an image. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImageResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: imageBuildVersionArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image that you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetImagePipeline#imagePipelineArn':
    get:
      operationId: GetImagePipeline
      description: ' Gets an image pipeline. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: imagePipelineArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image pipeline that you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-pipeline/[a-z0-9-_]+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetImagePolicy#imageArn':
    get:
      operationId: GetImagePolicy
      description: ' Gets an image policy. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImagePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: imageArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image whose policy you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetImageRecipe#imageRecipeArn':
    get:
      operationId: GetImageRecipe
      description: ' Gets an image recipe. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImageRecipeResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: imageRecipeArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image recipe that you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetImageRecipePolicy#imageRecipeArn':
    get:
      operationId: GetImageRecipePolicy
      description: ' Gets an image recipe policy. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetImageRecipePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: imageRecipeArn
          in: query
          required: true
          description: ' The Amazon Resource Name (ARN) of the image recipe whose policy you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/GetInfrastructureConfiguration#infrastructureConfigurationArn':
    get:
      operationId: GetInfrastructureConfiguration
      description: ' Gets an infrastructure configuration. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '485':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: infrastructureConfigurationArn
          in: query
          required: true
          description: 'The Amazon Resource Name (ARN) of the infrastructure configuration that you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ImportComponent:
    put:
      operationId: ImportComponent
      description: 'Imports a component and transforms its data into a component document. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ImportComponentResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: InvalidVersionNumberException
          schema:
            $ref: '#/definitions/InvalidVersionNumberException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '489':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
              - semanticVersion
              - type
              - format
              - platform
              - clientToken
            properties:
              name:
                description: ' The name of the component. '
                type: string
                pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
              semanticVersion:
                description: 'The semantic version of the component. This version follows the semantic version syntax. For example, major.minor.patch. This could be versioned like software (2.0.1) or like a date (2019.12.01).'
                type: string
                pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
              description:
                description: 'The description of the component. Describes the contents of the component. '
                type: string
                minLength: 1
                maxLength: 1024
              changeDescription:
                description: ' The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component. '
                type: string
                minLength: 1
                maxLength: 1024
              type:
                description: 'The type of the component denotes whether the component is used to build the image or only to test it. '
                type: string
                enum:
                  - BUILD
                  - TEST
              format:
                description: ' The format of the resource that you want to import as a component. '
                type: string
                enum:
                  - SHELL
              platform:
                description: ' The platform of the component. '
                type: string
                enum:
                  - Windows
                  - Linux
              data:
                description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.
                type: string
                minLength: 1
                maxLength: 1024
              uri:
                description: 'The uri of the component. Must be an S3 URL and the requester must have permission to access the S3 bucket. If you use S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component. '
                type: string
              kmsKeyId:
                description: ' The ID of the KMS key that should be used to encrypt this component. '
                type: string
                minLength: 1
                maxLength: 1024
              tags:
                description: ' The tags of the component. '
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
              clientToken:
                description: ' The idempotency token of the component. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListComponentBuildVersions:
    post:
      operationId: ListComponentBuildVersions
      description: ' Returns the list of component build versions for the specified semantic version. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComponentBuildVersionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - componentVersionArn
            properties:
              componentVersionArn:
                description: ' The component version Amazon Resource Name (ARN) whose versions you want to list. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/\d+\.\d+\.\d+$'
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListComponents:
    post:
      operationId: ListComponents
      description: 'Returns the list of component build versions for the specified semantic version. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListComponentsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              owner:
                description: ' The owner defines which components you want to list. By default, this request will only show components owned by your account. You can use this field to specify if you want to view components owned by yourself, by Amazon, or those components that have been shared with you by other customers. '
                type: string
                enum:
                  - Self
                  - Shared
                  - Amazon
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListDistributionConfigurations:
    post:
      operationId: ListDistributionConfigurations
      description: ' Returns a list of distribution configurations. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDistributionConfigurationsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListImageBuildVersions:
    post:
      operationId: ListImageBuildVersions
      description: ' Returns a list of distribution configurations. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImageBuildVersionsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imageVersionArn
            properties:
              imageVersionArn:
                description: ' The Amazon Resource Name (ARN) of the image whose build versions you want to retrieve. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+$'
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListImagePipelineImages:
    post:
      operationId: ListImagePipelineImages
      description: ' Returns a list of images created by the specified pipeline. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImagePipelineImagesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imagePipelineArn
            properties:
              imagePipelineArn:
                description: ' The Amazon Resource Name (ARN) of the image pipeline whose images you want to view. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-pipeline/[a-z0-9-_]+$'
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListImagePipelines:
    post:
      operationId: ListImagePipelines
      description: 'Returns a list of image pipelines. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImagePipelinesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListImageRecipes:
    post:
      operationId: ListImageRecipes
      description: ' Returns a list of image recipes. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImageRecipesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              owner:
                description: ' The owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers. '
                type: string
                enum:
                  - Self
                  - Shared
                  - Amazon
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListImages:
    post:
      operationId: ListImages
      description: ' Returns the list of image build versions for the specified semantic version. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListImagesResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              owner:
                description: ' The owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers. '
                type: string
                enum:
                  - Self
                  - Shared
                  - Amazon
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListInfrastructureConfigurations:
    post:
      operationId: ListInfrastructureConfigurations
      description: ' Returns a list of infrastructure configurations. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListInfrastructureConfigurationsResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidPaginationTokenException
          schema:
            $ref: '#/definitions/InvalidPaginationTokenException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              filters:
                description: ' The filters. '
                type: array
                items:
                  $ref: '#/definitions/Filter'
                minItems: 1
                maxItems: 10
              maxResults:
                description: ' The maximum items to return in a request. '
                type: integer
                minimum: 1
                maximum: 25
              nextToken:
                description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
                type: string
                minLength: 1
                maxLength: 1024
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}':
    get:
      operationId: ListTagsForResource
      description: ' Returns the list of tags for the specified resource. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):(?:image-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|\d+)\.(?:x|\d+)\.(?:x|\d+))(?:/\d+)?)?$'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: ' Adds a tag to a resource. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the resource that you want to tag. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):(?:image-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|\d+)\.(?:x|\d+)\.(?:x|\d+))(?:/\d+)?)?$'
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - tags
            properties:
              tags:
                description: ' The tags to apply to the resource. '
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
  /PutComponentPolicy:
    put:
      operationId: PutComponentPolicy
      description: ' Applies a policy to a component. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutComponentPolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - componentArn
              - policy
            properties:
              componentArn:
                description: ' The Amazon Resource Name (ARN) of the component that this policy should be applied to. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
              policy:
                description: ' The policy to apply. '
                type: string
                minLength: 1
                maxLength: 1024
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /PutImagePolicy:
    put:
      operationId: PutImagePolicy
      description: ' Applies a policy to an image. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutImagePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imageArn
              - policy
            properties:
              imageArn:
                description: ' The Amazon Resource Name (ARN) of the image that this policy should be applied to. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
              policy:
                description: ' The policy to apply. '
                type: string
                minLength: 1
                maxLength: 1024
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /PutImageRecipePolicy:
    put:
      operationId: PutImageRecipePolicy
      description: ' Applies a policy to an image recipe. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutImageRecipePolicyResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imageRecipeArn
              - policy
            properties:
              imageRecipeArn:
                description: ' The Amazon Resource Name (ARN) of the image recipe that this policy should be applied to. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
              policy:
                description: ' The policy to apply. '
                type: string
                minLength: 1
                maxLength: 1024
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /StartImagePipelineExecution:
    put:
      operationId: StartImagePipelineExecution
      description: ' Manually triggers a pipeline to create an image. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartImagePipelineExecutionResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '486':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '487':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '488':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imagePipelineArn
              - clientToken
            properties:
              imagePipelineArn:
                description: ' The Amazon Resource Name (ARN) of the image pipeline that you want to manually invoke. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-pipeline/[a-z0-9-_]+$'
              clientToken:
                description: ' The idempotency token used to make this request idempotent. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resourceArn}#tagKeys':
    delete:
      operationId: UntagResource
      description: ' Removes a tag from a resource. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: ' The Amazon Resource Name (ARN) of the resource that you want to untag. '
          type: string
          pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):(?:image-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|\d+)\.(?:x|\d+)\.(?:x|\d+))(?:/\d+)?)?$'
        - name: tagKeys
          in: query
          required: true
          description: ' The tag keys to remove from the resource. '
          type: array
          items:
            type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /UpdateDistributionConfiguration:
    put:
      operationId: UpdateDistributionConfiguration
      description: ' Updates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDistributionConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '488':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - distributionConfigurationArn
              - distributions
              - clientToken
            properties:
              distributionConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the distribution configuration that you want to update. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):distribution-configuration/[a-z0-9-_]+$'
              description:
                description: ' The description of the distribution configuration. '
                type: string
                minLength: 1
                maxLength: 1024
              distributions:
                description: ' The distributions of the distribution configuration. '
                type: array
                items:
                  $ref: '#/definitions/Distribution'
              clientToken:
                description: ' The idempotency token of the distribution configuration. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /UpdateImagePipeline:
    put:
      operationId: UpdateImagePipeline
      description: ' Updates a new image pipeline. Image pipelines enable you to automate the creation and distribution of images. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateImagePipelineResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - imagePipelineArn
              - imageRecipeArn
              - infrastructureConfigurationArn
              - clientToken
            properties:
              imagePipelineArn:
                description: ' The Amazon Resource Name (ARN) of the image pipeline that you want to update. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-pipeline/[a-z0-9-_]+$'
              description:
                description: ' The description of the image pipeline. '
                type: string
                minLength: 1
                maxLength: 1024
              imageRecipeArn:
                description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images updated by this image pipeline. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
              infrastructureConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images updated by this image pipeline. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'
              distributionConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images updated by this image pipeline. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):distribution-configuration/[a-z0-9-_]+$'
              imageTestsConfiguration:
                description: Image tests configuration.
                type: object
                properties:
                  imageTestsEnabled:
                    $ref: '#/definitions/NullableBoolean'
                    description: Defines if tests should be executed when building this image.
                  timeoutMinutes:
                    $ref: '#/definitions/ImageTestsTimeoutMinutes'
                    description: The maximum time in minutes that tests are permitted to run.
              schedule:
                description: ' A schedule configures how often and when a pipeline will automatically create a new image. '
                type: object
                properties:
                  scheduleExpression:
                    $ref: '#/definitions/NonEmptyString'
                    description: ' The expression determines how often EC2 Image Builder evaluates your <code>pipelineExecutionStartCondition</code>.'
                  pipelineExecutionStartCondition:
                    $ref: '#/definitions/PipelineExecutionStartCondition'
                    description: ' The condition configures when the pipeline should trigger a new image build. When the <code>pipelineExecutionStartCondition</code> is set to <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, EC2 Image Builder will build a new image only when there are known changes pending. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will build a new image every time the CRON expression matches the current time.'
              status:
                description: ' The status of the image pipeline. '
                type: string
                enum:
                  - DISABLED
                  - ENABLED
              clientToken:
                description: ' The idempotency token used to make this request idempotent. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /UpdateInfrastructureConfiguration:
    put:
      operationId: UpdateInfrastructureConfiguration
      description: ' Updates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateInfrastructureConfigurationResponse'
        '480':
          description: ServiceException
          schema:
            $ref: '#/definitions/ServiceException'
        '481':
          description: ClientException
          schema:
            $ref: '#/definitions/ClientException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: IdempotentParameterMismatchException
          schema:
            $ref: '#/definitions/IdempotentParameterMismatchException'
        '485':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '486':
          description: CallRateLimitExceededException
          schema:
            $ref: '#/definitions/CallRateLimitExceededException'
        '487':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - infrastructureConfigurationArn
              - instanceProfileName
              - clientToken
            properties:
              infrastructureConfigurationArn:
                description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that you want to update. '
                type: string
                pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'
              description:
                description: ' The description of the infrastructure configuration. '
                type: string
                minLength: 1
                maxLength: 1024
              instanceTypes:
                description: ' The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability. '
                type: array
                items:
                  $ref: '#/definitions/InstanceType'
              instanceProfileName:
                description: ' The instance profile to associate with the instance used to customize your EC2 AMI. '
                type: string
                minLength: 1
                maxLength: 1024
              securityGroupIds:
                description: ' The security group IDs to associate with the instance used to customize your EC2 AMI. '
                type: array
                items:
                  $ref: '#/definitions/NonEmptyString'
              subnetId:
                description: ' The subnet ID to place the instance used to customize your EC2 AMI in. '
                type: string
                minLength: 1
                maxLength: 1024
              logging:
                description: Logging configuration defines where Image Builder uploads your logs.
                type: object
                properties:
                  s3Logs:
                    $ref: '#/definitions/S3Logs'
                    description: The Amazon S3 logging configuration.
              keyPair:
                description: ' The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image. '
                type: string
                minLength: 1
                maxLength: 1024
              terminateInstanceOnFailure:
                description: ' The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails. '
                type: boolean
              snsTopicArn:
                description: ' The SNS topic on which to send image build events. '
                type: string
                pattern: '^arn:aws[^:]*:sns:[^:]+:\d{12}:[a-zA-Z0-9-_]{1,256}$'
              clientToken:
                description: ' The idempotency token used to make this request idempotent. '
                type: string
                minLength: 1
                maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CancelImageCreationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: The request ID that uniquely identifies this request.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token used to make this request idempotent.
      imageBuildVersionArn:
        $ref: '#/definitions/ImageBuildVersionArn'
        description: The Amazon Resource Name (ARN) of the image whose creation has been cancelled.
  ServiceException: {}
  ClientException: {}
  ServiceUnavailableException: {}
  InvalidRequestException: {}
  IdempotentParameterMismatchException: {}
  ForbiddenException: {}
  CallRateLimitExceededException: {}
  ResourceInUseException: {}
  CreateComponentResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: The request ID that uniquely identifies this request.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token used to make this request idempotent.
      componentBuildVersionArn:
        $ref: '#/definitions/ComponentBuildVersionArn'
        description: The Amazon Resource Name (ARN) of the component that was created by this request.
  TagValue:
    type: string
    maxLength: 256
  InvalidVersionNumberException: {}
  InvalidParameterCombinationException: {}
  CreateDistributionConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      distributionConfigurationArn:
        $ref: '#/definitions/DistributionConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the distribution configuration that was created by this request. '
  Distribution:
    type: object
    required:
      - region
    properties:
      region:
        $ref: '#/definitions/NonEmptyString'
        description: ' The target Region. '
      amiDistributionConfiguration:
        $ref: '#/definitions/AmiDistributionConfiguration'
        description: ' The specific AMI settings (for example, launch permissions, AMI tags). '
      licenseConfigurationArns:
        $ref: '#/definitions/ArnList'
        description: ' The License Manager Configuration to associate with the AMI in the specified Region.'
    description: ' Defines the settings for a specific Region. '
  ResourceAlreadyExistsException: {}
  CreateImageResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      imageBuildVersionArn:
        $ref: '#/definitions/ImageBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the image that was created by this request. '
  NullableBoolean:
    type: boolean
  ImageTestsTimeoutMinutes:
    type: integer
    minimum: 60
    maximum: 1440
  CreateImagePipelineResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      imagePipelineArn:
        $ref: '#/definitions/ImagePipelineArn'
        description: ' The Amazon Resource Name (ARN) of the image pipeline that was created by this request. '
  NonEmptyString:
    type: string
    minLength: 1
    maxLength: 1024
  PipelineExecutionStartCondition:
    type: string
    enum:
      - EXPRESSION_MATCH_ONLY
      - EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE
  CreateImageRecipeResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      imageRecipeArn:
        $ref: '#/definitions/ImageRecipeArn'
        description: ' The Amazon Resource Name (ARN) of the image recipe that was created by this request. '
  ComponentConfiguration:
    type: object
    required:
      - componentArn
    properties:
      componentArn:
        $ref: '#/definitions/ComponentVersionArnOrBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the component. '
    description: ' Configuration details of the component. '
  InstanceBlockDeviceMapping:
    type: object
    properties:
      deviceName:
        $ref: '#/definitions/NonEmptyString'
        description: The device to which these mappings apply.
      ebs:
        $ref: '#/definitions/EbsInstanceBlockDeviceSpecification'
        description: Use to manage Amazon EBS-specific configuration for this mapping.
      virtualName:
        $ref: '#/definitions/NonEmptyString'
        description: Use to manage instance ephemeral devices.
      noDevice:
        $ref: '#/definitions/EmptyString'
        description: Use to remove a mapping from the parent image.
    description: Defines block device mappings for the instance used to configure your image.
  CreateInfrastructureConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      infrastructureConfigurationArn:
        $ref: '#/definitions/InfrastructureConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request. '
  InstanceType:
    type: string
  S3Logs:
    type: object
    properties:
      s3BucketName:
        $ref: '#/definitions/NonEmptyString'
        description: The Amazon S3 bucket in which to store the logs.
      s3KeyPrefix:
        $ref: '#/definitions/NonEmptyString'
        description: The Amazon S3 path in which to store the logs.
    description: Amazon S3 logging configuration.
  DeleteComponentResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      componentBuildVersionArn:
        $ref: '#/definitions/ComponentBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the component build version that was deleted. '
  ResourceDependencyException: {}
  DeleteDistributionConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      distributionConfigurationArn:
        $ref: '#/definitions/DistributionConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the distribution configuration that was deleted. '
  DeleteImageResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageBuildVersionArn:
        $ref: '#/definitions/ImageBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the image that was deleted. '
  DeleteImagePipelineResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imagePipelineArn:
        $ref: '#/definitions/ImagePipelineArn'
        description: ' The Amazon Resource Name (ARN) of the image pipeline that was deleted. '
  DeleteImageRecipeResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageRecipeArn:
        $ref: '#/definitions/ImageRecipeArn'
        description: ' The Amazon Resource Name (ARN) of the image recipe that was deleted. '
  DeleteInfrastructureConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      infrastructureConfigurationArn:
        $ref: '#/definitions/InfrastructureConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that was deleted. '
  GetComponentResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      component:
        $ref: '#/definitions/Component'
        description: ' The component object associated with the specified ARN. '
  GetComponentPolicyResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      policy:
        $ref: '#/definitions/NonEmptyString'
        description: ' The component policy. '
  ResourceNotFoundException: {}
  GetDistributionConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      distributionConfiguration:
        $ref: '#/definitions/DistributionConfiguration'
        description: ' The distribution configuration object. '
  GetImageResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      image:
        $ref: '#/definitions/Image'
        description: ' The image object. '
  GetImagePipelineResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imagePipeline:
        $ref: '#/definitions/ImagePipeline'
        description: ' The image pipeline object. '
  GetImagePolicyResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      policy:
        $ref: '#/definitions/NonEmptyString'
        description: ' The image policy object. '
  GetImageRecipeResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageRecipe:
        $ref: '#/definitions/ImageRecipe'
        description: ' The image recipe object. '
  GetImageRecipePolicyResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      policy:
        $ref: '#/definitions/NonEmptyString'
        description: ' The image recipe policy object. '
  GetInfrastructureConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      infrastructureConfiguration:
        $ref: '#/definitions/InfrastructureConfiguration'
        description: ' The infrastructure configuration object. '
    description: 'GetInfrastructureConfiguration response object. '
  ImportComponentResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      componentBuildVersionArn:
        $ref: '#/definitions/ComponentBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the imported component. '
  ListComponentBuildVersionsResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      componentSummaryList:
        $ref: '#/definitions/ComponentSummaryList'
        description: ' The list of component summaries for the specified semantic version. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  InvalidPaginationTokenException: {}
  ListComponentsResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      componentVersionList:
        $ref: '#/definitions/ComponentVersionList'
        description: ' The list of component semantic versions. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  Filter:
    type: object
    properties:
      name:
        $ref: '#/definitions/FilterName'
        description: ' The name of the filter. Filter names are case-sensitive. '
      values:
        $ref: '#/definitions/FilterValues'
        description: ' The filter values. Filter values are case-sensitive. '
    description: ' A filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs. '
  ListDistributionConfigurationsResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      distributionConfigurationSummaryList:
        $ref: '#/definitions/DistributionConfigurationSummaryList'
        description: ' The list of distributions. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  ListImageBuildVersionsResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageSummaryList:
        $ref: '#/definitions/ImageSummaryList'
        description: ' The list of image build versions. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  ListImagePipelineImagesResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageSummaryList:
        $ref: '#/definitions/ImageSummaryList'
        description: ' The list of images built by this pipeline. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  ListImagePipelinesResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imagePipelineList:
        $ref: '#/definitions/ImagePipelineList'
        description: ' The list of image pipelines. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  ListImageRecipesResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageRecipeSummaryList:
        $ref: '#/definitions/ImageRecipeSummaryList'
        description: ' The list of image pipelines. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  ListImagesResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageVersionList:
        $ref: '#/definitions/ImageVersionList'
        description: ' The list of image semantic versions. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects. '
  ListInfrastructureConfigurationsResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      infrastructureConfigurationSummaryList:
        $ref: '#/definitions/InfrastructureConfigurationSummaryList'
        description: ' The list of infrastructure configurations. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.'
  ListTagsForResourceResponse:
    type: object
    properties:
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags for the specified resource. '
  InvalidParameterException: {}
  PutComponentPolicyResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      componentArn:
        $ref: '#/definitions/ComponentBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the component that this policy was applied to. '
  InvalidParameterValueException: {}
  PutImagePolicyResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageArn:
        $ref: '#/definitions/ImageBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the image that this policy was applied to. '
  PutImageRecipePolicyResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      imageRecipeArn:
        $ref: '#/definitions/ImageRecipeArn'
        description: ' The Amazon Resource Name (ARN) of the image recipe that this policy was applied to. '
  StartImagePipelineExecutionResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent.'
      imageBuildVersionArn:
        $ref: '#/definitions/ImageBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the image that was created by this request.'
  TagResourceResponse:
    type: object
    properties: {}
  UntagResourceResponse:
    type: object
    properties: {}
  TagKey:
    type: string
    pattern: '^(?!aws:)[a-zA-Z+-=._:/]+$'
    minLength: 1
    maxLength: 128
  UpdateDistributionConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      distributionConfigurationArn:
        $ref: '#/definitions/DistributionConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the distribution configuration that was updated by this request. '
  UpdateImagePipelineResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      imagePipelineArn:
        $ref: '#/definitions/ImagePipelineArn'
        description: ' The Amazon Resource Name (ARN) of the image pipeline that was updated by this request. '
  UpdateInfrastructureConfigurationResponse:
    type: object
    properties:
      requestId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The request ID that uniquely identifies this request. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
      infrastructureConfigurationArn:
        $ref: '#/definitions/InfrastructureConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that was updated by this request. '
  AccountList:
    type: array
    items:
      $ref: '#/definitions/NonEmptyString'
  ImageState:
    type: object
    properties:
      status:
        $ref: '#/definitions/ImageStatus'
        description: ' The status of the image. '
      reason:
        $ref: '#/definitions/NonEmptyString'
        description: ' The reason for the image''s status. '
    description: ' Image state shows the image status and the reason for that status. '
  Ami:
    type: object
    properties:
      region:
        $ref: '#/definitions/NonEmptyString'
        description: ' The AWS Region of the EC2 AMI. '
      image:
        $ref: '#/definitions/NonEmptyString'
        description: ' The AMI ID of the EC2 AMI. '
      name:
        $ref: '#/definitions/NonEmptyString'
        description: ' The name of the EC2 AMI. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the EC2 AMI. '
      state:
        $ref: '#/definitions/ImageState'
    description: ' Details of an EC2 AMI. '
  AmiNameString:
    type: string
    pattern: '^[-_A-Za-z0-9{][-_A-Za-z0-9\s:{}]+[-_A-Za-z0-9}]$'
    minLength: 1
    maxLength: 127
  TagMap:
    type: object
    minProperties: 1
    maxProperties: 50
    additionalProperties:
      $ref: '#/definitions/TagValue'
  LaunchPermissionConfiguration:
    type: object
    properties:
      userIds:
        $ref: '#/definitions/AccountList'
        description: ' The AWS account ID. '
      userGroups:
        $ref: '#/definitions/StringList'
        description: 'The name of the group. '
    description: 'Describes the configuration for a launch permission. The launch permission modification request is sent to the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html">EC2 ModifyImageAttribute</a> API on behalf of the user for each Region they have selected to distribute the AMI.'
  AmiDistributionConfiguration:
    type: object
    properties:
      name:
        $ref: '#/definitions/AmiNameString'
        description: ' The name of the distribution configuration. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the distribution configuration. '
      amiTags:
        $ref: '#/definitions/TagMap'
        description: ' The tags to apply to AMIs distributed to this Region. '
      launchPermission:
        $ref: '#/definitions/LaunchPermissionConfiguration'
        description: ' Launch permissions can be used to configure which AWS accounts can use the AMI to launch instances. '
    description: ' Define and configure the output AMIs of the pipeline. '
  AmiList:
    type: array
    items:
      $ref: '#/definitions/Ami'
  Arn:
    type: string
  ArnList:
    type: array
    items:
      $ref: '#/definitions/Arn'
  ImageBuildVersionArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
  ClientToken:
    type: string
    minLength: 1
    maxLength: 36
  CancelImageCreationRequest:
    type: object
    required:
      - imageBuildVersionArn
      - clientToken
    properties:
      imageBuildVersionArn:
        $ref: '#/definitions/ImageBuildVersionArn'
        description: The Amazon Resource Name (ARN) of the image whose creation you want to cancel.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token used to make this request idempotent.
  ImageBuilderArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):(?:image-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|\d+)\.(?:x|\d+)\.(?:x|\d+))(?:/\d+)?)?$'
  ResourceName:
    type: string
    pattern: '^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$'
  VersionNumber:
    type: string
    pattern: '^[0-9]+\.[0-9]+\.[0-9]+$'
  ComponentType:
    type: string
    enum:
      - BUILD
      - TEST
  Platform:
    type: string
    enum:
      - Windows
      - Linux
  ComponentData:
    type: string
  DateTime:
    type: string
  Component:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the component.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the component.
      version:
        $ref: '#/definitions/VersionNumber'
        description: The version of the component.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the component.
      changeDescription:
        $ref: '#/definitions/NonEmptyString'
        description: The change description of the component.
      type:
        $ref: '#/definitions/ComponentType'
        description: The type of the component denotes whether the component is used to build the image or only to test it.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the component.
      owner:
        $ref: '#/definitions/NonEmptyString'
        description: The owner of the component.
      data:
        $ref: '#/definitions/ComponentData'
        description: The data of the component.
      kmsKeyId:
        $ref: '#/definitions/NonEmptyString'
        description: The KMS key identifier used to encrypt the component.
      encrypted:
        $ref: '#/definitions/NullableBoolean'
        description: The encryption status of the component.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date that the component was created.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags associated with the component.
    description: A detailed view of a component.
  ComponentBuildVersionArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/\d+\.\d+\.\d+/\d+$'
  ComponentVersionArnOrBuildVersionArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/(?:(?:(\d+|x)\.(\d+|x)\.(\d+|x))|(?:\d+\.\d+\.\d+/\d+))$'
  ComponentConfigurationList:
    type: array
    items:
      $ref: '#/definitions/ComponentConfiguration'
    minItems: 1
  ComponentFormat:
    type: string
    enum:
      - SHELL
  ComponentSummary:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the component.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the component.
      version:
        $ref: '#/definitions/VersionNumber'
        description: The version of the component.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the component.
      type:
        $ref: '#/definitions/ComponentType'
        description: The type of the component denotes whether the component is used to build the image or only to test it.
      owner:
        $ref: '#/definitions/NonEmptyString'
        description: The owner of the component.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the component.
      changeDescription:
        $ref: '#/definitions/NonEmptyString'
        description: The change description of the component.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date that the component was created.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags associated with the component.
    description: A high-level summary of a component.
  ComponentSummaryList:
    type: array
    items:
      $ref: '#/definitions/ComponentSummary'
  ComponentVersion:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the component.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the component.
      version:
        $ref: '#/definitions/VersionNumber'
        description: The semantic version of the component.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the component.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the component.
      type:
        $ref: '#/definitions/ComponentType'
        description: The type of the component denotes whether the component is used to build the image or only to test it.
      owner:
        $ref: '#/definitions/NonEmptyString'
        description: The owner of the component.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date that the component was created.
    description: A high-level overview of a component semantic version.
  ComponentVersionArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):component/[a-z0-9-_]+/\d+\.\d+\.\d+$'
  ComponentVersionList:
    type: array
    items:
      $ref: '#/definitions/ComponentVersion'
  InlineComponentData:
    type: string
    minLength: 1
    maxLength: 16000
  Uri:
    type: string
  CreateComponentRequest:
    type: object
    required:
      - name
      - semanticVersion
      - platform
      - clientToken
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the component.
      semanticVersion:
        $ref: '#/definitions/VersionNumber'
        description: 'The semantic version of the component. This version follows the semantic version syntax. For example, major.minor.patch. This could be versioned like software (2.0.1) or like a date (2019.12.01).'
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the component. Describes the contents of the component.
      changeDescription:
        $ref: '#/definitions/NonEmptyString'
        description: 'The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.'
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the component.
      data:
        $ref: '#/definitions/InlineComponentData'
        description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.
      uri:
        $ref: '#/definitions/Uri'
        description: 'The uri of the component. Must be an S3 URL and the requester must have permission to access the S3 bucket. If you use S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.'
      kmsKeyId:
        $ref: '#/definitions/NonEmptyString'
        description: The ID of the KMS key that should be used to encrypt this component.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the component.
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: The idempotency token of the component.
  DistributionList:
    type: array
    items:
      $ref: '#/definitions/Distribution'
  CreateDistributionConfigurationRequest:
    type: object
    required:
      - name
      - distributions
      - clientToken
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: ' The name of the distribution configuration. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the distribution configuration. '
      distributions:
        $ref: '#/definitions/DistributionList'
        description: ' The distributions of the distribution configuration. '
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags of the distribution configuration. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token of the distribution configuration. '
  DistributionConfigurationArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):distribution-configuration/[a-z0-9-_]+$'
  ImageRecipeArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-recipe/[a-z0-9-_]+/\d+\.\d+\.\d+$'
  InfrastructureConfigurationArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):infrastructure-configuration/[a-z0-9-_]+$'
  ImageTestsConfiguration:
    type: object
    properties:
      imageTestsEnabled:
        $ref: '#/definitions/NullableBoolean'
        description: Defines if tests should be executed when building this image.
      timeoutMinutes:
        $ref: '#/definitions/ImageTestsTimeoutMinutes'
        description: The maximum time in minutes that tests are permitted to run.
    description: Image tests configuration.
  Schedule:
    type: object
    properties:
      scheduleExpression:
        $ref: '#/definitions/NonEmptyString'
        description: ' The expression determines how often EC2 Image Builder evaluates your <code>pipelineExecutionStartCondition</code>.'
      pipelineExecutionStartCondition:
        $ref: '#/definitions/PipelineExecutionStartCondition'
        description: ' The condition configures when the pipeline should trigger a new image build. When the <code>pipelineExecutionStartCondition</code> is set to <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, EC2 Image Builder will build a new image only when there are known changes pending. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will build a new image every time the CRON expression matches the current time.'
    description: ' A schedule configures how often and when a pipeline will automatically create a new image. '
  PipelineStatus:
    type: string
    enum:
      - DISABLED
      - ENABLED
  CreateImagePipelineRequest:
    type: object
    required:
      - name
      - imageRecipeArn
      - infrastructureConfigurationArn
      - clientToken
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: ' The name of the image pipeline. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the image pipeline. '
      imageRecipeArn:
        $ref: '#/definitions/ImageRecipeArn'
        description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline. '
      infrastructureConfigurationArn:
        $ref: '#/definitions/InfrastructureConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline. '
      distributionConfigurationArn:
        $ref: '#/definitions/DistributionConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline. '
      imageTestsConfiguration:
        $ref: '#/definitions/ImageTestsConfiguration'
        description: ' The image test configuration of the image pipeline. '
      schedule:
        $ref: '#/definitions/Schedule'
        description: ' The schedule of the image pipeline. '
      status:
        $ref: '#/definitions/PipelineStatus'
        description: ' The status of the image pipeline. '
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags of the image pipeline. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
  ImagePipelineArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image-pipeline/[a-z0-9-_]+$'
  InstanceBlockDeviceMappings:
    type: array
    items:
      $ref: '#/definitions/InstanceBlockDeviceMapping'
  CreateImageRecipeRequest:
    type: object
    required:
      - name
      - semanticVersion
      - components
      - parentImage
      - clientToken
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: ' The name of the image recipe. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the image recipe. '
      semanticVersion:
        $ref: '#/definitions/VersionNumber'
        description: ' The semantic version of the image recipe. '
      components:
        $ref: '#/definitions/ComponentConfigurationList'
        description: ' The components of the image recipe. '
      parentImage:
        $ref: '#/definitions/NonEmptyString'
        description: ' The parent image of the image recipe. '
      blockDeviceMappings:
        $ref: '#/definitions/InstanceBlockDeviceMappings'
        description: ' The block device mappings of the image recipe. '
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags of the image recipe. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
  CreateImageRequest:
    type: object
    required:
      - imageRecipeArn
      - infrastructureConfigurationArn
      - clientToken
    properties:
      imageRecipeArn:
        $ref: '#/definitions/ImageRecipeArn'
        description: ' The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed. '
      distributionConfigurationArn:
        $ref: '#/definitions/DistributionConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline. '
      infrastructureConfigurationArn:
        $ref: '#/definitions/InfrastructureConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested. '
      imageTestsConfiguration:
        $ref: '#/definitions/ImageTestsConfiguration'
        description: ' The image tests configuration of the image. '
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags of the image. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
  InstanceTypeList:
    type: array
    items:
      $ref: '#/definitions/InstanceType'
  SecurityGroupIds:
    type: array
    items:
      $ref: '#/definitions/NonEmptyString'
  Logging:
    type: object
    properties:
      s3Logs:
        $ref: '#/definitions/S3Logs'
        description: The Amazon S3 logging configuration.
    description: Logging configuration defines where Image Builder uploads your logs.
  SnsTopicArn:
    type: string
    pattern: '^arn:aws[^:]*:sns:[^:]+:\d{12}:[a-zA-Z0-9-_]{1,256}$'
  CreateInfrastructureConfigurationRequest:
    type: object
    required:
      - name
      - instanceProfileName
      - clientToken
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: ' The name of the infrastructure configuration. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the infrastructure configuration. '
      instanceTypes:
        $ref: '#/definitions/InstanceTypeList'
        description: ' The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability. '
      instanceProfileName:
        $ref: '#/definitions/NonEmptyString'
        description: ' The instance profile to associate with the instance used to customize your EC2 AMI. '
      securityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: ' The security group IDs to associate with the instance used to customize your EC2 AMI. '
      subnetId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The subnet ID in which to place the instance used to customize your EC2 AMI. '
      logging:
        $ref: '#/definitions/Logging'
        description: ' The logging configuration of the infrastructure configuration. '
      keyPair:
        $ref: '#/definitions/NonEmptyString'
        description: ' The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image. '
      terminateInstanceOnFailure:
        $ref: '#/definitions/NullableBoolean'
        description: ' The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails. '
      snsTopicArn:
        $ref: '#/definitions/SnsTopicArn'
        description: ' The SNS topic on which to send image build events. '
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags of the infrastructure configuration. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
  DeleteComponentRequest:
    type: object
    properties: {}
  DeleteDistributionConfigurationRequest:
    type: object
    properties: {}
  DeleteImagePipelineRequest:
    type: object
    properties: {}
  DeleteImageRecipeRequest:
    type: object
    properties: {}
  DeleteImageRequest:
    type: object
    properties: {}
  DeleteInfrastructureConfigurationRequest:
    type: object
    properties: {}
  DistributionTimeoutMinutes:
    type: integer
    minimum: 30
    maximum: 720
  DistributionConfiguration:
    type: object
    required:
      - timeoutMinutes
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the distribution configuration.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the distribution configuration.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the distribution configuration.
      distributions:
        $ref: '#/definitions/DistributionList'
        description: The distributions of the distribution configuration.
      timeoutMinutes:
        $ref: '#/definitions/DistributionTimeoutMinutes'
        description: The maximum duration in minutes for this distribution configuration.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which this distribution configuration was created.
      dateUpdated:
        $ref: '#/definitions/DateTime'
        description: The date on which this distribution configuration was last updated.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the distribution configuration.
    description: A distribution configuration.
  DistributionConfigurationSummary:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the distribution configuration.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the distribution configuration.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the distribution configuration.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which the distribution configuration was created.
      dateUpdated:
        $ref: '#/definitions/DateTime'
        description: The date on which the distribution configuration was updated.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags associated with the distribution configuration.
    description: A high-level overview of a distribution configuration.
  DistributionConfigurationSummaryList:
    type: array
    items:
      $ref: '#/definitions/DistributionConfigurationSummary'
  EbsIopsInteger:
    type: integer
    minimum: 100
    maximum: 10000
  EbsVolumeSizeInteger:
    type: integer
    minimum: 1
    maximum: 16000
  EbsVolumeType:
    type: string
    enum:
      - standard
      - io1
      - gp2
      - sc1
      - st1
  EbsInstanceBlockDeviceSpecification:
    type: object
    properties:
      encrypted:
        $ref: '#/definitions/NullableBoolean'
        description: Use to configure device encryption.
      deleteOnTermination:
        $ref: '#/definitions/NullableBoolean'
        description: Use to configure delete on termination of the associated device.
      iops:
        $ref: '#/definitions/EbsIopsInteger'
        description: Use to configure device IOPS.
      kmsKeyId:
        $ref: '#/definitions/NonEmptyString'
        description: Use to configure the KMS key to use when encrypting the device.
      snapshotId:
        $ref: '#/definitions/NonEmptyString'
        description: The snapshot that defines the device contents.
      volumeSize:
        $ref: '#/definitions/EbsVolumeSizeInteger'
        description: Use to override the device's volume size.
      volumeType:
        $ref: '#/definitions/EbsVolumeType'
        description: Use to override the device's volume type.
    description: Amazon EBS-specific block device mapping specifications.
  EmptyString:
    type: string
    minLength: 0
    maxLength: 0
  FilterName:
    type: string
    pattern: '^[a-zA-Z]{1,1024}$'
  FilterValues:
    type: array
    items:
      $ref: '#/definitions/FilterValue'
    minItems: 1
    maxItems: 10
  FilterList:
    type: array
    items:
      $ref: '#/definitions/Filter'
    minItems: 1
    maxItems: 10
  FilterValue:
    type: string
    pattern: '^[0-9a-zA-Z./_ :-]{1,1024}$'
  GetComponentPolicyRequest:
    type: object
    properties: {}
  GetComponentRequest:
    type: object
    properties: {}
  GetDistributionConfigurationRequest:
    type: object
    properties: {}
  GetImagePipelineRequest:
    type: object
    properties: {}
  ImagePipeline:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the image pipeline.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the image pipeline.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the image pipeline.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the image pipeline.
      imageRecipeArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the image recipe associated with this image pipeline.
      infrastructureConfigurationArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.
      distributionConfigurationArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.
      imageTestsConfiguration:
        $ref: '#/definitions/ImageTestsConfiguration'
        description: The image tests configuration of the image pipeline.
      schedule:
        $ref: '#/definitions/Schedule'
        description: The schedule of the image pipeline.
      status:
        $ref: '#/definitions/PipelineStatus'
        description: The status of the image pipeline.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which this image pipeline was created.
      dateUpdated:
        $ref: '#/definitions/DateTime'
        description: The date on which this image pipeline was last updated.
      dateLastRun:
        $ref: '#/definitions/DateTime'
        description: The date on which this image pipeline was last run.
      dateNextRun:
        $ref: '#/definitions/DateTime'
        description: The date on which this image pipeline will next be run.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of this image pipeline.
    description: Details of an image pipeline.
  GetImagePolicyRequest:
    type: object
    properties: {}
  GetImageRecipePolicyRequest:
    type: object
    properties: {}
  GetImageRecipeRequest:
    type: object
    properties: {}
  ImageRecipe:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the image recipe.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the image recipe.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the image recipe.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the image recipe.
      owner:
        $ref: '#/definitions/NonEmptyString'
        description: The owner of the image recipe.
      version:
        $ref: '#/definitions/VersionNumber'
        description: The version of the image recipe.
      components:
        $ref: '#/definitions/ComponentConfigurationList'
        description: The components of the image recipe.
      parentImage:
        $ref: '#/definitions/NonEmptyString'
        description: The parent image of the image recipe.
      blockDeviceMappings:
        $ref: '#/definitions/InstanceBlockDeviceMappings'
        description: The block device mappings to apply when creating images from this recipe.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which this image recipe was created.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the image recipe.
    description: An image recipe.
  GetImageRequest:
    type: object
    properties: {}
  Image:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the image.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the image.
      version:
        $ref: '#/definitions/VersionNumber'
        description: The semantic version of the image.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the image.
      state:
        $ref: '#/definitions/ImageState'
        description: The state of the image.
      imageRecipe:
        $ref: '#/definitions/ImageRecipe'
        description: The image recipe used when creating the image.
      sourcePipelineName:
        $ref: '#/definitions/ResourceName'
        description: The name of the image pipeline that created this image.
      sourcePipelineArn:
        $ref: '#/definitions/Arn'
        description: The Amazon Resource Name (ARN) of the image pipeline that created this image.
      infrastructureConfiguration:
        $ref: '#/definitions/InfrastructureConfiguration'
        description: ' The infrastructure used when creating this image.'
      distributionConfiguration:
        $ref: '#/definitions/DistributionConfiguration'
        description: The distribution configuration used when creating this image.
      imageTestsConfiguration:
        $ref: '#/definitions/ImageTestsConfiguration'
        description: The image tests configuration used when creating this image.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which this image was created.
      outputResources:
        $ref: '#/definitions/OutputResources'
        description: The output resources produced when creating this image.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the image.
    description: An image build version.
  GetInfrastructureConfigurationRequest:
    type: object
    properties: {}
    description: ' GetInfrastructureConfiguration request object. '
  InfrastructureConfiguration:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the infrastructure configuration.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the infrastructure configuration.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the infrastructure configuration.
      instanceTypes:
        $ref: '#/definitions/InstanceTypeList'
        description: The instance types of the infrastructure configuration.
      instanceProfileName:
        $ref: '#/definitions/NonEmptyString'
        description: The instance profile of the infrastructure configuration.
      securityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: The security group IDs of the infrastructure configuration.
      subnetId:
        $ref: '#/definitions/NonEmptyString'
        description: The subnet ID of the infrastructure configuration.
      logging:
        $ref: '#/definitions/Logging'
        description: The logging configuration of the infrastructure configuration.
      keyPair:
        $ref: '#/definitions/NonEmptyString'
        description: The EC2 key pair of the infrastructure configuration.
      terminateInstanceOnFailure:
        $ref: '#/definitions/NullableBoolean'
        description: The terminate instance on failure configuration of the infrastructure configuration.
      snsTopicArn:
        $ref: '#/definitions/NonEmptyString'
        description: The SNS topic Amazon Resource Name (ARN) of the infrastructure configuration.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which the infrastructure configuration was created.
      dateUpdated:
        $ref: '#/definitions/DateTime'
        description: The date on which the infrastructure configuration was last updated.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the infrastructure configuration.
    description: Details of the infrastructure configuration.
  OutputResources:
    type: object
    properties:
      amis:
        $ref: '#/definitions/AmiList'
        description: 'The EC2 AMIs created by this image. '
    description: 'The resources produced by this image. '
  ImagePipelineList:
    type: array
    items:
      $ref: '#/definitions/ImagePipeline'
  ImageRecipeSummary:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the image recipe.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the image recipe.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the image recipe.
      owner:
        $ref: '#/definitions/NonEmptyString'
        description: The owner of the image recipe.
      parentImage:
        $ref: '#/definitions/NonEmptyString'
        description: The parent image of the image recipe.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which this image recipe was created.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the image recipe.
    description: A summary of an image recipe.
  ImageRecipeSummaryList:
    type: array
    items:
      $ref: '#/definitions/ImageRecipeSummary'
  ImageStatus:
    type: string
    enum:
      - PENDING
      - CREATING
      - BUILDING
      - TESTING
      - DISTRIBUTING
      - INTEGRATING
      - AVAILABLE
      - CANCELLED
      - FAILED
      - DEPRECATED
      - DELETED
  ImageSummary:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the image.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the image.
      version:
        $ref: '#/definitions/VersionNumber'
        description: The version of the image.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the image.
      state:
        $ref: '#/definitions/ImageState'
        description: The state of the image.
      owner:
        $ref: '#/definitions/NonEmptyString'
        description: The owner of the image.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which this image was created.
      outputResources:
        $ref: '#/definitions/OutputResources'
        description: The output resources produced when creating this image.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the image.
    description: An image summary.
  ImageSummaryList:
    type: array
    items:
      $ref: '#/definitions/ImageSummary'
  ImageVersion:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the image semantic version.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the image semantic version.
      version:
        $ref: '#/definitions/VersionNumber'
        description: The semantic version of the image semantic version.
      platform:
        $ref: '#/definitions/Platform'
        description: The platform of the image semantic version.
      owner:
        $ref: '#/definitions/NonEmptyString'
        description: The owner of the image semantic version.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date at which this image semantic version was created.
    description: An image semantic version.
  ImageVersionArn:
    type: string
    pattern: '^arn:aws[^:]*:imagebuilder:[^:]+:(?:\d{12}|aws):image/[a-z0-9-_]+/\d+\.\d+\.\d+$'
  ImageVersionList:
    type: array
    items:
      $ref: '#/definitions/ImageVersion'
  ImportComponentRequest:
    type: object
    required:
      - name
      - semanticVersion
      - type
      - format
      - platform
      - clientToken
    properties:
      name:
        $ref: '#/definitions/ResourceName'
        description: ' The name of the component. '
      semanticVersion:
        $ref: '#/definitions/VersionNumber'
        description: 'The semantic version of the component. This version follows the semantic version syntax. For example, major.minor.patch. This could be versioned like software (2.0.1) or like a date (2019.12.01).'
      description:
        $ref: '#/definitions/NonEmptyString'
        description: 'The description of the component. Describes the contents of the component. '
      changeDescription:
        $ref: '#/definitions/NonEmptyString'
        description: ' The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component. '
      type:
        $ref: '#/definitions/ComponentType'
        description: 'The type of the component denotes whether the component is used to build the image or only to test it. '
      format:
        $ref: '#/definitions/ComponentFormat'
        description: ' The format of the resource that you want to import as a component. '
      platform:
        $ref: '#/definitions/Platform'
        description: ' The platform of the component. '
      data:
        $ref: '#/definitions/NonEmptyString'
        description: The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.
      uri:
        $ref: '#/definitions/Uri'
        description: 'The uri of the component. Must be an S3 URL and the requester must have permission to access the S3 bucket. If you use S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component. '
      kmsKeyId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The ID of the KMS key that should be used to encrypt this component. '
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags of the component. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token of the component. '
  InfrastructureConfigurationSummary:
    type: object
    properties:
      arn:
        $ref: '#/definitions/ImageBuilderArn'
        description: The Amazon Resource Name (ARN) of the infrastructure configuration.
      name:
        $ref: '#/definitions/ResourceName'
        description: The name of the infrastructure configuration.
      description:
        $ref: '#/definitions/NonEmptyString'
        description: The description of the infrastructure configuration.
      dateCreated:
        $ref: '#/definitions/DateTime'
        description: The date on which the infrastructure configuration was created.
      dateUpdated:
        $ref: '#/definitions/DateTime'
        description: The date on which the infrastructure configuration was last updated.
      tags:
        $ref: '#/definitions/TagMap'
        description: The tags of the infrastructure configuration.
    description: The infrastructure used when building EC2 AMIs.
  InfrastructureConfigurationSummaryList:
    type: array
    items:
      $ref: '#/definitions/InfrastructureConfigurationSummary'
  StringList:
    type: array
    items:
      $ref: '#/definitions/NonEmptyString'
  RestrictedInteger:
    type: integer
    minimum: 1
    maximum: 25
  ListComponentBuildVersionsRequest:
    type: object
    required:
      - componentVersionArn
    properties:
      componentVersionArn:
        $ref: '#/definitions/ComponentVersionArn'
        description: ' The component version Amazon Resource Name (ARN) whose versions you want to list. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  Ownership:
    type: string
    enum:
      - Self
      - Shared
      - Amazon
  ListComponentsRequest:
    type: object
    properties:
      owner:
        $ref: '#/definitions/Ownership'
        description: ' The owner defines which components you want to list. By default, this request will only show components owned by your account. You can use this field to specify if you want to view components owned by yourself, by Amazon, or those components that have been shared with you by other customers. '
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListDistributionConfigurationsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListImageBuildVersionsRequest:
    type: object
    required:
      - imageVersionArn
    properties:
      imageVersionArn:
        $ref: '#/definitions/ImageVersionArn'
        description: ' The Amazon Resource Name (ARN) of the image whose build versions you want to retrieve. '
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListImagePipelineImagesRequest:
    type: object
    required:
      - imagePipelineArn
    properties:
      imagePipelineArn:
        $ref: '#/definitions/ImagePipelineArn'
        description: ' The Amazon Resource Name (ARN) of the image pipeline whose images you want to view. '
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListImagePipelinesRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListImageRecipesRequest:
    type: object
    properties:
      owner:
        $ref: '#/definitions/Ownership'
        description: ' The owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers. '
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListImagesRequest:
    type: object
    properties:
      owner:
        $ref: '#/definitions/Ownership'
        description: ' The owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers. '
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListInfrastructureConfigurationsRequest:
    type: object
    properties:
      filters:
        $ref: '#/definitions/FilterList'
        description: ' The filters. '
      maxResults:
        $ref: '#/definitions/RestrictedInteger'
        description: ' The maximum items to return in a request. '
      nextToken:
        $ref: '#/definitions/NonEmptyString'
        description: ' A token to specify where to start paginating. This is the NextToken from a previously truncated response. '
  ListTagsForResourceRequest:
    type: object
    properties: {}
  PutComponentPolicyRequest:
    type: object
    required:
      - componentArn
      - policy
    properties:
      componentArn:
        $ref: '#/definitions/ComponentBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the component that this policy should be applied to. '
      policy:
        $ref: '#/definitions/NonEmptyString'
        description: ' The policy to apply. '
  PutImagePolicyRequest:
    type: object
    required:
      - imageArn
      - policy
    properties:
      imageArn:
        $ref: '#/definitions/ImageBuildVersionArn'
        description: ' The Amazon Resource Name (ARN) of the image that this policy should be applied to. '
      policy:
        $ref: '#/definitions/NonEmptyString'
        description: ' The policy to apply. '
  PutImageRecipePolicyRequest:
    type: object
    required:
      - imageRecipeArn
      - policy
    properties:
      imageRecipeArn:
        $ref: '#/definitions/ImageRecipeArn'
        description: ' The Amazon Resource Name (ARN) of the image recipe that this policy should be applied to. '
      policy:
        $ref: '#/definitions/NonEmptyString'
        description: ' The policy to apply. '
  StartImagePipelineExecutionRequest:
    type: object
    required:
      - imagePipelineArn
      - clientToken
    properties:
      imagePipelineArn:
        $ref: '#/definitions/ImagePipelineArn'
        description: ' The Amazon Resource Name (ARN) of the image pipeline that you want to manually invoke. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 50
  TagResourceRequest:
    type: object
    required:
      - tags
    properties:
      tags:
        $ref: '#/definitions/TagMap'
        description: ' The tags to apply to the resource. '
  UntagResourceRequest:
    type: object
    properties: {}
  UpdateDistributionConfigurationRequest:
    type: object
    required:
      - distributionConfigurationArn
      - distributions
      - clientToken
    properties:
      distributionConfigurationArn:
        $ref: '#/definitions/DistributionConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the distribution configuration that you want to update. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the distribution configuration. '
      distributions:
        $ref: '#/definitions/DistributionList'
        description: ' The distributions of the distribution configuration. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token of the distribution configuration. '
  UpdateImagePipelineRequest:
    type: object
    required:
      - imagePipelineArn
      - imageRecipeArn
      - infrastructureConfigurationArn
      - clientToken
    properties:
      imagePipelineArn:
        $ref: '#/definitions/ImagePipelineArn'
        description: ' The Amazon Resource Name (ARN) of the image pipeline that you want to update. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the image pipeline. '
      imageRecipeArn:
        $ref: '#/definitions/ImageRecipeArn'
        description: ' The Amazon Resource Name (ARN) of the image recipe that will be used to configure images updated by this image pipeline. '
      infrastructureConfigurationArn:
        $ref: '#/definitions/InfrastructureConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images updated by this image pipeline. '
      distributionConfigurationArn:
        $ref: '#/definitions/DistributionConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images updated by this image pipeline. '
      imageTestsConfiguration:
        $ref: '#/definitions/ImageTestsConfiguration'
        description: ' The image test configuration of the image pipeline. '
      schedule:
        $ref: '#/definitions/Schedule'
        description: ' The schedule of the image pipeline. '
      status:
        $ref: '#/definitions/PipelineStatus'
        description: ' The status of the image pipeline. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
  UpdateInfrastructureConfigurationRequest:
    type: object
    required:
      - infrastructureConfigurationArn
      - instanceProfileName
      - clientToken
    properties:
      infrastructureConfigurationArn:
        $ref: '#/definitions/InfrastructureConfigurationArn'
        description: ' The Amazon Resource Name (ARN) of the infrastructure configuration that you want to update. '
      description:
        $ref: '#/definitions/NonEmptyString'
        description: ' The description of the infrastructure configuration. '
      instanceTypes:
        $ref: '#/definitions/InstanceTypeList'
        description: ' The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability. '
      instanceProfileName:
        $ref: '#/definitions/NonEmptyString'
        description: ' The instance profile to associate with the instance used to customize your EC2 AMI. '
      securityGroupIds:
        $ref: '#/definitions/SecurityGroupIds'
        description: ' The security group IDs to associate with the instance used to customize your EC2 AMI. '
      subnetId:
        $ref: '#/definitions/NonEmptyString'
        description: ' The subnet ID to place the instance used to customize your EC2 AMI in. '
      logging:
        $ref: '#/definitions/Logging'
        description: ' The logging configuration of the infrastructure configuration. '
      keyPair:
        $ref: '#/definitions/NonEmptyString'
        description: ' The key pair of the infrastructure configuration. This can be used to log on to and debug the instance used to create your image. '
      terminateInstanceOnFailure:
        $ref: '#/definitions/NullableBoolean'
        description: ' The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails. '
      snsTopicArn:
        $ref: '#/definitions/SnsTopicArn'
        description: ' The SNS topic on which to send image build events. '
      clientToken:
        $ref: '#/definitions/ClientToken'
        description: ' The idempotency token used to make this request idempotent. '
