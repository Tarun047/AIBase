swagger: '2.0'
info:
  version: '2018-10-05'
  x-release: v4
  title: AWS IoT Secure Tunneling
  description: '<fullname>AWS IoT Secure Tunneling</fullname> <p>AWS IoT Secure Tunnling enables you to create remote connections to devices deployed in the field.</p> <p>For more information about how AWS IoT Secure Tunneling works, see the <a href="https://docs.aws.amazon.com/secure-tunneling/latest/ug/what-is-secure-tunneling.html">User Guide</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iotsecuretunneling
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotsecuretunneling-2018-10-05.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iot/'
host: api.tunneling.iot.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://api.tunneling.iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT Secure Tunneling multi-region endpoint
  - url: 'https://api.tunneling.iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT Secure Tunneling multi-region endpoint
  - url: 'http://api.tunneling.iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Secure Tunneling endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://api.tunneling.iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Secure Tunneling endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#X-Amz-Target=IoTSecuredTunneling.CloseTunnel':
    post:
      operationId: CloseTunnel
      description: 'Closes a tunnel identified by the unique tunnel id. When a <code>CloseTunnel</code> request is received, we close the WebSocket connections between the client and proxy server so no data can be transmitted.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CloseTunnelResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CloseTunnelRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - IoTSecuredTunneling.CloseTunnel
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=IoTSecuredTunneling.DescribeTunnel':
    post:
      operationId: DescribeTunnel
      description: Gets information about a tunnel identified by the unique tunnel id.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeTunnelResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeTunnelRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - IoTSecuredTunneling.DescribeTunnel
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=IoTSecuredTunneling.ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Lists the tags for the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - IoTSecuredTunneling.ListTagsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=IoTSecuredTunneling.ListTunnels':
    post:
      operationId: ListTunnels
      description: 'List all tunnels for an AWS account. Tunnels are listed by creation time in descending order, newer tunnels will be listed before older tunnels.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTunnelsResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTunnelsRequest'
        - name: maxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: nextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - IoTSecuredTunneling.ListTunnels
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=IoTSecuredTunneling.OpenTunnel':
    post:
      operationId: OpenTunnel
      description: 'Creates a new tunnel, and returns two client access tokens for clients to use to connect to the AWS IoT Secure Tunneling proxy server. .'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OpenTunnelResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/OpenTunnelRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - IoTSecuredTunneling.OpenTunnel
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=IoTSecuredTunneling.TagResource':
    post:
      operationId: TagResource
      description: A resource tag.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - IoTSecuredTunneling.TagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=IoTSecuredTunneling.UntagResource':
    post:
      operationId: UntagResource
      description: Removes a tag from a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - IoTSecuredTunneling.UntagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CloseTunnelResponse:
    type: object
    properties: {}
  CloseTunnelRequest:
    type: object
    required:
      - tunnelId
    properties:
      tunnelId:
        $ref: '#/definitions/TunnelId'
        description: The ID of the tunnel to close.
      delete:
        $ref: '#/definitions/DeleteFlag'
        description: 'When set to true, AWS IoT Secure Tunneling deletes the tunnel data immediately.'
  ResourceNotFoundException: {}
  DescribeTunnelResponse:
    type: object
    properties:
      tunnel:
        $ref: '#/definitions/Tunnel'
        description: The tunnel being described.
  DescribeTunnelRequest:
    type: object
    required:
      - tunnelId
    properties:
      tunnelId:
        $ref: '#/definitions/TunnelId'
        description: The tunnel to describe.
  ListTagsForResourceResponse:
    type: object
    properties:
      tags:
        $ref: '#/definitions/TagList'
        description: The tags for the specified resource.
  ListTagsForResourceRequest:
    type: object
    required:
      - resourceArn
    properties:
      resourceArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The resource ARN.
  ListTunnelsResponse:
    type: object
    properties:
      tunnelSummaries:
        $ref: '#/definitions/TunnelSummaryList'
        description: A short description of the tunnels in an AWS account.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to used to retrieve the next set of results.
  ListTunnelsRequest:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the IoT thing associated with the destination device.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return at once.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to retrieve the next set of results.
  OpenTunnelResponse:
    type: object
    properties:
      tunnelId:
        $ref: '#/definitions/TunnelId'
        description: A unique alpha-numeric tunnel ID.
      tunnelArn:
        $ref: '#/definitions/TunnelArn'
        description: 'The Amazon Resource Name for the tunnel. The tunnel ARN format is <code>arn:aws:tunnel:&lt;region&gt;:&lt;account-id&gt;:tunnel/&lt;tunnel-id&gt;</code> '
      sourceAccessToken:
        $ref: '#/definitions/ClientAccessToken'
        description: The access token the source local proxy uses to connect to AWS IoT Secure Tunneling.
      destinationAccessToken:
        $ref: '#/definitions/ClientAccessToken'
        description: The access token the destination local proxy uses to connect to AWS IoT Secure Tunneling.
  OpenTunnelRequest:
    type: object
    properties:
      description:
        $ref: '#/definitions/Description'
        description: 'A short text description of the tunnel. '
      tags:
        $ref: '#/definitions/TagList'
        description: A collection of tag metadata.
      destinationConfig:
        $ref: '#/definitions/DestinationConfig'
        description: The destination configuration for the OpenTunnel request.
      timeoutConfig:
        $ref: '#/definitions/TimeoutConfig'
        description: Timeout configuration for a tunnel.
  LimitExceededException: {}
  TagResourceResponse:
    type: object
    properties: {}
  TagResourceRequest:
    type: object
    required:
      - resourceArn
      - tags
    properties:
      resourceArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The ARN of the resource.
      tags:
        $ref: '#/definitions/TagList'
        description: The tags for the resource.
  UntagResourceResponse:
    type: object
    properties: {}
  UntagResourceRequest:
    type: object
    required:
      - resourceArn
      - tagKeys
    properties:
      resourceArn:
        $ref: '#/definitions/AmazonResourceName'
        description: The resource ARN.
      tagKeys:
        $ref: '#/definitions/TagKeyList'
        description: The keys of the tags to remove.
  AmazonResourceName:
    type: string
    minLength: 1
    maxLength: 1011
  ClientAccessToken:
    type: string
    format: password
  TunnelId:
    type: string
    pattern: '[a-zA-Z0-9_\-+=:]{1,128}'
  DeleteFlag:
    type: boolean
  ConnectionStatus:
    type: string
    enum:
      - CONNECTED
      - DISCONNECTED
  DateType:
    type: string
    format: date-time
  ConnectionState:
    type: object
    properties:
      status:
        $ref: '#/definitions/ConnectionStatus'
        description: The connection status of the tunnel. Valid values are <code>CONNECTED</code> and <code>DISCONNECTED</code>.
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: The last time the connection status was updated.
    description: The state of a connection.
  Tunnel:
    type: object
    properties:
      tunnelId:
        $ref: '#/definitions/TunnelId'
        description: A unique alpha-numeric ID that identifies a tunnel.
      tunnelArn:
        $ref: '#/definitions/TunnelArn'
        description: 'The Amazon Resource Name (ARN) of a tunnel. The tunnel ARN format is <code>arn:aws:tunnel:&lt;region&gt;:&lt;account-id&gt;:tunnel/&lt;tunnel-id&gt;</code> '
      status:
        $ref: '#/definitions/TunnelStatus'
        description: 'The status of a tunnel. Valid values are: Open and Closed.'
      sourceConnectionState:
        $ref: '#/definitions/ConnectionState'
        description: The connection state of the source application.
      destinationConnectionState:
        $ref: '#/definitions/ConnectionState'
        description: The connection state of the destination application.
      description:
        $ref: '#/definitions/Description'
        description: A description of the tunnel.
      destinationConfig:
        $ref: '#/definitions/DestinationConfig'
        description: The destination configuration that specifies the thing name of the destination device and a service name that the local proxy uses to connect to the destination application.
      timeoutConfig:
        $ref: '#/definitions/TimeoutConfig'
        description: Timeout configuration for the tunnel.
      tags:
        $ref: '#/definitions/TagList'
        description: A list of tag metadata associated with the secure tunnel.
      createdAt:
        $ref: '#/definitions/DateType'
        description: The time when the tunnel was created.
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: The last time the tunnel was updated.
    description: A connection between a source computer and a destination device.
  Description:
    type: string
    pattern: '[^\p{C}]{1,2048}'
  ThingName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  ServiceList:
    type: array
    items:
      $ref: '#/definitions/Service'
    minItems: 1
    maxItems: 1
  DestinationConfig:
    type: object
    required:
      - thingName
      - services
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the IoT thing to which you want to connect.
      services:
        $ref: '#/definitions/ServiceList'
        description: 'A list of service names that identity the target application. Currently, you can only specify a single name. The AWS IoT client running on the destination device reads this value and uses it to look up a port or an IP address and a port. The AWS IoT client instantiates the local proxy which uses this information to connect to the destination application.'
    description: The destination configuration.
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 200
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  NextToken:
    type: string
    pattern: '[a-zA-Z0-9_=-]{1,4096}'
  TunnelSummaryList:
    type: array
    items:
      $ref: '#/definitions/TunnelSummary'
  TimeoutConfig:
    type: object
    properties:
      maxLifetimeTimeoutMinutes:
        $ref: '#/definitions/TimeoutInMin'
        description: 'The maximum amount of time (in minutes) a tunnel can remain open. If not specified, maxLifetimeTimeoutMinutes defaults to 720 minutes. Valid values are from 1 minute to 12 hours (720 minutes) '
    description: Tunnel timeout configuration.
  TunnelArn:
    type: string
    minLength: 1
    maxLength: 1600
  Service:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 8
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 0
    maxLength: 256
  Tag:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: An arbitary key/value pair used to add searchable metadata to secure tunnel resources.
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 0
    maxItems: 200
  TimeoutInMin:
    type: integer
    minimum: 1
    maximum: 720
  TunnelStatus:
    type: string
    enum:
      - OPEN
      - CLOSED
  TunnelSummary:
    type: object
    properties:
      tunnelId:
        $ref: '#/definitions/TunnelId'
        description: The unique alpha-numeric identifier for the tunnel.
      tunnelArn:
        $ref: '#/definitions/TunnelArn'
        description: 'The Amazon Resource Name of the tunnel. The tunnel ARN format is <code>arn:aws:tunnel:&lt;region&gt;:&lt;account-id&gt;:tunnel/&lt;tunnel-id&gt;</code> '
      status:
        $ref: '#/definitions/TunnelStatus'
        description: 'The status of a tunnel. Valid values are: Open and Closed.'
      description:
        $ref: '#/definitions/Description'
        description: A description of the tunnel.
      createdAt:
        $ref: '#/definitions/DateType'
        description: The time the tunnel was created.
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: The time the tunnel was last updated.
    description: Information about the tunnel.
