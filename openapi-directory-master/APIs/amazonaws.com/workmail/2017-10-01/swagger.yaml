swagger: '2.0'
info:
  version: '2017-10-01'
  x-release: v4
  title: Amazon WorkMail
  description: '<p>Amazon WorkMail is a secure, managed business email and calendaring service with support for existing desktop and mobile email clients. You can access your email, contacts, and calendars using Microsoft Outlook, your browser, or other native iOS and Android email applications. You can integrate WorkMail with your existing corporate directory and control both the keys that encrypt your data and the location in which your data is stored.</p> <p>The WorkMail API is designed for the following scenarios:</p> <ul> <li> <p>Listing and describing organizations</p> </li> </ul> <ul> <li> <p>Managing users</p> </li> </ul> <ul> <li> <p>Managing groups</p> </li> </ul> <ul> <li> <p>Managing resources</p> </li> </ul> <p>All WorkMail API operations are Amazon-authenticated and certificate-signed. They not only require the use of the AWS SDK, but also allow for the exclusive use of AWS Identity and Access Management users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the WorkMail site, the IAM user gains full administrative visibility into the entire WorkMail organization (or as set in the IAM policy). This includes, but is not limited to, the ability to create, update, and delete users, groups, and resources. This allows developers to perform the scenarios listed above, as well as give users the ability to grant access on a selective basis using the IAM model.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: workmail
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workmail-2017-10-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/workmail/'
host: workmail.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://workmail.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkMail multi-region endpoint
  - url: 'https://workmail.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkMail multi-region endpoint
  - url: 'http://workmail.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://workmail.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkMail endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#X-Amz-Target=WorkMailService.AssociateDelegateToResource':
    post:
      operationId: AssociateDelegateToResource
      description: Adds a member (user or group) to the resource's set of delegates.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateDelegateToResourceResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateDelegateToResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.AssociateDelegateToResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.AssociateMemberToGroup':
    post:
      operationId: AssociateMemberToGroup
      description: Adds a member (user or group) to the group's set.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateMemberToGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '487':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/AssociateMemberToGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.AssociateMemberToGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.CreateAlias':
    post:
      operationId: CreateAlias
      description: Adds an alias to the set of a given member (user or group) of Amazon WorkMail.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAliasResponse'
        '480':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '485':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '486':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '487':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '488':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateAliasRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.CreateAlias
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.CreateGroup':
    post:
      operationId: CreateGroup
      description: Creates a group that can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: ReservedNameException
          schema:
            $ref: '#/definitions/ReservedNameException'
        '487':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.CreateGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.CreateResource':
    post:
      operationId: CreateResource
      description: 'Creates a new Amazon WorkMail resource. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourceResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: ReservedNameException
          schema:
            $ref: '#/definitions/ReservedNameException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.CreateResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.CreateUser':
    post:
      operationId: CreateUser
      description: Creates a user who can be used in Amazon WorkMail by calling the <a>RegisterToWorkMail</a> operation.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUserResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidPasswordException
          schema:
            $ref: '#/definitions/InvalidPasswordException'
        '484':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '485':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '487':
          description: ReservedNameException
          schema:
            $ref: '#/definitions/ReservedNameException'
        '488':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.CreateUser
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DeleteAlias':
    post:
      operationId: DeleteAlias
      description: Remove one or more specified aliases from a set of aliases for a given user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAliasResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAliasRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DeleteAlias
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DeleteGroup':
    post:
      operationId: DeleteGroup
      description: Deletes a group from Amazon WorkMail.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DeleteGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DeleteMailboxPermissions':
    post:
      operationId: DeleteMailboxPermissions
      description: Deletes permissions granted to a member (user or group).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMailboxPermissionsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteMailboxPermissionsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DeleteMailboxPermissions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DeleteResource':
    post:
      operationId: DeleteResource
      description: 'Deletes the specified resource. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourceResponse'
        '480':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DeleteResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DeleteUser':
    post:
      operationId: DeleteUser
      description: '<p>Deletes a user from Amazon WorkMail and all subsequent systems. Before you can delete a user, the user state must be <code>DISABLED</code>. Use the <a>DescribeUser</a> action to confirm the user state.</p> <p>Deleting a user is permanent and cannot be undone. WorkMail archives user mailboxes for 30 days before they are permanently removed.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DeleteUser
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DeregisterFromWorkMail':
    post:
      operationId: DeregisterFromWorkMail
      description: 'Mark a user, group, or resource as no longer used in Amazon WorkMail. This action disassociates the mailbox and schedules it for clean-up. WorkMail keeps mailboxes for 30 days before they are permanently removed. The functionality in the console is <i>Disable</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterFromWorkMailResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterFromWorkMailRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DeregisterFromWorkMail
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DescribeGroup':
    post:
      operationId: DescribeGroup
      description: Returns the data available for the group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGroupResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DescribeGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DescribeOrganization':
    post:
      operationId: DescribeOrganization
      description: Provides more information regarding a given organization based on its identifier.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrganizationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrganizationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DescribeOrganization
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DescribeResource':
    post:
      operationId: DescribeResource
      description: Returns the data available for the resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeResourceResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DescribeResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DescribeUser':
    post:
      operationId: DescribeUser
      description: Provides information regarding the user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeUserResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeUserRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DescribeUser
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DisassociateDelegateFromResource':
    post:
      operationId: DisassociateDelegateFromResource
      description: Removes a member from the resource's set of delegates.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateDelegateFromResourceResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateDelegateFromResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DisassociateDelegateFromResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.DisassociateMemberFromGroup':
    post:
      operationId: DisassociateMemberFromGroup
      description: Removes a member from a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateMemberFromGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '487':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateMemberFromGroupRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.DisassociateMemberFromGroup
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.GetMailboxDetails':
    post:
      operationId: GetMailboxDetails
      description: Requests a user's mailbox details for a specified organization and user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMailboxDetailsResponse'
        '480':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '481':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetMailboxDetailsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.GetMailboxDetails
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListAliases':
    post:
      operationId: ListAliases
      description: Creates a paginated call to list the aliases associated with a given entity.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAliasesResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAliasesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListAliases
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListGroupMembers':
    post:
      operationId: ListGroupMembers
      description: Returns an overview of the members of a group. Users and groups can be members of a group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupMembersResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupMembersRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListGroupMembers
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListGroups':
    post:
      operationId: ListGroups
      description: Returns summaries of the organization's groups.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListGroups
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListMailboxPermissions':
    post:
      operationId: ListMailboxPermissions
      description: 'Lists the mailbox permissions associated with a user, group, or resource mailbox.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMailboxPermissionsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListMailboxPermissionsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListMailboxPermissions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListOrganizations':
    post:
      operationId: ListOrganizations
      description: Returns summaries of the customer's non-deleted organizations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOrganizationsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListOrganizationsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListOrganizations
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListResourceDelegates':
    post:
      operationId: ListResourceDelegates
      description: Lists the delegates associated with a resource. Users and groups can be resource delegates and answer requests on behalf of the resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceDelegatesResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceDelegatesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListResourceDelegates
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListResources':
    post:
      operationId: ListResources
      description: Returns summaries of the organization's resources.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourcesResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourcesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListResources
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Lists the tags applied to an Amazon WorkMail organization resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListTagsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ListUsers':
    post:
      operationId: ListUsers
      description: Returns summaries of the organization's users.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUsersResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUsersRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ListUsers
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.PutMailboxPermissions':
    post:
      operationId: PutMailboxPermissions
      description: 'Sets permissions for a user, group, or resource. This replaces any pre-existing permissions.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutMailboxPermissionsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutMailboxPermissionsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.PutMailboxPermissions
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.RegisterToWorkMail':
    post:
      operationId: RegisterToWorkMail
      description: '<p>Registers an existing and disabled user, group, or resource for Amazon WorkMail use by associating a mailbox and calendaring capabilities. It performs no change if the user, group, or resource is enabled and fails if the user, group, or resource is deleted. This operation results in the accumulation of costs. For more information, see <a href="https://aws.amazon.com//workmail/pricing">Pricing</a>. The equivalent console functionality for this operation is <i>Enable</i>. </p> <p>Users can either be created by calling the <a>CreateUser</a> API operation or they can be synchronized from your directory. For more information, see <a>DeregisterFromWorkMail</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterToWorkMailResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '484':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '485':
          description: EntityAlreadyRegisteredException
          schema:
            $ref: '#/definitions/EntityAlreadyRegisteredException'
        '486':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '487':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '488':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '489':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '490':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterToWorkMailRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.RegisterToWorkMail
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.ResetPassword':
    post:
      operationId: ResetPassword
      description: Allows the administrator to reset the password for a user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetPasswordResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: InvalidPasswordException
          schema:
            $ref: '#/definitions/InvalidPasswordException'
        '486':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '487':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '488':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.ResetPassword
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.TagResource':
    post:
      operationId: TagResource
      description: Applies the specified tags to the specified Amazon WorkMail organization resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: TooManyTagsException
          schema:
            $ref: '#/definitions/TooManyTagsException'
        '482':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.TagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.UntagResource':
    post:
      operationId: UntagResource
      description: Untags the specified tags from the specified Amazon WorkMail organization resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.UntagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.UpdateMailboxQuota':
    post:
      operationId: UpdateMailboxQuota
      description: Updates a user's current mailbox quota for a specified organization and user.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMailboxQuotaResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '484':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateMailboxQuotaRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.UpdateMailboxQuota
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.UpdatePrimaryEmailAddress':
    post:
      operationId: UpdatePrimaryEmailAddress
      description: 'Updates the primary email for a user, group, or resource. The current email is moved into the list of aliases (or swapped between an existing alias and the current primary email), and the email provided in the input is promoted as the primary.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePrimaryEmailAddressResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '484':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '485':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '486':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '487':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '488':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '489':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '490':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '491':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePrimaryEmailAddressRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.UpdatePrimaryEmailAddress
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=WorkMailService.UpdateResource':
    post:
      operationId: UpdateResource
      description: 'Updates data for the resource. To have the latest information, it must be preceded by a <a>DescribeResource</a> call. The dataset in the request should be the one expected when performing another <code>DescribeResource</code> call.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResourceResponse'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidConfigurationException
          schema:
            $ref: '#/definitions/InvalidConfigurationException'
        '484':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '485':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '486':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '487':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '488':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '489':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - WorkMailService.UpdateResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  AssociateDelegateToResourceResponse:
    type: object
    properties: {}
  AssociateDelegateToResourceRequest:
    type: object
    required:
      - OrganizationId
      - ResourceId
      - EntityId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the resource exists.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource for which members (users or groups) are associated.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The member (user or group) to associate to the resource.
  EntityNotFoundException: {}
  EntityStateException: {}
  InvalidParameterException: {}
  OrganizationNotFoundException: {}
  OrganizationStateException: {}
  AssociateMemberToGroupResponse:
    type: object
    properties: {}
  AssociateMemberToGroupRequest:
    type: object
    required:
      - OrganizationId
      - GroupId
      - MemberId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the group exists.
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The group to which the member (user or group) is associated.
      MemberId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The member (user or group) to associate to the group.
  DirectoryServiceAuthenticationFailedException: {}
  DirectoryUnavailableException: {}
  UnsupportedOperationException: {}
  CreateAliasResponse:
    type: object
    properties: {}
  CreateAliasRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
      - Alias
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the member (user or group) exists.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The member (user or group) to which this alias is added.
      Alias:
        $ref: '#/definitions/EmailAddress'
        description: The alias to add to the member set.
  EmailAddressInUseException: {}
  MailDomainNotFoundException: {}
  MailDomainStateException: {}
  LimitExceededException: {}
  CreateGroupResponse:
    type: object
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the group.
  CreateGroupRequest:
    type: object
    required:
      - OrganizationId
      - Name
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the group is to be created.
      Name:
        $ref: '#/definitions/GroupName'
        description: The name of the group.
  NameAvailabilityException: {}
  ReservedNameException: {}
  CreateResourceResponse:
    type: object
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the new resource.
  CreateResourceRequest:
    type: object
    required:
      - OrganizationId
      - Name
      - Type
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization for which the resource is created.
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the new resource.
      Type:
        $ref: '#/definitions/ResourceType'
        description: The type of the new resource. The available types are <code>equipment</code> and <code>room</code>.
  CreateUserResponse:
    type: object
    properties:
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the new user.
  CreateUserRequest:
    type: object
    required:
      - OrganizationId
      - Name
      - DisplayName
      - Password
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier of the organization for which the user is created.
      Name:
        $ref: '#/definitions/UserName'
        description: The name for the new user. Simple AD or AD Connector user names have a maximum length of 20. All others have a maximum length of 64.
      DisplayName:
        $ref: '#/definitions/String'
        description: The display name for the new user.
      Password:
        $ref: '#/definitions/Password'
        description: The password for the new user.
  InvalidPasswordException: {}
  DeleteAliasResponse:
    type: object
    properties: {}
  DeleteAliasRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
      - Alias
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the user exists.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the member (user or group) from which to have the aliases removed.
      Alias:
        $ref: '#/definitions/EmailAddress'
        description: The aliases to be removed from the user's set of aliases. Duplicate entries in the list are collapsed into single entries (the list is transformed into a set).
  DeleteGroupResponse:
    type: object
    properties: {}
  DeleteGroupRequest:
    type: object
    required:
      - OrganizationId
      - GroupId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization that contains the group.
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the group to be deleted.
  DeleteMailboxPermissionsResponse:
    type: object
    properties: {}
  DeleteMailboxPermissionsRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
      - GranteeId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier of the organization under which the member (user or group) exists.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the member (user or group)that owns the mailbox.
      GranteeId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the member (user or group) for which to delete granted permissions.
  DeleteResourceResponse:
    type: object
    properties: {}
  DeleteResourceRequest:
    type: object
    required:
      - OrganizationId
      - ResourceId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization from which the resource is deleted.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the resource to be deleted.
  DeleteUserResponse:
    type: object
    properties: {}
  DeleteUserRequest:
    type: object
    required:
      - OrganizationId
      - UserId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization that contains the user to be deleted.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the user to be deleted.
  DeregisterFromWorkMailResponse:
    type: object
    properties: {}
  DeregisterFromWorkMailRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the Amazon WorkMail entity exists.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the member (user or group) to be updated.
  DescribeGroupResponse:
    type: object
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the described group.
      Name:
        $ref: '#/definitions/GroupName'
        description: The name of the described group.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the described group.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the user: enabled (registered to Amazon WorkMail) or disabled (deregistered or never registered to WorkMail).'
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a user was registered to WorkMail, in UNIX epoch time format.'
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a user was deregistered from WorkMail, in UNIX epoch time format.'
  DescribeGroupRequest:
    type: object
    required:
      - OrganizationId
      - GroupId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the group exists.
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the group to be described.
  DescribeOrganizationResponse:
    type: object
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier of an organization.
      Alias:
        $ref: '#/definitions/OrganizationName'
        description: The alias for an organization.
      State:
        $ref: '#/definitions/String'
        description: The state of an organization.
      DirectoryId:
        $ref: '#/definitions/String'
        description: The identifier for the directory associated with an Amazon WorkMail organization.
      DirectoryType:
        $ref: '#/definitions/String'
        description: The type of directory associated with the WorkMail organization.
      DefaultMailDomain:
        $ref: '#/definitions/String'
        description: The default mail domain associated with the organization.
      CompletedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date at which the organization became usable in the WorkMail context, in UNIX epoch time format.'
      ErrorMessage:
        $ref: '#/definitions/String'
        description: (Optional) The error message indicating if unexpected behavior was encountered with regards to the organization.
      ARN:
        $ref: '#/definitions/AmazonResourceName'
        description: The Amazon Resource Name (ARN) of the organization.
  DescribeOrganizationRequest:
    type: object
    required:
      - OrganizationId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization to be described.
  DescribeResourceResponse:
    type: object
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the described resource.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the described resource.
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the described resource.
      Type:
        $ref: '#/definitions/ResourceType'
        description: The type of the described resource.
      BookingOptions:
        $ref: '#/definitions/BookingOptions'
        description: The booking options for the described resource.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the resource: enabled (registered to Amazon WorkMail), disabled (deregistered or never registered to WorkMail), or deleted.'
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a resource was enabled for WorkMail, in UNIX epoch time format.'
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a resource was disabled from WorkMail, in UNIX epoch time format.'
  DescribeResourceRequest:
    type: object
    required:
      - OrganizationId
      - ResourceId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization for which the resource is described.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the resource to be described.
  DescribeUserResponse:
    type: object
    properties:
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the described user.
      Name:
        $ref: '#/definitions/UserName'
        description: The name for the user.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the user.
      DisplayName:
        $ref: '#/definitions/String'
        description: The display name of the user.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of a user: enabled (registered to Amazon WorkMail) or disabled (deregistered or never registered to WorkMail).'
      UserRole:
        $ref: '#/definitions/UserRole'
        description: 'In certain cases, other entities are modeled as users. If interoperability is enabled, resources are imported into Amazon WorkMail as users. Because different WorkMail organizations rely on different directory types, administrators can distinguish between an unregistered user (account is disabled and has a user role) and the directory administrators. The values are USER, RESOURCE, and SYSTEM_USER.'
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time at which the user was enabled for Amazon WorkMail usage, in UNIX epoch time format.'
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time at which the user was disabled for Amazon WorkMail usage, in UNIX epoch time format.'
  DescribeUserRequest:
    type: object
    required:
      - OrganizationId
      - UserId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the user exists.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the user to be described.
  DisassociateDelegateFromResourceResponse:
    type: object
    properties: {}
  DisassociateDelegateFromResourceRequest:
    type: object
    required:
      - OrganizationId
      - ResourceId
      - EntityId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the resource exists.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: 'The identifier of the resource from which delegates'' set members are removed. '
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The identifier for the member (user, group) to be removed from the resource''s delegates.'
  DisassociateMemberFromGroupResponse:
    type: object
    properties: {}
  DisassociateMemberFromGroupRequest:
    type: object
    required:
      - OrganizationId
      - GroupId
      - MemberId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the group exists.
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the group from which members are removed.
      MemberId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the member to be removed to the group.
  GetMailboxDetailsResponse:
    type: object
    properties:
      MailboxQuota:
        $ref: '#/definitions/MailboxQuota'
        description: 'The maximum allowed mailbox size, in MB, for the specified user.'
      MailboxSize:
        $ref: '#/definitions/MailboxSize'
        description: 'The current mailbox size, in MB, for the specified user.'
  GetMailboxDetailsRequest:
    type: object
    required:
      - OrganizationId
      - UserId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization that contains the user whose mailbox details are being requested.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the user whose mailbox details are being requested.
  ListAliasesResponse:
    type: object
    properties:
      Aliases:
        $ref: '#/definitions/Aliases'
        description: The entity's paginated aliases.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
  ListAliasesRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the entity exists.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the entity for which to list the aliases.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
  ListGroupMembersResponse:
    type: object
    properties:
      Members:
        $ref: '#/definitions/Members'
        description: The members associated to the group.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
  ListGroupMembersRequest:
    type: object
    required:
      - OrganizationId
      - GroupId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the group exists.
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the group to which the members (users or groups) are associated.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' The token to use to retrieve the next page of results. The first call does not contain any tokens.'
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
  ListGroupsResponse:
    type: object
    properties:
      Groups:
        $ref: '#/definitions/Groups'
        description: The overview of groups for an organization.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
  ListGroupsRequest:
    type: object
    required:
      - OrganizationId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the groups exist.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
  ListMailboxPermissionsResponse:
    type: object
    properties:
      Permissions:
        $ref: '#/definitions/Permissions'
        description: 'One page of the user, group, or resource mailbox permissions.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
  ListMailboxPermissionsRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: 'The identifier of the organization under which the user, group, or resource exists.'
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The identifier of the user, group, or resource for which to list mailbox permissions.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
  ListOrganizationsResponse:
    type: object
    properties:
      OrganizationSummaries:
        $ref: '#/definitions/OrganizationSummaries'
        description: The overview of owned organizations presented as a list of organization summaries.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
  ListOrganizationsRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
  ListResourceDelegatesResponse:
    type: object
    properties:
      Delegates:
        $ref: '#/definitions/ResourceDelegates'
        description: One page of the resource's delegates.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to paginate through the delegates associated with a resource. While results are still available, it has an associated value. When the last page is reached, the token is empty. '
  ListResourceDelegatesRequest:
    type: object
    required:
      - OrganizationId
      - ResourceId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization that contains the resource for which delegates are listed.
      ResourceId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the resource whose delegates are listed.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token used to paginate through the delegates associated with a resource.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The number of maximum results in a page.
  ListResourcesResponse:
    type: object
    properties:
      Resources:
        $ref: '#/definitions/Resources'
        description: One page of the organization's resource representation.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' The token used to paginate through all the organization''s resources. While results are still available, it has an associated value. When the last page is reached, the token is empty.'
  ListResourcesRequest:
    type: object
    required:
      - OrganizationId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the resources exist.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
  ListTagsForResourceResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tag key-value pairs.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceARN
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: The resource ARN.
  ResourceNotFoundException: {}
  ListUsersResponse:
    type: object
    properties:
      Users:
        $ref: '#/definitions/Users'
        description: The overview of users for an organization.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' The token to use to retrieve the next page of results. This value is `null` when there are no more results to return.'
  ListUsersRequest:
    type: object
    required:
      - OrganizationId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the users exist.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
  PutMailboxPermissionsResponse:
    type: object
    properties: {}
  PutMailboxPermissionsRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
      - GranteeId
      - PermissionValues
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: 'The identifier of the organization under which the user, group, or resource exists.'
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The identifier of the user, group, or resource for which to update mailbox permissions.'
      GranteeId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The identifier of the user, group, or resource to which to grant the permissions.'
      PermissionValues:
        $ref: '#/definitions/PermissionValues'
        description: 'The permissions granted to the grantee. SEND_AS allows the grantee to send email as the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF allows the grantee to send email on behalf of the owner of the mailbox (the grantee is not mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee full access to the mailbox, irrespective of other folder-level permissions set on the mailbox.'
  RegisterToWorkMailResponse:
    type: object
    properties: {}
  RegisterToWorkMailRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
      - Email
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: 'The identifier for the organization under which the user, group, or resource exists.'
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The identifier for the user, group, or resource to be updated.'
      Email:
        $ref: '#/definitions/EmailAddress'
        description: 'The email for the user, group, or resource to be updated.'
  EntityAlreadyRegisteredException: {}
  ResetPasswordResponse:
    type: object
    properties: {}
  ResetPasswordRequest:
    type: object
    required:
      - OrganizationId
      - UserId
      - Password
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier of the organization that contains the user for which the password is reset.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the user for whom the password is reset.
      Password:
        $ref: '#/definitions/Password'
        description: The new password for the user.
  TagResourceResponse:
    type: object
    properties: {}
  TagResourceRequest:
    type: object
    required:
      - ResourceARN
      - Tags
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: The resource ARN.
      Tags:
        $ref: '#/definitions/TagList'
        description: The tag key-value pairs.
  TooManyTagsException: {}
  UntagResourceResponse:
    type: object
    properties: {}
  UntagResourceRequest:
    type: object
    required:
      - ResourceARN
      - TagKeys
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: The resource ARN.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: The tag keys.
  UpdateMailboxQuotaResponse:
    type: object
    properties: {}
  UpdateMailboxQuotaRequest:
    type: object
    required:
      - OrganizationId
      - UserId
      - MailboxQuota
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization that contains the user for whom to update the mailbox quota.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifer for the user for whom to update the mailbox quota.
      MailboxQuota:
        $ref: '#/definitions/MailboxQuota'
        description: 'The updated mailbox quota, in MB, for the specified user.'
  UpdatePrimaryEmailAddressResponse:
    type: object
    properties: {}
  UpdatePrimaryEmailAddressRequest:
    type: object
    required:
      - OrganizationId
      - EntityId
      - Email
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: 'The organization that contains the user, group, or resource to update.'
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The user, group, or resource to update.'
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The value of the email to be updated as primary.
  UpdateResourceResponse:
    type: object
    properties: {}
  UpdateResourceRequest:
    type: object
    required:
      - OrganizationId
      - ResourceId
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization for which the resource is updated.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the resource to be updated.
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the resource to be updated.
      BookingOptions:
        $ref: '#/definitions/BookingOptions'
        description: The resource's booking options to be updated.
  InvalidConfigurationException: {}
  EmailAddress:
    type: string
    pattern: '[a-zA-Z0-9._%+-]{1,64}@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}'
    minLength: 1
    maxLength: 254
  Aliases:
    type: array
    items:
      $ref: '#/definitions/EmailAddress'
  AmazonResourceName:
    type: string
    minLength: 1
    maxLength: 1011
  OrganizationId:
    type: string
    pattern: '^m-[0-9a-f]{32}$'
  ResourceId:
    type: string
    pattern: '^r-[0-9a-f]{32}$'
  WorkMailIdentifier:
    type: string
    minLength: 12
    maxLength: 256
  Boolean:
    type: boolean
  BookingOptions:
    type: object
    properties:
      AutoAcceptRequests:
        $ref: '#/definitions/Boolean'
        description: 'The resource''s ability to automatically reply to requests. If disabled, delegates must be associated to the resource.'
      AutoDeclineRecurringRequests:
        $ref: '#/definitions/Boolean'
        description: The resource's ability to automatically decline any recurring requests.
      AutoDeclineConflictingRequests:
        $ref: '#/definitions/Boolean'
        description: The resource's ability to automatically decline any conflicting requests.
    description: At least one delegate must be associated to the resource to disable automatic replies from the resource.
  GroupName:
    type: string
    pattern: '[\u0020-\u00FF]+'
    minLength: 1
    maxLength: 256
  ResourceName:
    type: string
    pattern: '[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9]{2,})?'
    minLength: 1
    maxLength: 20
  ResourceType:
    type: string
    enum:
      - ROOM
      - EQUIPMENT
  UserName:
    type: string
    pattern: '[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9]{2,})?'
    minLength: 1
    maxLength: 64
  String:
    type: string
    maxLength: 256
  Password:
    type: string
    pattern: '[\u0020-\u00FF]+'
    maxLength: 256
    format: password
  MemberType:
    type: string
    enum:
      - GROUP
      - USER
  Delegate:
    type: object
    required:
      - Id
      - Type
    properties:
      Id:
        $ref: '#/definitions/String'
        description: The identifier for the user or group associated as the resource's delegate.
      Type:
        $ref: '#/definitions/MemberType'
        description: 'The type of the delegate: user or group.'
    description: 'The name of the attribute, which is one of the values defined in the UserAttribute enumeration.'
  EntityState:
    type: string
    enum:
      - ENABLED
      - DISABLED
      - DELETED
  Timestamp:
    type: string
    format: date-time
  OrganizationName:
    type: string
    pattern: '^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*'
    minLength: 1
    maxLength: 62
  UserRole:
    type: string
    enum:
      - USER
      - RESOURCE
      - SYSTEM_USER
  MailboxQuota:
    type: integer
    minimum: 1
  MailboxSize:
    type: number
    format: double
    minimum: 0
  Group:
    type: object
    properties:
      Id:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the group.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the group.
      Name:
        $ref: '#/definitions/GroupName'
        description: The name of the group.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the group, which can be ENABLED, DISABLED, or DELETED.'
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the group was enabled for Amazon WorkMail use.
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the group was disabled from Amazon WorkMail use.
    description: The representation of an Amazon WorkMail group.
  Groups:
    type: array
    items:
      $ref: '#/definitions/Group'
  NextToken:
    type: string
    minLength: 1
    maxLength: 1024
  MaxResults:
    type: integer
    minimum: 1
    maximum: 100
  Members:
    type: array
    items:
      $ref: '#/definitions/Member'
  Permissions:
    type: array
    items:
      $ref: '#/definitions/Permission'
  OrganizationSummaries:
    type: array
    items:
      $ref: '#/definitions/OrganizationSummary'
  ResourceDelegates:
    type: array
    items:
      $ref: '#/definitions/Delegate'
  Resources:
    type: array
    items:
      $ref: '#/definitions/Resource'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 0
    maxItems: 50
  Users:
    type: array
    items:
      $ref: '#/definitions/User'
  Member:
    type: object
    properties:
      Id:
        $ref: '#/definitions/String'
        description: The identifier of the member.
      Name:
        $ref: '#/definitions/String'
        description: The name of the member.
      Type:
        $ref: '#/definitions/MemberType'
        description: A member can be a user or group.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the member, which can be ENABLED, DISABLED, or DELETED.'
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the member was enabled for Amazon WorkMail use.
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the member was disabled from Amazon WorkMail use.
    description: The representation of a user or group.
  OrganizationSummary:
    type: object
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization.
      Alias:
        $ref: '#/definitions/OrganizationName'
        description: The alias associated with the organization.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The error message associated with the organization. It is only present if unexpected behavior has occurred with regards to the organization. It provides insight or solutions regarding unexpected behavior.
      State:
        $ref: '#/definitions/String'
        description: The state associated with the organization.
    description: The representation of an organization.
  PermissionValues:
    type: array
    items:
      $ref: '#/definitions/PermissionType'
  Permission:
    type: object
    required:
      - GranteeId
      - GranteeType
      - PermissionValues
    properties:
      GranteeId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The identifier of the user, group, or resource to which the permissions are granted.'
      GranteeType:
        $ref: '#/definitions/MemberType'
        description: 'The type of user, group, or resource referred to in GranteeId.'
      PermissionValues:
        $ref: '#/definitions/PermissionValues'
        description: 'The permissions granted to the grantee. SEND_AS allows the grantee to send email as the owner of the mailbox (the grantee is not mentioned on these emails). SEND_ON_BEHALF allows the grantee to send email on behalf of the owner of the mailbox (the grantee is not mentioned as the physical sender of these emails). FULL_ACCESS allows the grantee full access to the mailbox, irrespective of other folder-level permissions set on the mailbox.'
    description: 'Permission granted to a user, group, or resource to access a certain aspect of another user, group, or resource mailbox.'
  PermissionType:
    type: string
    enum:
      - FULL_ACCESS
      - SEND_AS
      - SEND_ON_BEHALF
  Resource:
    type: object
    properties:
      Id:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the resource.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the resource.
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the resource.
      Type:
        $ref: '#/definitions/ResourceType'
        description: 'The type of the resource: equipment or room.'
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the resource, which can be ENABLED, DISABLED, or DELETED.'
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the resource was enabled for Amazon WorkMail use.
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the resource was disabled from Amazon WorkMail use.
    description: The representation of a resource.
  TagKey:
    type: string
    minLength: 1
    maxLength: 128
  TagValue:
    type: string
    minLength: 0
    maxLength: 256
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag.
    description: Describes a tag applied to a resource.
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 0
    maxItems: 50
  User:
    type: object
    properties:
      Id:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the user.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the user.
      Name:
        $ref: '#/definitions/UserName'
        description: The name of the user.
      DisplayName:
        $ref: '#/definitions/String'
        description: The display name of the user.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the user, which can be ENABLED, DISABLED, or DELETED.'
      UserRole:
        $ref: '#/definitions/UserRole'
        description: The role of the user.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the user was enabled for Amazon WorkMail use.
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the user was disabled from Amazon WorkMail use.
    description: The representation of an Amazon WorkMail user.
