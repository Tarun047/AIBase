swagger: '2.0'
info:
  version: '2010-08-01'
  x-release: v4
  title: Amazon CloudWatch
  description: '<p>Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.</p> <p>CloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.</p> <p>In addition to monitoring the built-in metrics that come with AWS, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: monitoring
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/monitoring-2010-08-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/monitoring/'
host: monitoring.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://monitoring.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CloudWatch multi-region endpoint
  - url: 'https://monitoring.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CloudWatch multi-region endpoint
  - url: 'http://monitoring.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudWatch endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://monitoring.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudWatch endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - text/xml
produces:
  - text/xml
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#Action=DeleteAlarms':
    get:
      x-aws-operation-name: DeleteAlarms
      operationId: GET DeleteAlarms
      description: 'Deletes the specified alarms. You can delete up to 50 alarms in one operation. In the event of an error, no alarms are deleted.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: AlarmNames
          in: query
          required: true
          description: The alarms to be deleted.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteAlarms
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteAlarms
      operationId: POST DeleteAlarms
      description: 'Deletes the specified alarms. You can delete up to 50 alarms in one operation. In the event of an error, no alarms are deleted.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
      parameters:
        - name: AlarmNames
          in: formData
          required: true
          description: The alarms to be deleted.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteAlarms
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DeleteAnomalyDetector':
    get:
      x-aws-operation-name: DeleteAnomalyDetector
      operationId: GET DeleteAnomalyDetector
      description: Deletes the specified anomaly detection model from your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAnomalyDetectorOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: Namespace
          in: query
          required: true
          description: The namespace associated with the anomaly detection model to delete.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: query
          required: true
          description: The metric name associated with the anomaly detection model to delete.
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: query
          required: false
          description: The metric dimensions associated with the anomaly detection model to delete.
          type: array
          items:
            type: string
        - name: Stat
          in: query
          required: true
          description: The statistic associated with the anomaly detection model to delete.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteAnomalyDetector
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteAnomalyDetector
      operationId: POST DeleteAnomalyDetector
      description: Deletes the specified anomaly detection model from your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAnomalyDetectorOutput'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: Namespace
          in: formData
          required: true
          description: The namespace associated with the anomaly detection model to delete.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: formData
          required: true
          description: The metric name associated with the anomaly detection model to delete.
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: formData
          required: false
          description: The metric dimensions associated with the anomaly detection model to delete.
          type: array
          items:
            type: string
        - name: Stat
          in: formData
          required: true
          description: The statistic associated with the anomaly detection model to delete.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteAnomalyDetector
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DeleteDashboards':
    get:
      x-aws-operation-name: DeleteDashboards
      operationId: GET DeleteDashboards
      description: 'Deletes all dashboards that you specify. You may specify up to 100 dashboards to delete. If there is an error during this call, no dashboards are deleted.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardNames
          in: query
          required: true
          description: The dashboards to be deleted. This parameter is required.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDashboards
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteDashboards
      operationId: POST DeleteDashboards
      description: 'Deletes all dashboards that you specify. You may specify up to 100 dashboards to delete. If there is an error during this call, no dashboards are deleted.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardNames
          in: formData
          required: true
          description: The dashboards to be deleted. This parameter is required.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteDashboards
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DeleteInsightRules':
    get:
      x-aws-operation-name: DeleteInsightRules
      operationId: GET DeleteInsightRules
      description: '<p>Permanently deletes the specified Contributor Insights rules.</p> <p>If you create a rule, delete it, and then re-create it with the same name, historical data from the first time the rule was created may or may not be available.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInsightRulesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: RuleNames
          in: query
          required: true
          description: 'An array of the rule names to delete. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DeleteInsightRules
      operationId: POST DeleteInsightRules
      description: '<p>Permanently deletes the specified Contributor Insights rules.</p> <p>If you create a rule, delete it, and then re-create it with the same name, historical data from the first time the rule was created may or may not be available.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteInsightRulesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: RuleNames
          in: formData
          required: true
          description: 'An array of the rule names to delete. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DeleteInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DescribeAlarmHistory':
    get:
      x-aws-operation-name: DescribeAlarmHistory
      operationId: GET DescribeAlarmHistory
      description: '<p>Retrieves the history for the specified alarm. You can filter the results by date range or item type. If an alarm name is not specified, the histories for all alarms are returned.</p> <p>CloudWatch retains the history of an alarm even if you delete the alarm.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmHistoryOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: AlarmName
          in: query
          required: false
          description: The name of the alarm.
          type: string
          minLength: 1
          maxLength: 255
        - name: HistoryItemType
          in: query
          required: false
          description: The type of alarm histories to retrieve.
          type: string
          enum:
            - ConfigurationUpdate
            - StateUpdate
            - Action
        - name: StartDate
          in: query
          required: false
          description: The starting date to retrieve alarm history.
          type: string
          format: date-time
        - name: EndDate
          in: query
          required: false
          description: The ending date to retrieve alarm history.
          type: string
          format: date-time
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of alarm history records to retrieve.
          type: integer
          minimum: 1
          maximum: 100
        - name: NextToken
          in: query
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAlarmHistory
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAlarmHistory
      operationId: POST DescribeAlarmHistory
      description: '<p>Retrieves the history for the specified alarm. You can filter the results by date range or item type. If an alarm name is not specified, the histories for all alarms are returned.</p> <p>CloudWatch retains the history of an alarm even if you delete the alarm.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmHistoryOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: AlarmName
          in: formData
          required: false
          description: The name of the alarm.
          type: string
          minLength: 1
          maxLength: 255
        - name: HistoryItemType
          in: formData
          required: false
          description: The type of alarm histories to retrieve.
          type: string
          enum:
            - ConfigurationUpdate
            - StateUpdate
            - Action
        - name: StartDate
          in: formData
          required: false
          description: The starting date to retrieve alarm history.
          type: string
          format: date-time
        - name: EndDate
          in: formData
          required: false
          description: The ending date to retrieve alarm history.
          type: string
          format: date-time
        - name: MaxRecords
          in: formData
          required: false
          description: The maximum number of alarm history records to retrieve.
          type: integer
          minimum: 1
          maximum: 100
        - name: NextToken
          in: formData
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAlarmHistory
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DescribeAlarms':
    get:
      x-aws-operation-name: DescribeAlarms
      operationId: GET DescribeAlarms
      description: 'Retrieves the specified alarms. If no alarms are specified, all alarms are returned. Alarms can be retrieved by using only a prefix for the alarm name, the alarm state, or a prefix for any action.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: AlarmNames
          in: query
          required: false
          description: The names of the alarms.
          type: array
          items:
            type: string
        - name: AlarmNamePrefix
          in: query
          required: false
          description: 'The alarm name prefix. If this parameter is specified, you cannot specify <code>AlarmNames</code>.'
          type: string
          minLength: 1
          maxLength: 255
        - name: StateValue
          in: query
          required: false
          description: The state value to be used in matching alarms.
          type: string
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
        - name: ActionPrefix
          in: query
          required: false
          description: The action name prefix.
          type: string
          minLength: 1
          maxLength: 1024
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of alarm descriptions to retrieve.
          type: integer
          minimum: 1
          maximum: 100
        - name: NextToken
          in: query
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAlarms
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAlarms
      operationId: POST DescribeAlarms
      description: 'Retrieves the specified alarms. If no alarms are specified, all alarms are returned. Alarms can be retrieved by using only a prefix for the alarm name, the alarm state, or a prefix for any action.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: AlarmNames
          in: formData
          required: false
          description: The names of the alarms.
          type: array
          items:
            type: string
        - name: AlarmNamePrefix
          in: formData
          required: false
          description: 'The alarm name prefix. If this parameter is specified, you cannot specify <code>AlarmNames</code>.'
          type: string
          minLength: 1
          maxLength: 255
        - name: StateValue
          in: formData
          required: false
          description: The state value to be used in matching alarms.
          type: string
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
        - name: ActionPrefix
          in: formData
          required: false
          description: The action name prefix.
          type: string
          minLength: 1
          maxLength: 1024
        - name: MaxRecords
          in: formData
          required: false
          description: The maximum number of alarm descriptions to retrieve.
          type: integer
          minimum: 1
          maximum: 100
        - name: NextToken
          in: formData
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAlarms
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DescribeAlarmsForMetric':
    get:
      x-aws-operation-name: DescribeAlarmsForMetric
      operationId: GET DescribeAlarmsForMetric
      description: 'Retrieves the alarms for the specified metric. To filter the results, specify a statistic, period, or unit.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsForMetricOutput'
      parameters:
        - name: MetricName
          in: query
          required: true
          description: The name of the metric.
          type: string
          minLength: 1
          maxLength: 255
        - name: Namespace
          in: query
          required: true
          description: The namespace of the metric.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: Statistic
          in: query
          required: false
          description: 'The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>.'
          type: string
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
        - name: ExtendedStatistic
          in: query
          required: false
          description: The percentile statistic for the metric. Specify a value between p0.0 and p100.
          type: string
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
        - name: Dimensions
          in: query
          required: false
          description: 'The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.'
          type: array
          items:
            type: string
        - name: Period
          in: query
          required: false
          description: 'The period, in seconds, over which the statistic is applied.'
          type: integer
          minimum: 1
        - name: Unit
          in: query
          required: false
          description: The unit for the metric.
          type: string
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAlarmsForMetric
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAlarmsForMetric
      operationId: POST DescribeAlarmsForMetric
      description: 'Retrieves the alarms for the specified metric. To filter the results, specify a statistic, period, or unit.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAlarmsForMetricOutput'
      parameters:
        - name: MetricName
          in: formData
          required: true
          description: The name of the metric.
          type: string
          minLength: 1
          maxLength: 255
        - name: Namespace
          in: formData
          required: true
          description: The namespace of the metric.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: Statistic
          in: formData
          required: false
          description: 'The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>.'
          type: string
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
        - name: ExtendedStatistic
          in: formData
          required: false
          description: The percentile statistic for the metric. Specify a value between p0.0 and p100.
          type: string
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
        - name: Dimensions
          in: formData
          required: false
          description: 'The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.'
          type: array
          items:
            type: string
        - name: Period
          in: formData
          required: false
          description: 'The period, in seconds, over which the statistic is applied.'
          type: integer
          minimum: 1
        - name: Unit
          in: formData
          required: false
          description: The unit for the metric.
          type: string
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAlarmsForMetric
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DescribeAnomalyDetectors':
    get:
      x-aws-operation-name: DescribeAnomalyDetectors
      operationId: GET DescribeAnomalyDetectors
      description: 'Lists the anomaly detection models that you have created in your account. You can list all models in your account or filter the results to only the models that are related to a certain namespace, metric name, or metric dimension.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAnomalyDetectorsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: Use the token returned by the previous operation to request the next page of results.
          type: string
        - name: MaxResults
          in: query
          required: false
          description: '<p>The maximum number of results to return in one operation. The maximum value you can specify is 10.</p> <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p>'
          type: integer
          minimum: 1
        - name: Namespace
          in: query
          required: false
          description: Limits the results to only the anomaly detection models that are associated with the specified namespace.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: query
          required: false
          description: 'Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they''re all returned.'
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: query
          required: false
          description: 'Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they''re all returned.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAnomalyDetectors
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeAnomalyDetectors
      operationId: POST DescribeAnomalyDetectors
      description: 'Lists the anomaly detection models that you have created in your account. You can list all models in your account or filter the results to only the models that are related to a certain namespace, metric name, or metric dimension.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAnomalyDetectorsOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: NextToken
          in: formData
          required: false
          description: Use the token returned by the previous operation to request the next page of results.
          type: string
        - name: MaxResults
          in: formData
          required: false
          description: '<p>The maximum number of results to return in one operation. The maximum value you can specify is 10.</p> <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p>'
          type: integer
          minimum: 1
        - name: Namespace
          in: formData
          required: false
          description: Limits the results to only the anomaly detection models that are associated with the specified namespace.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: formData
          required: false
          description: 'Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they''re all returned.'
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: formData
          required: false
          description: 'Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they''re all returned.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeAnomalyDetectors
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DescribeInsightRules':
    get:
      x-aws-operation-name: DescribeInsightRules
      operationId: GET DescribeInsightRules
      description: '<p>Returns a list of all the Contributor Insights rules in your account. All rules in your account are returned with a single operation.</p> <p>For more information about Contributor Insights, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using Contributor Insights to Analyze High-Cardinality Data</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInsightRulesOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: NextToken
          in: query
          required: false
          description: Reserved for future use.
          type: string
        - name: MaxResults
          in: query
          required: false
          description: 'This parameter is not currently used. Reserved for future use. If it is used in the future, the maximum value may be different.'
          type: integer
          minimum: 1
          maximum: 500
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DescribeInsightRules
      operationId: POST DescribeInsightRules
      description: '<p>Returns a list of all the Contributor Insights rules in your account. All rules in your account are returned with a single operation.</p> <p>For more information about Contributor Insights, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using Contributor Insights to Analyze High-Cardinality Data</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeInsightRulesOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: NextToken
          in: formData
          required: false
          description: Reserved for future use.
          type: string
        - name: MaxResults
          in: formData
          required: false
          description: 'This parameter is not currently used. Reserved for future use. If it is used in the future, the maximum value may be different.'
          type: integer
          minimum: 1
          maximum: 500
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DescribeInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DisableAlarmActions':
    get:
      x-aws-operation-name: DisableAlarmActions
      operationId: GET DisableAlarmActions
      description: 'Disables the actions for the specified alarms. When an alarm''s actions are disabled, the alarm actions do not execute when the alarm state changes.'
      responses:
        '200':
          description: Success
      parameters:
        - name: AlarmNames
          in: query
          required: true
          description: The names of the alarms.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DisableAlarmActions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableAlarmActions
      operationId: POST DisableAlarmActions
      description: 'Disables the actions for the specified alarms. When an alarm''s actions are disabled, the alarm actions do not execute when the alarm state changes.'
      responses:
        '200':
          description: Success
      parameters:
        - name: AlarmNames
          in: formData
          required: true
          description: The names of the alarms.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DisableAlarmActions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=DisableInsightRules':
    get:
      x-aws-operation-name: DisableInsightRules
      operationId: GET DisableInsightRules
      description: 'Disables the specified Contributor Insights rules. When rules are disabled, they do not analyze log groups and do not incur costs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableInsightRulesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: RuleNames
          in: query
          required: true
          description: 'An array of the rule names to disable. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DisableInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: DisableInsightRules
      operationId: POST DisableInsightRules
      description: 'Disables the specified Contributor Insights rules. When rules are disabled, they do not analyze log groups and do not incur costs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisableInsightRulesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: RuleNames
          in: formData
          required: true
          description: 'An array of the rule names to disable. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - DisableInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=EnableAlarmActions':
    get:
      x-aws-operation-name: EnableAlarmActions
      operationId: GET EnableAlarmActions
      description: Enables the actions for the specified alarms.
      responses:
        '200':
          description: Success
      parameters:
        - name: AlarmNames
          in: query
          required: true
          description: The names of the alarms.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - EnableAlarmActions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableAlarmActions
      operationId: POST EnableAlarmActions
      description: Enables the actions for the specified alarms.
      responses:
        '200':
          description: Success
      parameters:
        - name: AlarmNames
          in: formData
          required: true
          description: The names of the alarms.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - EnableAlarmActions
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=EnableInsightRules':
    get:
      x-aws-operation-name: EnableInsightRules
      operationId: GET EnableInsightRules
      description: 'Enables the specified Contributor Insights rules. When rules are enabled, they immediately begin analyzing log data.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableInsightRulesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: RuleNames
          in: query
          required: true
          description: 'An array of the rule names to enable. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - EnableInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: EnableInsightRules
      operationId: POST EnableInsightRules
      description: 'Enables the specified Contributor Insights rules. When rules are enabled, they immediately begin analyzing log data.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EnableInsightRulesOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: RuleNames
          in: formData
          required: true
          description: 'An array of the rule names to enable. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - EnableInsightRules
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=GetDashboard':
    get:
      x-aws-operation-name: GetDashboard
      operationId: GET GetDashboard
      description: '<p>Displays the details of the dashboard that you specify.</p> <p>To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code> to create the copy.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDashboardOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardName
          in: query
          required: true
          description: The name of the dashboard to be described.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetDashboard
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetDashboard
      operationId: POST GetDashboard
      description: '<p>Displays the details of the dashboard that you specify.</p> <p>To copy an existing dashboard, use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code> to create the copy.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDashboardOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: DashboardNotFoundError
          schema:
            $ref: '#/definitions/DashboardNotFoundError'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardName
          in: formData
          required: true
          description: The name of the dashboard to be described.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetDashboard
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=GetInsightRuleReport':
    get:
      x-aws-operation-name: GetInsightRuleReport
      operationId: GET GetInsightRuleReport
      description: '<p>This operation returns the time series data collected by a Contributor Insights rule. The data includes the identity and number of contributors to the log group.</p> <p>You can also optionally return one or more statistics about each data point in the time series. These statistics can include the following:</p> <ul> <li> <p> <code>UniqueContributors</code> -- the number of unique contributors for each data point.</p> </li> <li> <p> <code>MaxContributorValue</code> -- the value of the top contributor for each data point. The identity of the contributor may change for each data point in the graph.</p> <p>If this rule aggregates by COUNT, the top contributor for each data point is the contributor with the most occurrences in that period. If the rule aggregates by SUM, the top contributor is the contributor with the highest sum in the log field specified by the rule''s <code>Value</code>, during that period.</p> </li> <li> <p> <code>SampleCount</code> -- the number of data points matched by the rule.</p> </li> <li> <p> <code>Sum</code> -- the sum of the values from all contributors during the time period represented by that data point.</p> </li> <li> <p> <code>Minimum</code> -- the minimum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Maximum</code> -- the maximum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Average</code> -- the average value from all contributors during the time period represented by that data point.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInsightRuleReportOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: RuleName
          in: query
          required: true
          description: The name of the rule that you want to see data from.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 128
        - name: StartTime
          in: query
          required: true
          description: 'The start time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
          type: string
          format: date-time
        - name: EndTime
          in: query
          required: true
          description: 'The end time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
          type: string
          format: date-time
        - name: Period
          in: query
          required: true
          description: 'The period, in seconds, to use for the statistics in the <code>InsightRuleMetricDatapoint</code> results.'
          type: integer
          minimum: 1
        - name: MaxContributorCount
          in: query
          required: false
          description: 'The maximum number of contributors to include in the report. The range is 1 to 100. If you omit this, the default of 10 is used.'
          type: integer
        - name: Metrics
          in: query
          required: false
          description: '<p>Specifies which metrics to use for aggregation of contributor values for the report. You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>UniqueContributors</code> -- the number of unique contributors for each data point.</p> </li> <li> <p> <code>MaxContributorValue</code> -- the value of the top contributor for each data point. The identity of the contributor may change for each data point in the graph.</p> <p>If this rule aggregates by COUNT, the top contributor for each data point is the contributor with the most occurrences in that period. If the rule aggregates by SUM, the top contributor is the contributor with the highest sum in the log field specified by the rule''s <code>Value</code>, during that period.</p> </li> <li> <p> <code>SampleCount</code> -- the number of data points matched by the rule.</p> </li> <li> <p> <code>Sum</code> -- the sum of the values from all contributors during the time period represented by that data point.</p> </li> <li> <p> <code>Minimum</code> -- the minimum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Maximum</code> -- the maximum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Average</code> -- the average value from all contributors during the time period represented by that data point.</p> </li> </ul>'
          type: array
          items:
            type: string
        - name: OrderBy
          in: query
          required: false
          description: Determines what statistic to use to rank the contributors. Valid values are SUM and MAXIMUM.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 32
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetInsightRuleReport
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetInsightRuleReport
      operationId: POST GetInsightRuleReport
      description: '<p>This operation returns the time series data collected by a Contributor Insights rule. The data includes the identity and number of contributors to the log group.</p> <p>You can also optionally return one or more statistics about each data point in the time series. These statistics can include the following:</p> <ul> <li> <p> <code>UniqueContributors</code> -- the number of unique contributors for each data point.</p> </li> <li> <p> <code>MaxContributorValue</code> -- the value of the top contributor for each data point. The identity of the contributor may change for each data point in the graph.</p> <p>If this rule aggregates by COUNT, the top contributor for each data point is the contributor with the most occurrences in that period. If the rule aggregates by SUM, the top contributor is the contributor with the highest sum in the log field specified by the rule''s <code>Value</code>, during that period.</p> </li> <li> <p> <code>SampleCount</code> -- the number of data points matched by the rule.</p> </li> <li> <p> <code>Sum</code> -- the sum of the values from all contributors during the time period represented by that data point.</p> </li> <li> <p> <code>Minimum</code> -- the minimum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Maximum</code> -- the maximum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Average</code> -- the average value from all contributors during the time period represented by that data point.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetInsightRuleReportOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: RuleName
          in: formData
          required: true
          description: The name of the rule that you want to see data from.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 128
        - name: StartTime
          in: formData
          required: true
          description: 'The start time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
          type: string
          format: date-time
        - name: EndTime
          in: formData
          required: true
          description: 'The end time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
          type: string
          format: date-time
        - name: Period
          in: formData
          required: true
          description: 'The period, in seconds, to use for the statistics in the <code>InsightRuleMetricDatapoint</code> results.'
          type: integer
          minimum: 1
        - name: MaxContributorCount
          in: formData
          required: false
          description: 'The maximum number of contributors to include in the report. The range is 1 to 100. If you omit this, the default of 10 is used.'
          type: integer
        - name: Metrics
          in: formData
          required: false
          description: '<p>Specifies which metrics to use for aggregation of contributor values for the report. You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>UniqueContributors</code> -- the number of unique contributors for each data point.</p> </li> <li> <p> <code>MaxContributorValue</code> -- the value of the top contributor for each data point. The identity of the contributor may change for each data point in the graph.</p> <p>If this rule aggregates by COUNT, the top contributor for each data point is the contributor with the most occurrences in that period. If the rule aggregates by SUM, the top contributor is the contributor with the highest sum in the log field specified by the rule''s <code>Value</code>, during that period.</p> </li> <li> <p> <code>SampleCount</code> -- the number of data points matched by the rule.</p> </li> <li> <p> <code>Sum</code> -- the sum of the values from all contributors during the time period represented by that data point.</p> </li> <li> <p> <code>Minimum</code> -- the minimum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Maximum</code> -- the maximum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Average</code> -- the average value from all contributors during the time period represented by that data point.</p> </li> </ul>'
          type: array
          items:
            type: string
        - name: OrderBy
          in: formData
          required: false
          description: Determines what statistic to use to rank the contributors. Valid values are SUM and MAXIMUM.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 32
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetInsightRuleReport
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=GetMetricData':
    get:
      x-aws-operation-name: GetMetricData
      operationId: GET GetMetricData
      description: '<p>You can use the <code>GetMetricData</code> API to retrieve as many as 100 different metrics in a single request, with a total of as many as 100,800 data points. You can also optionally perform math expressions on the values of the returned statistics, to create new time series that represent new insights into your data. For example, using Lambda metrics, you could divide the Errors metric by the Invocations metric to get an error rate time series. For more information about metric math expressions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Calls to the <code>GetMetricData</code> API have a different pricing structure than calls to <code>GetMetricStatistics</code>. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>If you omit <code>Unit</code> in your request, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricDataOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: MetricDataQueries
          in: query
          required: true
          description: 'The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code> structures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. '
          type: array
          items:
            type: string
        - name: StartTime
          in: query
          required: true
          description: '<p>The time stamp indicating the earliest data to be returned.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. </p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.</p>'
          type: string
          format: date-time
        - name: EndTime
          in: query
          required: true
          description: '<p>The time stamp indicating the latest data to be returned.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp.</p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.</p>'
          type: string
          format: date-time
        - name: NextToken
          in: query
          required: false
          description: 'Include this value, if it was returned by the previous call, to get the next set of data points.'
          type: string
        - name: ScanBy
          in: query
          required: false
          description: The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates when the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates when the <code>MaxDatapoints</code> limit is reached.
          type: string
          enum:
            - TimestampDescending
            - TimestampAscending
        - name: MaxDatapoints
          in: query
          required: false
          description: 'The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.'
          type: integer
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetMetricData
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetMetricData
      operationId: POST GetMetricData
      description: '<p>You can use the <code>GetMetricData</code> API to retrieve as many as 100 different metrics in a single request, with a total of as many as 100,800 data points. You can also optionally perform math expressions on the values of the returned statistics, to create new time series that represent new insights into your data. For example, using Lambda metrics, you could divide the Errors metric by the Invocations metric to get an error rate time series. For more information about metric math expressions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Calls to the <code>GetMetricData</code> API have a different pricing structure than calls to <code>GetMetricStatistics</code>. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>If you omit <code>Unit</code> in your request, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricDataOutput'
        '480':
          description: InvalidNextToken
          schema:
            $ref: '#/definitions/InvalidNextToken'
      parameters:
        - name: MetricDataQueries
          in: formData
          required: true
          description: 'The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code> structures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. '
          type: array
          items:
            type: string
        - name: StartTime
          in: formData
          required: true
          description: '<p>The time stamp indicating the earliest data to be returned.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. </p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.</p>'
          type: string
          format: date-time
        - name: EndTime
          in: formData
          required: true
          description: '<p>The time stamp indicating the latest data to be returned.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp.</p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.</p>'
          type: string
          format: date-time
        - name: NextToken
          in: formData
          required: false
          description: 'Include this value, if it was returned by the previous call, to get the next set of data points.'
          type: string
        - name: ScanBy
          in: formData
          required: false
          description: The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates when the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates when the <code>MaxDatapoints</code> limit is reached.
          type: string
          enum:
            - TimestampDescending
            - TimestampAscending
        - name: MaxDatapoints
          in: formData
          required: false
          description: 'The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.'
          type: integer
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetMetricData
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=GetMetricStatistics':
    get:
      x-aws-operation-name: GetMetricStatistics
      operationId: GET GetMetricStatistics
      description: '<p>Gets statistics for the specified metric.</p> <p>The maximum number of data points returned from a single call is 1,440. If you request more than 1,440 data points, CloudWatch returns an error. To reduce the number of data points, you can narrow the specified time range and make multiple requests across adjacent time ranges, or you can increase the specified period. Data points are not returned in chronological order.</p> <p>CloudWatch aggregates data points based on the length of the period that you specify. For example, if you request statistics with a one-hour period, CloudWatch aggregates all data points with time stamps that fall within each one-hour period. Therefore, the number of values aggregated by CloudWatch is larger than the number of data points returned.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The SampleCount value of the statistic set is 1.</p> </li> <li> <p>The Min and the Max values of the statistic set are equal.</p> </li> </ul> <p>Percentile statistics are not available for metrics when any of the metric values are negative numbers.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.</p> <p>For information about metrics and dimensions supported by AWS services, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricStatisticsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: Namespace
          in: query
          required: true
          description: 'The namespace of the metric, with or without spaces.'
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: query
          required: true
          description: 'The name of the metric, with or without spaces.'
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: query
          required: false
          description: 'The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can''t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.'
          type: array
          items:
            type: string
        - name: StartTime
          in: query
          required: true
          description: '<p>The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p>'
          type: string
          format: date-time
        - name: EndTime
          in: query
          required: true
          description: '<p>The time stamp that determines the last data point to return.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>'
          type: string
          format: date-time
        - name: Period
          in: query
          required: true
          description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p> </li> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>'
          type: integer
          minimum: 1
        - name: Statistics
          in: query
          required: false
          description: 'The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.'
          type: array
          items:
            type: string
        - name: ExtendedStatistics
          in: query
          required: false
          description: 'The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.'
          type: array
          items:
            type: string
        - name: Unit
          in: query
          required: false
          description: 'The unit for a given metric. If you omit <code>Unit</code>, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.'
          type: string
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetMetricStatistics
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetMetricStatistics
      operationId: POST GetMetricStatistics
      description: '<p>Gets statistics for the specified metric.</p> <p>The maximum number of data points returned from a single call is 1,440. If you request more than 1,440 data points, CloudWatch returns an error. To reduce the number of data points, you can narrow the specified time range and make multiple requests across adjacent time ranges, or you can increase the specified period. Data points are not returned in chronological order.</p> <p>CloudWatch aggregates data points based on the length of the period that you specify. For example, if you request statistics with a one-hour period, CloudWatch aggregates all data points with time stamps that fall within each one-hour period. Therefore, the number of values aggregated by CloudWatch is larger than the number of data points returned.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The SampleCount value of the statistic set is 1.</p> </li> <li> <p>The Min and the Max values of the statistic set are equal.</p> </li> </ul> <p>Percentile statistics are not available for metrics when any of the metric values are negative numbers.</p> <p>Amazon CloudWatch retains metric data as follows:</p> <ul> <li> <p>Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a <code>StorageResolution</code> of 1.</p> </li> <li> <p>Data points with a period of 60 seconds (1-minute) are available for 15 days.</p> </li> <li> <p>Data points with a period of 300 seconds (5-minute) are available for 63 days.</p> </li> <li> <p>Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months).</p> </li> </ul> <p>Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.</p> <p>CloudWatch started retaining 5-minute and 1-hour metric data as of July 9, 2016.</p> <p>For information about metrics and dimensions supported by AWS services, see the <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CW_Support_For_AWS.html">Amazon CloudWatch Metrics and Dimensions Reference</a> in the <i>Amazon CloudWatch User Guide</i>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricStatisticsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: Namespace
          in: formData
          required: true
          description: 'The namespace of the metric, with or without spaces.'
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: formData
          required: true
          description: 'The name of the metric, with or without spaces.'
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: formData
          required: false
          description: 'The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can''t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.'
          type: array
          items:
            type: string
        - name: StartTime
          in: formData
          required: true
          description: '<p>The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p>'
          type: string
          format: date-time
        - name: EndTime
          in: formData
          required: true
          description: '<p>The time stamp that determines the last data point to return.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>'
          type: string
          format: date-time
        - name: Period
          in: formData
          required: true
          description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p> </li> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>'
          type: integer
          minimum: 1
        - name: Statistics
          in: formData
          required: false
          description: 'The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.'
          type: array
          items:
            type: string
        - name: ExtendedStatistics
          in: formData
          required: false
          description: 'The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.'
          type: array
          items:
            type: string
        - name: Unit
          in: formData
          required: false
          description: 'The unit for a given metric. If you omit <code>Unit</code>, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.'
          type: string
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetMetricStatistics
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=GetMetricWidgetImage':
    get:
      x-aws-operation-name: GetMetricWidgetImage
      operationId: GET GetMetricWidgetImage
      description: '<p>You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph of one or more Amazon CloudWatch metrics as a bitmap image. You can then embed this image into your services and products, such as wiki pages, reports, and documents. You could also retrieve images regularly, such as every minute, and create your own custom live dashboard.</p> <p>The graph you retrieve can include all CloudWatch metric graph features, including metric math and horizontal and vertical annotations.</p> <p>There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code> action has the following limits:</p> <ul> <li> <p>As many as 100 metrics in the graph.</p> </li> <li> <p>Up to 100 KB uncompressed payload.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricWidgetImageOutput'
      parameters:
        - name: MetricWidget
          in: query
          required: true
          description: '<p>A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p> <p>For more information about the syntax of <code>MetricWidget</code> see <a>CloudWatch-Metric-Widget-Structure</a>.</p> <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.</p>'
          type: string
        - name: OutputFormat
          in: query
          required: false
          description: '<p>The format of the resulting image. Only PNG images are supported.</p> <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> field. For example:</p> <p> <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> </p> <p> <code> &lt;GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;MetricWidgetImage&gt;</code> </p> <p> <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> </p> <p> <code> &lt;/MetricWidgetImage&gt;</code> </p> <p> <code> &lt;/GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;ResponseMetadata&gt;</code> </p> <p> <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code> </p> <p> <code> &lt;/ResponseMetadata&gt;</code> </p> <p> <code>&lt;/GetMetricWidgetImageResponse&gt;</code> </p> <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most use cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify <code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, and the body of the response is a PNG image. </p>'
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetMetricWidgetImage
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: GetMetricWidgetImage
      operationId: POST GetMetricWidgetImage
      description: '<p>You can use the <code>GetMetricWidgetImage</code> API to retrieve a snapshot graph of one or more Amazon CloudWatch metrics as a bitmap image. You can then embed this image into your services and products, such as wiki pages, reports, and documents. You could also retrieve images regularly, such as every minute, and create your own custom live dashboard.</p> <p>The graph you retrieve can include all CloudWatch metric graph features, including metric math and horizontal and vertical annotations.</p> <p>There is a limit of 20 transactions per second for this API. Each <code>GetMetricWidgetImage</code> action has the following limits:</p> <ul> <li> <p>As many as 100 metrics in the graph.</p> </li> <li> <p>Up to 100 KB uncompressed payload.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetMetricWidgetImageOutput'
      parameters:
        - name: MetricWidget
          in: formData
          required: true
          description: '<p>A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p> <p>For more information about the syntax of <code>MetricWidget</code> see <a>CloudWatch-Metric-Widget-Structure</a>.</p> <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.</p>'
          type: string
        - name: OutputFormat
          in: formData
          required: false
          description: '<p>The format of the resulting image. Only PNG images are supported.</p> <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> field. For example:</p> <p> <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> </p> <p> <code> &lt;GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;MetricWidgetImage&gt;</code> </p> <p> <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> </p> <p> <code> &lt;/MetricWidgetImage&gt;</code> </p> <p> <code> &lt;/GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;ResponseMetadata&gt;</code> </p> <p> <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code> </p> <p> <code> &lt;/ResponseMetadata&gt;</code> </p> <p> <code>&lt;/GetMetricWidgetImageResponse&gt;</code> </p> <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most use cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify <code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, and the body of the response is a PNG image. </p>'
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - GetMetricWidgetImage
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=ListDashboards':
    get:
      x-aws-operation-name: ListDashboards
      operationId: GET ListDashboards
      description: '<p>Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>, only those dashboards with names starting with the prefix are listed. Otherwise, all dashboards in your account are listed. </p> <p> <code>ListDashboards</code> returns up to 1000 results on one page. If there are more than 1000 dashboards, you can call <code>ListDashboards</code> again and include the value you received for <code>NextToken</code> in the first call, to receive the next 1000 results.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardNamePrefix
          in: query
          required: false
          description: 'If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, ".", "-", and "_". '
          type: string
        - name: NextToken
          in: query
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListDashboards
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListDashboards
      operationId: POST ListDashboards
      description: '<p>Returns a list of the dashboards for your account. If you include <code>DashboardNamePrefix</code>, only those dashboards with names starting with the prefix are listed. Otherwise, all dashboards in your account are listed. </p> <p> <code>ListDashboards</code> returns up to 1000 results on one page. If there are more than 1000 dashboards, you can call <code>ListDashboards</code> again and include the value you received for <code>NextToken</code> in the first call, to receive the next 1000 results.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDashboardsOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardNamePrefix
          in: formData
          required: false
          description: 'If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, ".", "-", and "_". '
          type: string
        - name: NextToken
          in: formData
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListDashboards
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=ListMetrics':
    get:
      x-aws-operation-name: ListMetrics
      operationId: GET ListMetrics
      description: '<p>List the specified metrics. You can use the returned metrics with <a>GetMetricData</a> or <a>GetMetricStatistics</a> to obtain statistical data.</p> <p>Up to 500 results are returned for any one call. To retrieve additional results, use the returned token with subsequent calls.</p> <p>After you create a metric, allow up to fifteen minutes before the metric appears. Statistics about the metric, however, are available sooner using <a>GetMetricData</a> or <a>GetMetricStatistics</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMetricsOutput'
        '480':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: Namespace
          in: query
          required: false
          description: The namespace to filter against.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: query
          required: false
          description: The name of the metric to filter against.
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: query
          required: false
          description: The dimensions to filter against.
          type: array
          items:
            type: string
        - name: NextToken
          in: query
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListMetrics
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListMetrics
      operationId: POST ListMetrics
      description: '<p>List the specified metrics. You can use the returned metrics with <a>GetMetricData</a> or <a>GetMetricStatistics</a> to obtain statistical data.</p> <p>Up to 500 results are returned for any one call. To retrieve additional results, use the returned token with subsequent calls.</p> <p>After you create a metric, allow up to fifteen minutes before the metric appears. Statistics about the metric, however, are available sooner using <a>GetMetricData</a> or <a>GetMetricStatistics</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMetricsOutput'
        '480':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '481':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
      parameters:
        - name: Namespace
          in: formData
          required: false
          description: The namespace to filter against.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: formData
          required: false
          description: The name of the metric to filter against.
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: formData
          required: false
          description: The dimensions to filter against.
          type: array
          items:
            type: string
        - name: NextToken
          in: formData
          required: false
          description: The token returned by a previous call to indicate that there is more data available.
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListMetrics
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=ListTagsForResource':
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET ListTagsForResource
      description: Displays the tags associated with a CloudWatch resource. Alarms support tagging.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: ResourceARN
          in: query
          required: true
          description: 'The ARN of the CloudWatch resource that you want to view tags for. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          type: string
          minLength: 1
          maxLength: 1024
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListTagsForResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST ListTagsForResource
      description: Displays the tags associated with a CloudWatch resource. Alarms support tagging.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: ResourceARN
          in: formData
          required: true
          description: 'The ARN of the CloudWatch resource that you want to view tags for. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          type: string
          minLength: 1
          maxLength: 1024
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - ListTagsForResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=PutAnomalyDetector':
    get:
      x-aws-operation-name: PutAnomalyDetector
      operationId: GET PutAnomalyDetector
      description: '<p>Creates an anomaly detection model for a CloudWatch metric. You can use the model to display a band of expected normal values when the metric is graphed.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html">CloudWatch Anomaly Detection</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutAnomalyDetectorOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: Namespace
          in: query
          required: true
          description: The namespace of the metric to create the anomaly detection model for.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: query
          required: true
          description: The name of the metric to create the anomaly detection model for.
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: query
          required: false
          description: The metric dimensions to create the anomaly detection model for.
          type: array
          items:
            type: string
        - name: Stat
          in: query
          required: true
          description: The statistic to use for the metric and the anomaly detection model.
          type: string
        - name: Configuration.ExcludedTimeRanges
          in: query
          description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            An array of time ranges to exclude from use when the anomaly detection model is trained. Use this to make sure that events that could cause unusual values for the metric, such as deployments, aren't used when CloudWatch creates the model.
          type: array
          items:
            type: string
        - name: Configuration.MetricTimezone
          in: query
          description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            <p>The time zone to use for the metric. This is useful to enable the model to automatically account for daylight savings time changes if the metric is sensitive to such time changes.</p> <p>To specify a time zone, use the name of the time zone as specified in the standard tz database. For more information, see <a href="https://en.wikipedia.org/wiki/Tz_database">tz database</a>.</p>
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutAnomalyDetector
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PutAnomalyDetector
      operationId: POST PutAnomalyDetector
      description: '<p>Creates an anomaly detection model for a CloudWatch metric. You can use the model to display a band of expected normal values when the metric is graphed.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html">CloudWatch Anomaly Detection</a>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutAnomalyDetectorOutput'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
        '482':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '483':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
      parameters:
        - name: Namespace
          in: formData
          required: true
          description: The namespace of the metric to create the anomaly detection model for.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricName
          in: formData
          required: true
          description: The name of the metric to create the anomaly detection model for.
          type: string
          minLength: 1
          maxLength: 255
        - name: Dimensions
          in: formData
          required: false
          description: The metric dimensions to create the anomaly detection model for.
          type: array
          items:
            type: string
        - name: Stat
          in: formData
          required: true
          description: The statistic to use for the metric and the anomaly detection model.
          type: string
        - name: Configuration.ExcludedTimeRanges
          in: formData
          description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            An array of time ranges to exclude from use when the anomaly detection model is trained. Use this to make sure that events that could cause unusual values for the metric, such as deployments, aren't used when CloudWatch creates the model.
          type: array
          items:
            type: string
        - name: Configuration.MetricTimezone
          in: formData
          description: |-
            The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.
            <p>The time zone to use for the metric. This is useful to enable the model to automatically account for daylight savings time changes if the metric is sensitive to such time changes.</p> <p>To specify a time zone, use the name of the time zone as specified in the standard tz database. For more information, see <a href="https://en.wikipedia.org/wiki/Tz_database">tz database</a>.</p>
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutAnomalyDetector
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=PutDashboard':
    get:
      x-aws-operation-name: PutDashboard
      operationId: GET PutDashboard
      description: '<p>Creates a dashboard if it does not already exist, or updates an existing dashboard. If you update a dashboard, the entire contents are replaced with what you specify here.</p> <p>All dashboards in your account are global, not region-specific.</p> <p>A simple way to create a dashboard using <code>PutDashboard</code> is to copy an existing dashboard. To copy an existing dashboard using the console, you can load the dashboard and then use the View/edit source command in the Actions menu to display the JSON block for that dashboard. Another way to copy a dashboard is to use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code>.</p> <p>When you create a dashboard with <code>PutDashboard</code>, a good practice is to add a text widget at the top of the dashboard with a message that the dashboard was created by script and should not be changed in the console. This message could also point console users to the location of the <code>DashboardBody</code> script or the CloudFormation template used to create the dashboard.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutDashboardOutput'
        '480':
          description: DashboardInvalidInputError
          schema:
            $ref: '#/definitions/DashboardInvalidInputError'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardName
          in: query
          required: true
          description: 'The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.'
          type: string
        - name: DashboardBody
          in: query
          required: true
          description: '<p>The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.</p> <p>For more information about the syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>.</p>'
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutDashboard
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PutDashboard
      operationId: POST PutDashboard
      description: '<p>Creates a dashboard if it does not already exist, or updates an existing dashboard. If you update a dashboard, the entire contents are replaced with what you specify here.</p> <p>All dashboards in your account are global, not region-specific.</p> <p>A simple way to create a dashboard using <code>PutDashboard</code> is to copy an existing dashboard. To copy an existing dashboard using the console, you can load the dashboard and then use the View/edit source command in the Actions menu to display the JSON block for that dashboard. Another way to copy a dashboard is to use <code>GetDashboard</code>, and then use the data returned within <code>DashboardBody</code> as the template for the new dashboard when you call <code>PutDashboard</code>.</p> <p>When you create a dashboard with <code>PutDashboard</code>, a good practice is to add a text widget at the top of the dashboard with a message that the dashboard was created by script and should not be changed in the console. This message could also point console users to the location of the <code>DashboardBody</code> script or the CloudFormation template used to create the dashboard.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutDashboardOutput'
        '480':
          description: DashboardInvalidInputError
          schema:
            $ref: '#/definitions/DashboardInvalidInputError'
        '481':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: DashboardName
          in: formData
          required: true
          description: 'The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.'
          type: string
        - name: DashboardBody
          in: formData
          required: true
          description: '<p>The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.</p> <p>For more information about the syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>.</p>'
          type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutDashboard
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=PutInsightRule':
    get:
      x-aws-operation-name: PutInsightRule
      operationId: GET PutInsightRule
      description: '<p>Creates a Contributor Insights rule. Rules evaluate log events in a CloudWatch Logs log group, enabling you to find contributor data for the log events in that log group. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using Contributor Insights to Analyze High-Cardinality Data</a>.</p> <p>If you create a rule, delete it, and then re-create it with the same name, historical data from the first time the rule was created may or may not be available.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutInsightRuleOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: RuleName
          in: query
          required: true
          description: A unique name for the rule.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 128
        - name: RuleState
          in: query
          required: false
          description: The state of the rule. Valid values are ENABLED and DISABLED.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 32
        - name: RuleDefinition
          in: query
          required: true
          description: 'The definition of the rule, as a JSON object. For details on the valid syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html">Contributor Insights Rule Syntax</a>.'
          type: string
          pattern: '[\x00-\x7F]+'
          minLength: 1
          maxLength: 8192
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutInsightRule
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PutInsightRule
      operationId: POST PutInsightRule
      description: '<p>Creates a Contributor Insights rule. Rules evaluate log events in a CloudWatch Logs log group, enabling you to find contributor data for the log events in that log group. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights.html">Using Contributor Insights to Analyze High-Cardinality Data</a>.</p> <p>If you create a rule, delete it, and then re-create it with the same name, historical data from the first time the rule was created may or may not be available.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PutInsightRuleOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: RuleName
          in: formData
          required: true
          description: A unique name for the rule.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 128
        - name: RuleState
          in: formData
          required: false
          description: The state of the rule. Valid values are ENABLED and DISABLED.
          type: string
          pattern: '[\x20-\x7E]+'
          minLength: 1
          maxLength: 32
        - name: RuleDefinition
          in: formData
          required: true
          description: 'The definition of the rule, as a JSON object. For details on the valid syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html">Contributor Insights Rule Syntax</a>.'
          type: string
          pattern: '[\x00-\x7F]+'
          minLength: 1
          maxLength: 8192
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutInsightRule
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=PutMetricAlarm':
    get:
      x-aws-operation-name: PutMetricAlarm
      operationId: GET PutMetricAlarm
      description: '<p>Creates or updates an alarm and associates it with the specified metric, metric math expression, or anomaly detection model.</p> <p>Alarms based on anomaly detection models cannot have Auto Scaling actions.</p> <p>When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.</p> <p>When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm.</p> <p>If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:</p> <ul> <li> <p> <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions</p> </li> <li> <p> <code>ec2:DescribeInstanceStatus</code> and <code>ec2:DescribeInstances</code> for all alarms on EC2 instance status metrics</p> </li> <li> <p> <code>ec2:StopInstances</code> for alarms with stop actions</p> </li> <li> <p> <code>ec2:TerminateInstances</code> for alarms with terminate actions</p> </li> <li> <p>No specific permissions are needed for alarms with recover actions</p> </li> </ul> <p>If you have read/write permissions for Amazon CloudWatch but not for Amazon EC2, you can still create an alarm, but the stop or terminate actions are not performed. However, if you are later granted the required permissions, the alarm actions that you created earlier are performed.</p> <p>If you are using an IAM role (for example, an EC2 instance profile), you cannot stop or terminate the instance using alarm actions. However, you can still see the alarm state and perform any other actions such as Amazon SNS notifications or Auto Scaling policies.</p> <p>If you are using temporary security credentials granted using AWS STS, you cannot stop or terminate an EC2 instance using alarm actions.</p> <p>The first time you create an alarm in the AWS Management Console, the CLI, or by using the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you. The service-linked role is called <code>AWSServiceRoleForCloudWatchEvents</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">AWS service-linked role</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededFault
          schema:
            $ref: '#/definitions/LimitExceededFault'
      parameters:
        - name: AlarmName
          in: query
          required: true
          description: The name for the alarm. This name must be unique within your AWS account.
          type: string
          minLength: 1
          maxLength: 255
        - name: AlarmDescription
          in: query
          required: false
          description: The description for the alarm.
          type: string
          minLength: 0
          maxLength: 1024
        - name: ActionsEnabled
          in: query
          required: false
          description: Indicates whether actions should be executed during any changes to the alarm state. The default is <code>TRUE</code>.
          type: boolean
        - name: OKActions
          in: query
          required: false
          description: '<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          type: array
          items:
            type: string
        - name: AlarmActions
          in: query
          required: false
          description: '<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          type: array
          items:
            type: string
        - name: InsufficientDataActions
          in: query
          required: false
          description: '<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          type: array
          items:
            type: string
        - name: MetricName
          in: query
          required: false
          description: '<p>The name for the metric associated with the alarm. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you specify all this information in the <code>Metrics</code> array.</p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: Namespace
          in: query
          required: false
          description: The namespace for the metric associated specified in <code>MetricName</code>.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: Statistic
          in: query
          required: false
          description: 'The statistic for the metric specified in <code>MetricName</code>, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          type: string
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
        - name: ExtendedStatistic
          in: query
          required: false
          description: 'The percentile statistic for the metric specified in <code>MetricName</code>. Specify a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          type: string
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
        - name: Dimensions
          in: query
          required: false
          description: The dimensions for the metric specified in <code>MetricName</code>.
          type: array
          items:
            type: string
        - name: Period
          in: query
          required: false
          description: '<p>The length, in seconds, used each time the metric specified in <code>MetricName</code> is evaluated. Valid values are 10, 30, and any multiple of 60.</p> <p> <code>Period</code> is required for alarms based on static thresholds. If you are creating an alarm based on a metric math expression, you specify the period for each metric within the objects in the <code>Metrics</code> array.</p> <p>Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>'
          type: integer
          minimum: 1
        - name: Unit
          in: query
          required: false
          description: '<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you don''t specify <code>Unit</code>, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually metrics are published with only one unit, so the alarm will work as intended.</p> <p>However, if the metric is published with multiple types of units and you don''t specify a unit, the alarm''s behavior is not defined and will behave un-predictably.</p> <p>We recommend omitting <code>Unit</code> so that you don''t inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the <code>INSUFFICIENT DATA</code> state.</p>'
          type: string
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
        - name: EvaluationPeriods
          in: query
          required: true
          description: '<p>The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>'
          type: integer
          minimum: 1
        - name: DatapointsToAlarm
          in: query
          required: false
          description: 'The number of data points that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">Evaluating an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.'
          type: integer
          minimum: 1
        - name: Threshold
          in: query
          required: false
          description: '<p>The value against which the specified statistic is compared.</p> <p>This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.</p>'
          type: number
          format: double
        - name: ComparisonOperator
          in: query
          required: true
          description: '<p> The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.</p> <p>The values <code>LessThanLowerOrGreaterThanUpperThreshold</code>, <code>LessThanLowerThreshold</code>, and <code>GreaterThanUpperThreshold</code> are used only for alarms based on anomaly detection models.</p>'
          type: string
          enum:
            - GreaterThanOrEqualToThreshold
            - GreaterThanThreshold
            - LessThanThreshold
            - LessThanOrEqualToThreshold
            - LessThanLowerOrGreaterThanUpperThreshold
            - LessThanLowerThreshold
            - GreaterThanUpperThreshold
        - name: TreatMissingData
          in: query
          required: false
          description: '<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: EvaluateLowSampleCountPercentile
          in: query
          required: false
          description: '<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: Metrics
          in: query
          required: false
          description: '<p>An array of <code>MetricDataQuery</code> structures that enable you to create an alarm based on the result of a metric math expression. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>Each item in the <code>Metrics</code> array either retrieves a metric or performs a math expression.</p> <p>One item in the <code>Metrics</code> array is the expression that the alarm watches. You designate this expression by setting <code>ReturnValue</code> to true for this object in the array. For more information, see <a>MetricDataQuery</a>.</p> <p>If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>, <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the <code>Metrics</code> array.</p>'
          type: array
          items:
            type: string
        - name: Tags
          in: query
          required: false
          description: '<p>A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p>'
          type: array
          items:
            type: string
        - name: ThresholdMetricId
          in: query
          required: false
          description: '<p>If this is an alarm based on an anomaly detection model, make this value match the ID of the <code>ANOMALY_DETECTION_BAND</code> function.</p> <p>For an example of how to use this parameter, see the <b>Anomaly Detection Model Alarm</b> example on this page.</p> <p>If your alarm uses this parameter, it cannot have Auto Scaling actions.</p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutMetricAlarm
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PutMetricAlarm
      operationId: POST PutMetricAlarm
      description: '<p>Creates or updates an alarm and associates it with the specified metric, metric math expression, or anomaly detection model.</p> <p>Alarms based on anomaly detection models cannot have Auto Scaling actions.</p> <p>When this operation creates an alarm, the alarm state is immediately set to <code>INSUFFICIENT_DATA</code>. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.</p> <p>When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm.</p> <p>If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:</p> <ul> <li> <p> <code>iam:CreateServiceLinkedRole</code> for all alarms with EC2 actions</p> </li> <li> <p> <code>ec2:DescribeInstanceStatus</code> and <code>ec2:DescribeInstances</code> for all alarms on EC2 instance status metrics</p> </li> <li> <p> <code>ec2:StopInstances</code> for alarms with stop actions</p> </li> <li> <p> <code>ec2:TerminateInstances</code> for alarms with terminate actions</p> </li> <li> <p>No specific permissions are needed for alarms with recover actions</p> </li> </ul> <p>If you have read/write permissions for Amazon CloudWatch but not for Amazon EC2, you can still create an alarm, but the stop or terminate actions are not performed. However, if you are later granted the required permissions, the alarm actions that you created earlier are performed.</p> <p>If you are using an IAM role (for example, an EC2 instance profile), you cannot stop or terminate the instance using alarm actions. However, you can still see the alarm state and perform any other actions such as Amazon SNS notifications or Auto Scaling policies.</p> <p>If you are using temporary security credentials granted using AWS STS, you cannot stop or terminate an EC2 instance using alarm actions.</p> <p>The first time you create an alarm in the AWS Management Console, the CLI, or by using the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you. The service-linked role is called <code>AWSServiceRoleForCloudWatchEvents</code>. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">AWS service-linked role</a>.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: LimitExceededFault
          schema:
            $ref: '#/definitions/LimitExceededFault'
      parameters:
        - name: AlarmName
          in: formData
          required: true
          description: The name for the alarm. This name must be unique within your AWS account.
          type: string
          minLength: 1
          maxLength: 255
        - name: AlarmDescription
          in: formData
          required: false
          description: The description for the alarm.
          type: string
          minLength: 0
          maxLength: 1024
        - name: ActionsEnabled
          in: formData
          required: false
          description: Indicates whether actions should be executed during any changes to the alarm state. The default is <code>TRUE</code>.
          type: boolean
        - name: OKActions
          in: formData
          required: false
          description: '<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          type: array
          items:
            type: string
        - name: AlarmActions
          in: formData
          required: false
          description: '<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          type: array
          items:
            type: string
        - name: InsufficientDataActions
          in: formData
          required: false
          description: '<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
          type: array
          items:
            type: string
        - name: MetricName
          in: formData
          required: false
          description: '<p>The name for the metric associated with the alarm. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you specify all this information in the <code>Metrics</code> array.</p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: Namespace
          in: formData
          required: false
          description: The namespace for the metric associated specified in <code>MetricName</code>.
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: Statistic
          in: formData
          required: false
          description: 'The statistic for the metric specified in <code>MetricName</code>, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          type: string
          enum:
            - SampleCount
            - Average
            - Sum
            - Minimum
            - Maximum
        - name: ExtendedStatistic
          in: formData
          required: false
          description: 'The percentile statistic for the metric specified in <code>MetricName</code>. Specify a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
          type: string
          pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
        - name: Dimensions
          in: formData
          required: false
          description: The dimensions for the metric specified in <code>MetricName</code>.
          type: array
          items:
            type: string
        - name: Period
          in: formData
          required: false
          description: '<p>The length, in seconds, used each time the metric specified in <code>MetricName</code> is evaluated. Valid values are 10, 30, and any multiple of 60.</p> <p> <code>Period</code> is required for alarms based on static thresholds. If you are creating an alarm based on a metric math expression, you specify the period for each metric within the objects in the <code>Metrics</code> array.</p> <p>Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>'
          type: integer
          minimum: 1
        - name: Unit
          in: formData
          required: false
          description: '<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you don''t specify <code>Unit</code>, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually metrics are published with only one unit, so the alarm will work as intended.</p> <p>However, if the metric is published with multiple types of units and you don''t specify a unit, the alarm''s behavior is not defined and will behave un-predictably.</p> <p>We recommend omitting <code>Unit</code> so that you don''t inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the <code>INSUFFICIENT DATA</code> state.</p>'
          type: string
          enum:
            - Seconds
            - Microseconds
            - Milliseconds
            - Bytes
            - Kilobytes
            - Megabytes
            - Gigabytes
            - Terabytes
            - Bits
            - Kilobits
            - Megabits
            - Gigabits
            - Terabits
            - Percent
            - Count
            - Bytes/Second
            - Kilobytes/Second
            - Megabytes/Second
            - Gigabytes/Second
            - Terabytes/Second
            - Bits/Second
            - Kilobits/Second
            - Megabits/Second
            - Gigabits/Second
            - Terabits/Second
            - Count/Second
            - None
        - name: EvaluationPeriods
          in: formData
          required: true
          description: '<p>The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>'
          type: integer
          minimum: 1
        - name: DatapointsToAlarm
          in: formData
          required: false
          description: 'The number of data points that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">Evaluating an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.'
          type: integer
          minimum: 1
        - name: Threshold
          in: formData
          required: false
          description: '<p>The value against which the specified statistic is compared.</p> <p>This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.</p>'
          type: number
          format: double
        - name: ComparisonOperator
          in: formData
          required: true
          description: '<p> The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.</p> <p>The values <code>LessThanLowerOrGreaterThanUpperThreshold</code>, <code>LessThanLowerThreshold</code>, and <code>GreaterThanUpperThreshold</code> are used only for alarms based on anomaly detection models.</p>'
          type: string
          enum:
            - GreaterThanOrEqualToThreshold
            - GreaterThanThreshold
            - LessThanThreshold
            - LessThanOrEqualToThreshold
            - LessThanLowerOrGreaterThanUpperThreshold
            - LessThanLowerThreshold
            - GreaterThanUpperThreshold
        - name: TreatMissingData
          in: formData
          required: false
          description: '<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: EvaluateLowSampleCountPercentile
          in: formData
          required: false
          description: '<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: Metrics
          in: formData
          required: false
          description: '<p>An array of <code>MetricDataQuery</code> structures that enable you to create an alarm based on the result of a metric math expression. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>Each item in the <code>Metrics</code> array either retrieves a metric or performs a math expression.</p> <p>One item in the <code>Metrics</code> array is the expression that the alarm watches. You designate this expression by setting <code>ReturnValue</code> to true for this object in the array. For more information, see <a>MetricDataQuery</a>.</p> <p>If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>, <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the <code>Metrics</code> array.</p>'
          type: array
          items:
            type: string
        - name: Tags
          in: formData
          required: false
          description: '<p>A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p>'
          type: array
          items:
            type: string
        - name: ThresholdMetricId
          in: formData
          required: false
          description: '<p>If this is an alarm based on an anomaly detection model, make this value match the ID of the <code>ANOMALY_DETECTION_BAND</code> function.</p> <p>For an example of how to use this parameter, see the <b>Anomaly Detection Model Alarm</b> example on this page.</p> <p>If your alarm uses this parameter, it cannot have Auto Scaling actions.</p>'
          type: string
          minLength: 1
          maxLength: 255
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutMetricAlarm
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=PutMetricData':
    get:
      x-aws-operation-name: PutMetricData
      operationId: GET PutMetricData
      description: '<p>Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metric. If the specified metric does not exist, CloudWatch creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes for the metric to appear in calls to <a>ListMetrics</a>.</p> <p>You can publish either individual data points in the <code>Value</code> field, or arrays of values and the number of times each value occurred during the period by using the <code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code> structure. Using the <code>Values</code> and <code>Counts</code> method enables you to publish up to 150 values per metric with one <code>PutMetricData</code> request, and supports retrieving percentile statistics on this data.</p> <p>Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST requests. You can send a payload compressed by gzip. Each request is also limited to no more than 20 different metrics.</p> <p>Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>, CloudWatch rejects values that are either too small or too large. Values must be in the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p> <p>You can use up to 10 dimensions per metric to further clarify what data the metric collects. Each dimension consists of a Name and Value pair. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Data points with time stamps from 24 hours ago or longer can take at least 48 hours to become available for <a>GetMetricData</a> or <a>GetMetricStatistics</a> from the time they are submitted.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>, <code>Max</code>, and <code>Sum</code> are all equal.</p> </li> <li> <p>The <code>Min</code> and <code>Max</code> are equal, and <code>Sum</code> is equal to <code>Min</code> multiplied by <code>SampleCount</code>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: Namespace
          in: query
          required: true
          description: '<p>The namespace for the metric data.</p> <p>To avoid conflicts with AWS service namespaces, you should not specify a namespace that begins with <code>AWS/</code> </p>'
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricData
          in: query
          required: true
          description: The data for the metric. The array can include no more than 20 metrics per call.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutMetricData
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: PutMetricData
      operationId: POST PutMetricData
      description: '<p>Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metric. If the specified metric does not exist, CloudWatch creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes for the metric to appear in calls to <a>ListMetrics</a>.</p> <p>You can publish either individual data points in the <code>Value</code> field, or arrays of values and the number of times each value occurred during the period by using the <code>Values</code> and <code>Counts</code> fields in the <code>MetricDatum</code> structure. Using the <code>Values</code> and <code>Counts</code> method enables you to publish up to 150 values per metric with one <code>PutMetricData</code> request, and supports retrieving percentile statistics on this data.</p> <p>Each <code>PutMetricData</code> request is limited to 40 KB in size for HTTP POST requests. You can send a payload compressed by gzip. Each request is also limited to no more than 20 different metrics.</p> <p>Although the <code>Value</code> parameter accepts numbers of type <code>Double</code>, CloudWatch rejects values that are either too small or too large. Values must be in the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p> <p>You can use up to 10 dimensions per metric to further clarify what data the metric collects. Each dimension consists of a Name and Value pair. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Data points with time stamps from 24 hours ago or longer can take at least 48 hours to become available for <a>GetMetricData</a> or <a>GetMetricStatistics</a> from the time they are submitted.</p> <p>CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:</p> <ul> <li> <p>The <code>SampleCount</code> value of the statistic set is 1 and <code>Min</code>, <code>Max</code>, and <code>Sum</code> are all equal.</p> </li> <li> <p>The <code>Min</code> and <code>Max</code> are equal, and <code>Sum</code> is equal to <code>Min</code> multiplied by <code>SampleCount</code>.</p> </li> </ul>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: MissingRequiredParameterException
          schema:
            $ref: '#/definitions/MissingRequiredParameterException'
        '482':
          description: InvalidParameterCombinationException
          schema:
            $ref: '#/definitions/InvalidParameterCombinationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: Namespace
          in: formData
          required: true
          description: '<p>The namespace for the metric data.</p> <p>To avoid conflicts with AWS service namespaces, you should not specify a namespace that begins with <code>AWS/</code> </p>'
          type: string
          pattern: '[^:].*'
          minLength: 1
          maxLength: 255
        - name: MetricData
          in: formData
          required: true
          description: The data for the metric. The array can include no more than 20 metrics per call.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - PutMetricData
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=SetAlarmState':
    get:
      x-aws-operation-name: SetAlarmState
      operationId: GET SetAlarmState
      description: 'Temporarily sets the state of an alarm for testing purposes. When the updated state differs from the previous value, the action configured for the appropriate state is invoked. For example, if your alarm is configured to send an Amazon SNS message when an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code> sends an SNS message. The alarm returns to its actual state (often within seconds). Because the alarm state change happens quickly, it is typically only visible in the alarm''s <b>History</b> tab in the Amazon CloudWatch console or through <a>DescribeAlarmHistory</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
        '481':
          description: InvalidFormatFault
          schema:
            $ref: '#/definitions/InvalidFormatFault'
      parameters:
        - name: AlarmName
          in: query
          required: true
          description: The name for the alarm. This name must be unique within the AWS account. The maximum length is 255 characters.
          type: string
          minLength: 1
          maxLength: 255
        - name: StateValue
          in: query
          required: true
          description: The value of the state.
          type: string
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
        - name: StateReason
          in: query
          required: true
          description: 'The reason that this alarm is set to this specific state, in text format.'
          type: string
          minLength: 0
          maxLength: 1023
        - name: StateReasonData
          in: query
          required: false
          description: 'The reason that this alarm is set to this specific state, in JSON format.'
          type: string
          minLength: 0
          maxLength: 4000
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - SetAlarmState
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: SetAlarmState
      operationId: POST SetAlarmState
      description: 'Temporarily sets the state of an alarm for testing purposes. When the updated state differs from the previous value, the action configured for the appropriate state is invoked. For example, if your alarm is configured to send an Amazon SNS message when an alarm is triggered, temporarily changing the alarm state to <code>ALARM</code> sends an SNS message. The alarm returns to its actual state (often within seconds). Because the alarm state change happens quickly, it is typically only visible in the alarm''s <b>History</b> tab in the Amazon CloudWatch console or through <a>DescribeAlarmHistory</a>.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFound
          schema:
            $ref: '#/definitions/ResourceNotFound'
        '481':
          description: InvalidFormatFault
          schema:
            $ref: '#/definitions/InvalidFormatFault'
      parameters:
        - name: AlarmName
          in: formData
          required: true
          description: The name for the alarm. This name must be unique within the AWS account. The maximum length is 255 characters.
          type: string
          minLength: 1
          maxLength: 255
        - name: StateValue
          in: formData
          required: true
          description: The value of the state.
          type: string
          enum:
            - OK
            - ALARM
            - INSUFFICIENT_DATA
        - name: StateReason
          in: formData
          required: true
          description: 'The reason that this alarm is set to this specific state, in text format.'
          type: string
          minLength: 0
          maxLength: 1023
        - name: StateReasonData
          in: formData
          required: false
          description: 'The reason that this alarm is set to this specific state, in JSON format.'
          type: string
          minLength: 0
          maxLength: 4000
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - SetAlarmState
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=TagResource':
    get:
      x-aws-operation-name: TagResource
      operationId: GET TagResource
      description: '<p>Assigns one or more tags (key-value pairs) to the specified CloudWatch resource. Currently, the only CloudWatch resources that can be tagged are alarms.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the <code>TagResource</code> action with an alarm that already has tags. If you specify a new tag key for the alarm, this tag is appended to the list of tags associated with the alarm. If you specify a tag key that is already associated with the alarm, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: ResourceARN
          in: query
          required: true
          description: 'The ARN of the CloudWatch alarm that you''re adding tags to. The ARN format is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:alarm:<i>alarm-name</i> </code> '
          type: string
          minLength: 1
          maxLength: 1024
        - name: Tags
          in: query
          required: true
          description: The list of key-value pairs to associate with the alarm.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - TagResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: TagResource
      operationId: POST TagResource
      description: '<p>Assigns one or more tags (key-value pairs) to the specified CloudWatch resource. Currently, the only CloudWatch resources that can be tagged are alarms.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p> <p>Tags don''t have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the <code>TagResource</code> action with an alarm that already has tags. If you specify a new tag key for the alarm, this tag is appended to the list of tags associated with the alarm. If you specify a tag key that is already associated with the alarm, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: ResourceARN
          in: formData
          required: true
          description: 'The ARN of the CloudWatch alarm that you''re adding tags to. The ARN format is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:alarm:<i>alarm-name</i> </code> '
          type: string
          minLength: 1
          maxLength: 1024
        - name: Tags
          in: formData
          required: true
          description: The list of key-value pairs to associate with the alarm.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - TagResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
  '/#Action=UntagResource':
    get:
      x-aws-operation-name: UntagResource
      operationId: GET UntagResource
      description: Removes one or more tags from the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: ResourceARN
          in: query
          required: true
          description: 'The ARN of the CloudWatch resource that you''re removing tags from. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          type: string
          minLength: 1
          maxLength: 1024
        - name: TagKeys
          in: query
          required: true
          description: The list of tag keys to remove from the resource.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - UntagResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      x-aws-operation-name: UntagResource
      operationId: POST UntagResource
      description: Removes one or more tags from the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceOutput'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ConcurrentModificationException
          schema:
            $ref: '#/definitions/ConcurrentModificationException'
        '483':
          description: InternalServiceFault
          schema:
            $ref: '#/definitions/InternalServiceFault'
      parameters:
        - name: ResourceARN
          in: formData
          required: true
          description: 'The ARN of the CloudWatch resource that you''re removing tags from. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
          type: string
          minLength: 1
          maxLength: 1024
        - name: TagKeys
          in: formData
          required: true
          description: The list of tag keys to remove from the resource.
          type: array
          items:
            type: string
        - name: Action
          in: query
          required: true
          type: string
          enum:
            - UntagResource
        - name: Version
          in: query
          required: true
          type: string
          enum:
            - '2010-08-01'
definitions:
  AlarmName:
    type: string
    minLength: 1
    maxLength: 255
  ResourceNotFound: {}
  DeleteAnomalyDetectorOutput:
    type: object
    properties: {}
  Dimension:
    type: object
    required:
      - Name
      - Value
    properties:
      Name:
        $ref: '#/definitions/DimensionName'
        description: The name of the dimension.
      Value:
        $ref: '#/definitions/DimensionValue'
        description: The value representing the dimension measurement.
    description: Expands the identity of a metric.
  ResourceNotFoundException: {}
  InternalServiceFault: {}
  InvalidParameterValueException: {}
  MissingRequiredParameterException: {}
  DeleteDashboardsOutput:
    type: object
    properties: {}
  DashboardName:
    type: string
  DashboardNotFoundError: {}
  DeleteInsightRulesOutput:
    type: object
    properties:
      Failures:
        $ref: '#/definitions/BatchFailures'
        description: An array listing the rules that could not be deleted. You cannot delete built-in rules.
  InsightRuleName:
    type: string
    pattern: '[\x20-\x7E]+'
    minLength: 1
    maxLength: 128
  DescribeAlarmHistoryOutput:
    type: object
    properties:
      AlarmHistoryItems:
        $ref: '#/definitions/AlarmHistoryItems'
        description: 'The alarm histories, in JSON format.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
  InvalidNextToken: {}
  DescribeAlarmsOutput:
    type: object
    properties:
      MetricAlarms:
        $ref: '#/definitions/MetricAlarms'
        description: The information for the specified alarms.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
  DescribeAlarmsForMetricOutput:
    type: object
    properties:
      MetricAlarms:
        $ref: '#/definitions/MetricAlarms'
        description: The information for each alarm with the specified metric.
  DescribeAnomalyDetectorsOutput:
    type: object
    properties:
      AnomalyDetectors:
        $ref: '#/definitions/AnomalyDetectors'
        description: The list of anomaly detection models returned by the operation.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: A token that you can use in a subsequent operation to retrieve the next set of results.
  DescribeInsightRulesOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Reserved for future use.
      InsightRules:
        $ref: '#/definitions/InsightRules'
        description: The rules returned by the operation.
  DisableInsightRulesOutput:
    type: object
    properties:
      Failures:
        $ref: '#/definitions/BatchFailures'
        description: An array listing the rules that could not be disabled. You cannot disable built-in rules.
  EnableInsightRulesOutput:
    type: object
    properties:
      Failures:
        $ref: '#/definitions/BatchFailures'
        description: An array listing the rules that could not be enabled. You cannot disable or enable built-in rules.
  LimitExceededException: {}
  GetDashboardOutput:
    type: object
    properties:
      DashboardArn:
        $ref: '#/definitions/DashboardArn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      DashboardBody:
        $ref: '#/definitions/DashboardBody'
        description: 'The detailed information about the dashboard, including what widgets are included and their location on the dashboard. For more information about the <code>DashboardBody</code> syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>. '
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: The name of the dashboard.
  GetInsightRuleReportOutput:
    type: object
    properties:
      KeyLabels:
        $ref: '#/definitions/InsightRuleContributorKeyLabels'
        description: 'An array of the strings used as the keys for this rule. The keys are the dimensions used to classify contributors. If the rule contains more than one key, then each unique combination of values for the keys is counted as a unique contributor.'
      AggregationStatistic:
        $ref: '#/definitions/InsightRuleAggregationStatistic'
        description: Specifies whether this rule aggregates contributor data by COUNT or SUM.
      AggregateValue:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: The sum of the values from all individual contributors that match the rule.
      ApproximateUniqueCount:
        $ref: '#/definitions/InsightRuleUnboundLong'
        description: An approximate count of the unique contributors found by this rule in this time period.
      Contributors:
        $ref: '#/definitions/InsightRuleContributors'
        description: 'An array of the unique contributors found by this rule in this time period. If the rule contains multiple keys, each combination of values for the keys counts as a unique contributor.'
      MetricDatapoints:
        $ref: '#/definitions/InsightRuleMetricDatapoints'
        description: A time series of metric data points that matches the time period in the rule request.
  InsightRuleMetricName:
    type: string
    pattern: '[\x20-\x7E]+'
    minLength: 1
    maxLength: 32
  GetMetricDataOutput:
    type: object
    properties:
      MetricDataResults:
        $ref: '#/definitions/MetricDataResults'
        description: 'The metrics that are returned, including the metric name, namespace, and dimensions.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: A token that marks the next batch of returned results.
      Messages:
        $ref: '#/definitions/MetricDataResultMessages'
        description: '<p>Contains a message about this <code>GetMetricData</code> operation, if the operation results in such a message. An example of a message that may be returned is <code>Maximum number of allowed metrics exceeded</code>. If there is a message, as much of the operation as possible is still executed.</p> <p>A message appears here only if it is related to the global <code>GetMetricData</code> operation. Any message about a specific metric returned by the operation appears in the <code>MetricDataResult</code> object returned for that metric.</p>'
  MetricDataQuery:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/MetricId'
        description: 'A short name used to tie this object to the results in the response. This name must be unique within a single call to <code>GetMetricData</code>. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.'
      MetricStat:
        $ref: '#/definitions/MetricStat'
        description: '<p>The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.</p> <p>Within one MetricDataQuery object, you must specify either <code>Expression</code> or <code>MetricStat</code> but not both.</p>'
      Expression:
        $ref: '#/definitions/MetricExpression'
        description: '<p>The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the <code>Id</code> of the other metrics to refer to those metrics, and can also use the <code>Id</code> of other expressions to use the result of those expressions. For more information about metric math expressions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Within each MetricDataQuery object, you must specify either <code>Expression</code> or <code>MetricStat</code> but not both.</p>'
      Label:
        $ref: '#/definitions/MetricLabel'
        description: 'A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents. If the metric or expression is shown in a CloudWatch dashboard widget, the label is shown. If Label is omitted, CloudWatch generates a default.'
      ReturnData:
        $ref: '#/definitions/ReturnData'
        description: '<p>When used in <code>GetMetricData</code>, this option indicates whether to return the timestamps and raw data values of this metric. If you are performing this call just to do math expressions and do not also need the raw data returned, you can specify <code>False</code>. If you omit this, the default of <code>True</code> is used.</p> <p>When used in <code>PutMetricAlarm</code>, specify <code>True</code> for the one expression result to use as the alarm. For all other metrics and expressions in the same <code>PutMetricAlarm</code> operation, specify <code>ReturnData</code> as False.</p>'
      Period:
        $ref: '#/definitions/Period'
        description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> operation that includes a <code>StorageResolution of 1 second</code>.</p> <p>If you are performing a <code>GetMetricData</code> operation, use this field only if you are specifying an <code>Expression</code>. Do not use this field when you are specifying a <code>MetricStat</code> in a <code>GetMetricData</code> operation.</p>'
    description: '<p>This structure is used in both <code>GetMetricData</code> and <code>PutMetricAlarm</code>. The supported use of this structure is different for those two operations.</p> <p>When used in <code>GetMetricData</code>, it indicates the metric data to return, and whether this call is just retrieving a batch set of data for one metric, or is performing a math expression on metric data. A single <code>GetMetricData</code> call can include up to 100 <code>MetricDataQuery</code> structures.</p> <p>When used in <code>PutMetricAlarm</code>, it enables you to create an alarm based on a metric math expression. Each <code>MetricDataQuery</code> in the array specifies either a metric to retrieve, or a math expression to be performed on retrieved metrics. A single <code>PutMetricAlarm</code> call can include up to 20 <code>MetricDataQuery</code> structures in the array. The 20 structures can include as many as 10 structures that contain a <code>MetricStat</code> parameter to retrieve a metric, and as many as 10 structures that contain the <code>Expression</code> parameter to perform a math expression. Of those <code>Expression</code> structures, one must have <code>True</code> as the value for <code>ReturnData</code>. The result of this expression is the value the alarm watches.</p> <p>Any expression used in a <code>PutMetricAlarm</code> operation must return a single time series. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax">Metric Math Syntax and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>Some of the parameters of this structure also have different uses whether you are using this structure in a <code>GetMetricData</code> operation or a <code>PutMetricAlarm</code> operation. These differences are explained in the following parameter list.</p>'
  GetMetricStatisticsOutput:
    type: object
    properties:
      Label:
        $ref: '#/definitions/MetricLabel'
        description: A label for the specified metric.
      Datapoints:
        $ref: '#/definitions/Datapoints'
        description: The data points for the specified metric.
  Statistic:
    type: string
    enum:
      - SampleCount
      - Average
      - Sum
      - Minimum
      - Maximum
  ExtendedStatistic:
    type: string
    pattern: 'p(\d{1,2}(\.\d{0,2})?|100)'
  InvalidParameterCombinationException: {}
  GetMetricWidgetImageOutput:
    type: object
    properties:
      MetricWidgetImage:
        $ref: '#/definitions/MetricWidgetImage'
        description: 'The image of the graph, in the output format specified.'
  ListDashboardsOutput:
    type: object
    properties:
      DashboardEntries:
        $ref: '#/definitions/DashboardEntries'
        description: The list of matching dashboards.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
  ListMetricsOutput:
    type: object
    properties:
      Metrics:
        $ref: '#/definitions/Metrics'
        description: The metrics.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token that marks the start of the next batch of returned results.
  DimensionFilter:
    type: object
    required:
      - Name
    properties:
      Name:
        $ref: '#/definitions/DimensionName'
        description: The dimension name to be matched.
      Value:
        $ref: '#/definitions/DimensionValue'
        description: The value of the dimension to be matched.
    description: Represents filters for a dimension.
  ListTagsForResourceOutput:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: The list of tag keys and values associated with the resource you specified.
  PutAnomalyDetectorOutput:
    type: object
    properties: {}
  AnomalyDetectorExcludedTimeRanges:
    type: array
    items:
      $ref: '#/definitions/Range'
  AnomalyDetectorMetricTimezone:
    type: string
  Range:
    type: object
    required:
      - StartTime
      - EndTime
    properties:
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: 'The start time of the range to exclude. The format is <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: 'The end time of the range to exclude. The format is <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
    description: Specifies one range of days or times to exclude from use for training an anomaly detection model.
  PutDashboardOutput:
    type: object
    properties:
      DashboardValidationMessages:
        $ref: '#/definitions/DashboardValidationMessages'
        description: '<p>If the input for <code>PutDashboard</code> was correct and the dashboard was successfully created or modified, this result is empty.</p> <p>If this result includes only warning messages, then the input was valid enough for the dashboard to be created or modified, but some elements of the dashboard may not render.</p> <p>If this result includes error messages, the input was not valid and the operation failed.</p>'
  DashboardInvalidInputError: {}
  PutInsightRuleOutput:
    type: object
    properties: {}
  ResourceName:
    type: string
    minLength: 1
    maxLength: 1024
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: A string that you can use to assign a value. The combination of tag keys and values can help you organize and categorize your resources.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value for the specified tag key.
    description: A key-value pair associated with a CloudWatch resource.
  LimitExceededFault: {}
  MetricDatum:
    type: object
    required:
      - MetricName
    properties:
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions associated with the metric.
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: 'The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.'
      Value:
        $ref: '#/definitions/DatapointValue'
        description: '<p>The value for the metric.</p> <p>Although the parameter accepts numbers of type Double, CloudWatch rejects values that are either too small or too large. Values must be in the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p>'
      StatisticValues:
        $ref: '#/definitions/StatisticSet'
        description: The statistical values for the metric.
      Values:
        $ref: '#/definitions/Values'
        description: '<p>Array of numbers representing the values for the metric during the period. Each unique value is listed just once in this array, and the corresponding number in the <code>Counts</code> array specifies the number of times that value occurred during the period. You can include up to 150 unique values in each <code>PutMetricData</code> action that specifies a <code>Values</code> array.</p> <p>Although the <code>Values</code> array accepts numbers of type <code>Double</code>, CloudWatch rejects values that are either too small or too large. Values must be in the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p>'
      Counts:
        $ref: '#/definitions/Counts'
        description: '<p>Array of numbers that is used along with the <code>Values</code> array. Each number in the <code>Count</code> array is the number of times the corresponding value in the <code>Values</code> array occurred during the period. </p> <p>If you omit the <code>Counts</code> array, the default of 1 is used as the value for each count. If you include a <code>Counts</code> array, it must include the same amount of values as the <code>Values</code> array.</p>'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: '<p>When you are using a <code>Put</code> operation, this defines what unit you want to use when storing the metric.</p> <p>In a <code>Get</code> operation, this displays the unit that is used for the metric.</p>'
      StorageResolution:
        $ref: '#/definitions/StorageResolution'
        description: '<p>Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with sub-minute resolution down to one second. Setting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high-resolution metrics, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics">High-Resolution Metrics</a> in the <i>Amazon CloudWatch User Guide</i>. </p> <p>This field is optional, if you do not specify it the default of 60 is used.</p>'
    description: Encapsulates the information sent to either create a metric or add new values to be aggregated into an existing metric.
  InvalidFormatFault: {}
  TagResourceOutput:
    type: object
    properties: {}
  ConcurrentModificationException: {}
  UntagResourceOutput:
    type: object
    properties: {}
  TagKey:
    type: string
    minLength: 1
    maxLength: 128
  ActionPrefix:
    type: string
    minLength: 1
    maxLength: 1024
  ActionsEnabled:
    type: boolean
  AlarmArn:
    type: string
    minLength: 1
    maxLength: 1600
  AlarmDescription:
    type: string
    minLength: 0
    maxLength: 1024
  Timestamp:
    type: string
    format: date-time
  HistoryItemType:
    type: string
    enum:
      - ConfigurationUpdate
      - StateUpdate
      - Action
  HistorySummary:
    type: string
    minLength: 1
    maxLength: 255
  HistoryData:
    type: string
    minLength: 1
    maxLength: 4095
  AlarmHistoryItem:
    type: object
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The descriptive name for the alarm.
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp for the alarm history item.
      HistoryItemType:
        $ref: '#/definitions/HistoryItemType'
        description: The type of alarm history item.
      HistorySummary:
        $ref: '#/definitions/HistorySummary'
        description: 'A summary of the alarm history, in text format.'
      HistoryData:
        $ref: '#/definitions/HistoryData'
        description: 'Data about the alarm, in JSON format.'
    description: Represents the history of a specific alarm.
  AlarmHistoryItems:
    type: array
    items:
      $ref: '#/definitions/AlarmHistoryItem'
  AlarmNamePrefix:
    type: string
    minLength: 1
    maxLength: 255
  AlarmNames:
    type: array
    items:
      $ref: '#/definitions/AlarmName'
    maxItems: 100
  AmazonResourceName:
    type: string
    minLength: 1
    maxLength: 1024
  Namespace:
    type: string
    pattern: '[^:].*'
    minLength: 1
    maxLength: 255
  MetricName:
    type: string
    minLength: 1
    maxLength: 255
  Dimensions:
    type: array
    items:
      $ref: '#/definitions/Dimension'
    maxItems: 10
  Stat:
    type: string
  AnomalyDetectorConfiguration:
    type: object
    properties:
      ExcludedTimeRanges:
        $ref: '#/definitions/AnomalyDetectorExcludedTimeRanges'
        description: 'An array of time ranges to exclude from use when the anomaly detection model is trained. Use this to make sure that events that could cause unusual values for the metric, such as deployments, aren''t used when CloudWatch creates the model.'
      MetricTimezone:
        $ref: '#/definitions/AnomalyDetectorMetricTimezone'
        description: '<p>The time zone to use for the metric. This is useful to enable the model to automatically account for daylight savings time changes if the metric is sensitive to such time changes.</p> <p>To specify a time zone, use the name of the time zone as specified in the standard tz database. For more information, see <a href="https://en.wikipedia.org/wiki/Tz_database">tz database</a>.</p>'
    description: 'The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model and the time zone to use for the metric.'
  AnomalyDetectorStateValue:
    type: string
    enum:
      - PENDING_TRAINING
      - TRAINED_INSUFFICIENT_DATA
      - TRAINED
  AnomalyDetector:
    type: object
    properties:
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric associated with the anomaly detection model.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric associated with the anomaly detection model.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The metric dimensions associated with the anomaly detection model.
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic associated with the anomaly detection model.
      Configuration:
        $ref: '#/definitions/AnomalyDetectorConfiguration'
        description: 'The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude from use for training the model, and the time zone to use for the metric.'
      StateValue:
        $ref: '#/definitions/AnomalyDetectorStateValue'
        description: 'The current status of the anomaly detector''s training. The possible values are <code>TRAINED | PENDING_TRAINING | TRAINED_INSUFFICIENT_DATA</code> '
    description: An anomaly detection model associated with a particular CloudWatch metric and statistic. You can use the model to display a band of expected normal values when the metric is graphed.
  AnomalyDetectors:
    type: array
    items:
      $ref: '#/definitions/AnomalyDetector'
  PartialFailure:
    type: object
    properties:
      FailureResource:
        $ref: '#/definitions/FailureResource'
        description: The specified rule that could not be deleted.
      ExceptionType:
        $ref: '#/definitions/ExceptionType'
        description: The type of error.
      FailureCode:
        $ref: '#/definitions/FailureCode'
        description: The code of the error.
      FailureDescription:
        $ref: '#/definitions/FailureDescription'
        description: A description of the error.
    description: 'This array is empty if the API operation was successful for all the rules specified in the request. If the operation could not process one of the rules, the following data is returned for each of those rules.'
  BatchFailures:
    type: array
    items:
      $ref: '#/definitions/PartialFailure'
  ComparisonOperator:
    type: string
    enum:
      - GreaterThanOrEqualToThreshold
      - GreaterThanThreshold
      - LessThanThreshold
      - LessThanOrEqualToThreshold
      - LessThanLowerOrGreaterThanUpperThreshold
      - LessThanLowerThreshold
      - GreaterThanUpperThreshold
  DatapointValue:
    type: number
    format: double
  Counts:
    type: array
    items:
      $ref: '#/definitions/DatapointValue'
  DashboardArn:
    type: string
  DashboardBody:
    type: string
  DashboardEntry:
    type: object
    properties:
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: The name of the dashboard.
      DashboardArn:
        $ref: '#/definitions/DashboardArn'
        description: The Amazon Resource Name (ARN) of the dashboard.
      LastModified:
        $ref: '#/definitions/LastModified'
        description: 'The time stamp of when the dashboard was last modified, either by an API call or through the console. This number is expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC.'
      Size:
        $ref: '#/definitions/Size'
        description: 'The size of the dashboard, in bytes.'
    description: Represents a specific dashboard.
  DashboardEntries:
    type: array
    items:
      $ref: '#/definitions/DashboardEntry'
  LastModified:
    type: string
    format: date-time
  Size:
    type: integer
  DashboardNamePrefix:
    type: string
  DashboardNames:
    type: array
    items:
      $ref: '#/definitions/DashboardName'
  DataPath:
    type: string
  Message:
    type: string
  DashboardValidationMessage:
    type: object
    properties:
      DataPath:
        $ref: '#/definitions/DataPath'
        description: The data path related to the message.
      Message:
        $ref: '#/definitions/Message'
        description: A message describing the error or warning.
    description: An error or warning for the operation.
  DashboardValidationMessages:
    type: array
    items:
      $ref: '#/definitions/DashboardValidationMessage'
  StandardUnit:
    type: string
    enum:
      - Seconds
      - Microseconds
      - Milliseconds
      - Bytes
      - Kilobytes
      - Megabytes
      - Gigabytes
      - Terabytes
      - Bits
      - Kilobits
      - Megabits
      - Gigabits
      - Terabits
      - Percent
      - Count
      - Bytes/Second
      - Kilobytes/Second
      - Megabytes/Second
      - Gigabytes/Second
      - Terabytes/Second
      - Bits/Second
      - Kilobits/Second
      - Megabits/Second
      - Gigabits/Second
      - Terabits/Second
      - Count/Second
      - None
  DatapointValueMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/DatapointValue'
  Datapoint:
    type: object
    properties:
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp used for the data point.
      SampleCount:
        $ref: '#/definitions/DatapointValue'
        description: The number of metric values that contributed to the aggregate value of this data point.
      Average:
        $ref: '#/definitions/DatapointValue'
        description: The average of the metric values that correspond to the data point.
      Sum:
        $ref: '#/definitions/DatapointValue'
        description: The sum of the metric values for the data point.
      Minimum:
        $ref: '#/definitions/DatapointValue'
        description: The minimum metric value for the data point.
      Maximum:
        $ref: '#/definitions/DatapointValue'
        description: The maximum metric value for the data point.
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: The standard unit for the data point.
      ExtendedStatistics:
        $ref: '#/definitions/DatapointValueMap'
        description: The percentile statistic for the data point.
    description: Encapsulates the statistical data that CloudWatch computes from metric data.
  DatapointValues:
    type: array
    items:
      $ref: '#/definitions/DatapointValue'
  Datapoints:
    type: array
    items:
      $ref: '#/definitions/Datapoint'
  DatapointsToAlarm:
    type: integer
    minimum: 1
  DeleteAlarmsInput:
    type: object
    required:
      - AlarmNames
    properties:
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The alarms to be deleted.
  DeleteAnomalyDetectorInput:
    type: object
    required:
      - Namespace
      - MetricName
      - Stat
    properties:
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace associated with the anomaly detection model to delete.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The metric name associated with the anomaly detection model to delete.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The metric dimensions associated with the anomaly detection model to delete.
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic associated with the anomaly detection model to delete.
  DeleteDashboardsInput:
    type: object
    required:
      - DashboardNames
    properties:
      DashboardNames:
        $ref: '#/definitions/DashboardNames'
        description: The dashboards to be deleted. This parameter is required.
  InsightRuleNames:
    type: array
    items:
      $ref: '#/definitions/InsightRuleName'
  DeleteInsightRulesInput:
    type: object
    required:
      - RuleNames
    properties:
      RuleNames:
        $ref: '#/definitions/InsightRuleNames'
        description: 'An array of the rule names to delete. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
  MaxRecords:
    type: integer
    minimum: 1
    maximum: 100
  NextToken:
    type: string
  DescribeAlarmHistoryInput:
    type: object
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name of the alarm.
      HistoryItemType:
        $ref: '#/definitions/HistoryItemType'
        description: The type of alarm histories to retrieve.
      StartDate:
        $ref: '#/definitions/Timestamp'
        description: The starting date to retrieve alarm history.
      EndDate:
        $ref: '#/definitions/Timestamp'
        description: The ending date to retrieve alarm history.
      MaxRecords:
        $ref: '#/definitions/MaxRecords'
        description: The maximum number of alarm history records to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
  Period:
    type: integer
    minimum: 1
  DescribeAlarmsForMetricInput:
    type: object
    required:
      - MetricName
      - Namespace
    properties:
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric.
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric.
      Statistic:
        $ref: '#/definitions/Statistic'
        description: 'The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>.'
      ExtendedStatistic:
        $ref: '#/definitions/ExtendedStatistic'
        description: The percentile statistic for the metric. Specify a value between p0.0 and p100.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: 'The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed.'
      Period:
        $ref: '#/definitions/Period'
        description: 'The period, in seconds, over which the statistic is applied.'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: The unit for the metric.
  MetricAlarms:
    type: array
    items:
      $ref: '#/definitions/MetricAlarm'
  StateValue:
    type: string
    enum:
      - OK
      - ALARM
      - INSUFFICIENT_DATA
  DescribeAlarmsInput:
    type: object
    properties:
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The names of the alarms.
      AlarmNamePrefix:
        $ref: '#/definitions/AlarmNamePrefix'
        description: 'The alarm name prefix. If this parameter is specified, you cannot specify <code>AlarmNames</code>.'
      StateValue:
        $ref: '#/definitions/StateValue'
        description: The state value to be used in matching alarms.
      ActionPrefix:
        $ref: '#/definitions/ActionPrefix'
        description: The action name prefix.
      MaxRecords:
        $ref: '#/definitions/MaxRecords'
        description: The maximum number of alarm descriptions to retrieve.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
  MaxReturnedResultsCount:
    type: integer
    minimum: 1
  DescribeAnomalyDetectorsInput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Use the token returned by the previous operation to request the next page of results.
      MaxResults:
        $ref: '#/definitions/MaxReturnedResultsCount'
        description: '<p>The maximum number of results to return in one operation. The maximum value you can specify is 10.</p> <p>To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. </p>'
      Namespace:
        $ref: '#/definitions/Namespace'
        description: Limits the results to only the anomaly detection models that are associated with the specified namespace.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: 'Limits the results to only the anomaly detection models that are associated with the specified metric name. If there are multiple metrics with this name in different namespaces that have anomaly detection models, they''re all returned.'
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: 'Limits the results to only the anomaly detection models that are associated with the specified metric dimensions. If there are multiple metrics that have these dimensions and have anomaly detection models associated, they''re all returned.'
  InsightRuleMaxResults:
    type: integer
    minimum: 1
    maximum: 500
  DescribeInsightRulesInput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: Reserved for future use.
      MaxResults:
        $ref: '#/definitions/InsightRuleMaxResults'
        description: 'This parameter is not currently used. Reserved for future use. If it is used in the future, the maximum value may be different.'
  InsightRules:
    type: array
    items:
      $ref: '#/definitions/InsightRule'
  DimensionName:
    type: string
    minLength: 1
    maxLength: 255
  DimensionValue:
    type: string
    minLength: 1
    maxLength: 255
  DimensionFilters:
    type: array
    items:
      $ref: '#/definitions/DimensionFilter'
    maxItems: 10
  DisableAlarmActionsInput:
    type: object
    required:
      - AlarmNames
    properties:
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The names of the alarms.
  DisableInsightRulesInput:
    type: object
    required:
      - RuleNames
    properties:
      RuleNames:
        $ref: '#/definitions/InsightRuleNames'
        description: 'An array of the rule names to disable. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
  EnableAlarmActionsInput:
    type: object
    required:
      - AlarmNames
    properties:
      AlarmNames:
        $ref: '#/definitions/AlarmNames'
        description: The names of the alarms.
  EnableInsightRulesInput:
    type: object
    required:
      - RuleNames
    properties:
      RuleNames:
        $ref: '#/definitions/InsightRuleNames'
        description: 'An array of the rule names to enable. If you need to find out the names of your rules, use <a>DescribeInsightRules</a>.'
  EvaluateLowSampleCountPercentile:
    type: string
    minLength: 1
    maxLength: 255
  EvaluationPeriods:
    type: integer
    minimum: 1
  ExceptionType:
    type: string
  ExtendedStatistics:
    type: array
    items:
      $ref: '#/definitions/ExtendedStatistic'
    minItems: 1
    maxItems: 10
  FailureCode:
    type: string
  FailureDescription:
    type: string
  FailureResource:
    type: string
  GetDashboardInput:
    type: object
    required:
      - DashboardName
    properties:
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: The name of the dashboard to be described.
  InsightRuleUnboundInteger:
    type: integer
  InsightRuleMetricList:
    type: array
    items:
      $ref: '#/definitions/InsightRuleMetricName'
  InsightRuleOrderBy:
    type: string
    pattern: '[\x20-\x7E]+'
    minLength: 1
    maxLength: 32
  GetInsightRuleReportInput:
    type: object
    required:
      - RuleName
      - StartTime
      - EndTime
      - Period
    properties:
      RuleName:
        $ref: '#/definitions/InsightRuleName'
        description: The name of the rule that you want to see data from.
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: 'The start time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: 'The end time of the data to use in the report. When used in a raw HTTP Query API, it is formatted as <code>yyyy-MM-dd''T''HH:mm:ss</code>. For example, <code>2019-07-01T23:59:59</code>.'
      Period:
        $ref: '#/definitions/Period'
        description: 'The period, in seconds, to use for the statistics in the <code>InsightRuleMetricDatapoint</code> results.'
      MaxContributorCount:
        $ref: '#/definitions/InsightRuleUnboundInteger'
        description: 'The maximum number of contributors to include in the report. The range is 1 to 100. If you omit this, the default of 10 is used.'
      Metrics:
        $ref: '#/definitions/InsightRuleMetricList'
        description: '<p>Specifies which metrics to use for aggregation of contributor values for the report. You can specify one or more of the following metrics:</p> <ul> <li> <p> <code>UniqueContributors</code> -- the number of unique contributors for each data point.</p> </li> <li> <p> <code>MaxContributorValue</code> -- the value of the top contributor for each data point. The identity of the contributor may change for each data point in the graph.</p> <p>If this rule aggregates by COUNT, the top contributor for each data point is the contributor with the most occurrences in that period. If the rule aggregates by SUM, the top contributor is the contributor with the highest sum in the log field specified by the rule''s <code>Value</code>, during that period.</p> </li> <li> <p> <code>SampleCount</code> -- the number of data points matched by the rule.</p> </li> <li> <p> <code>Sum</code> -- the sum of the values from all contributors during the time period represented by that data point.</p> </li> <li> <p> <code>Minimum</code> -- the minimum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Maximum</code> -- the maximum value from a single observation during the time period represented by that data point.</p> </li> <li> <p> <code>Average</code> -- the average value from all contributors during the time period represented by that data point.</p> </li> </ul>'
      OrderBy:
        $ref: '#/definitions/InsightRuleOrderBy'
        description: Determines what statistic to use to rank the contributors. Valid values are SUM and MAXIMUM.
  InsightRuleContributorKeyLabels:
    type: array
    items:
      $ref: '#/definitions/InsightRuleContributorKeyLabel'
  InsightRuleAggregationStatistic:
    type: string
  InsightRuleUnboundDouble:
    type: number
    format: double
  InsightRuleUnboundLong:
    type: integer
  InsightRuleContributors:
    type: array
    items:
      $ref: '#/definitions/InsightRuleContributor'
  InsightRuleMetricDatapoints:
    type: array
    items:
      $ref: '#/definitions/InsightRuleMetricDatapoint'
  MetricDataQueries:
    type: array
    items:
      $ref: '#/definitions/MetricDataQuery'
  ScanBy:
    type: string
    enum:
      - TimestampDescending
      - TimestampAscending
  GetMetricDataMaxDatapoints:
    type: integer
  GetMetricDataInput:
    type: object
    required:
      - MetricDataQueries
      - StartTime
      - EndTime
    properties:
      MetricDataQueries:
        $ref: '#/definitions/MetricDataQueries'
        description: 'The metric queries to be returned. A single <code>GetMetricData</code> call can include as many as 100 <code>MetricDataQuery</code> structures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. '
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp indicating the earliest data to be returned.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. </p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>StartTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>StartTime</code>.</p>'
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp indicating the latest data to be returned.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp.</p> <p>For better performance, specify <code>StartTime</code> and <code>EndTime</code> values that align with the value of the metric''s <code>Period</code> and sync up with the beginning and end of an hour. For example, if the <code>Period</code> of a metric is 5 minutes, specifying 12:05 or 12:30 as <code>EndTime</code> can get a faster response from CloudWatch than setting 12:07 or 12:29 as the <code>EndTime</code>.</p>'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'Include this value, if it was returned by the previous call, to get the next set of data points.'
      ScanBy:
        $ref: '#/definitions/ScanBy'
        description: The order in which data points should be returned. <code>TimestampDescending</code> returns the newest data first and paginates when the <code>MaxDatapoints</code> limit is reached. <code>TimestampAscending</code> returns the oldest data first and paginates when the <code>MaxDatapoints</code> limit is reached.
      MaxDatapoints:
        $ref: '#/definitions/GetMetricDataMaxDatapoints'
        description: 'The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.'
  MetricDataResults:
    type: array
    items:
      $ref: '#/definitions/MetricDataResult'
  MetricDataResultMessages:
    type: array
    items:
      $ref: '#/definitions/MessageData'
  Statistics:
    type: array
    items:
      $ref: '#/definitions/Statistic'
    minItems: 1
    maxItems: 5
  GetMetricStatisticsInput:
    type: object
    required:
      - Namespace
      - MetricName
      - StartTime
      - EndTime
      - Period
    properties:
      Namespace:
        $ref: '#/definitions/Namespace'
        description: 'The namespace of the metric, with or without spaces.'
      MetricName:
        $ref: '#/definitions/MetricName'
        description: 'The name of the metric, with or without spaces.'
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: 'The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. If a specific combination of dimensions was not published, you can''t retrieve statistics for it. You must specify the same dimensions that were used when the metrics were created. For an example, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information about specifying dimensions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.'
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp that determines the first data point to return. Start times are evaluated relative to the time that CloudWatch receives the request.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul> <p>If you set <code>Period</code> to 5, 10, or 30, the start time of your request is rounded down to the nearest time that corresponds to even 5-, 10-, or 30-second divisions of a minute. For example, if you make a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the start time of your request is rounded down and you receive data from 01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous 5 minutes of data, using a period of 5 seconds, you receive data timestamped between 15:02:15 and 15:07:15. </p>'
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: '<p>The time stamp that determines the last data point to return.</p> <p>The value specified is exclusive; results include data points up to the specified time stamp. In a raw HTTP query, the time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>'
      Period:
        $ref: '#/definitions/Period'
        description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p> </li> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>'
      Statistics:
        $ref: '#/definitions/Statistics'
        description: 'The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistics</code>. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both.'
      ExtendedStatistics:
        $ref: '#/definitions/ExtendedStatistics'
        description: 'The percentile statistics. Specify values between p0.0 and p100. When calling <code>GetMetricStatistics</code>, you must specify either <code>Statistics</code> or <code>ExtendedStatistics</code>, but not both. Percentile statistics are not available for metrics when any of the metric values are negative numbers.'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: 'The unit for a given metric. If you omit <code>Unit</code>, all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.'
  MetricLabel:
    type: string
  MetricWidget:
    type: string
  OutputFormat:
    type: string
  GetMetricWidgetImageInput:
    type: object
    required:
      - MetricWidget
    properties:
      MetricWidget:
        $ref: '#/definitions/MetricWidget'
        description: '<p>A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p> <p>For more information about the syntax of <code>MetricWidget</code> see <a>CloudWatch-Metric-Widget-Structure</a>.</p> <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.</p>'
      OutputFormat:
        $ref: '#/definitions/OutputFormat'
        description: '<p>The format of the resulting image. Only PNG images are supported.</p> <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> field. For example:</p> <p> <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> </p> <p> <code> &lt;GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;MetricWidgetImage&gt;</code> </p> <p> <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> </p> <p> <code> &lt;/MetricWidgetImage&gt;</code> </p> <p> <code> &lt;/GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;ResponseMetadata&gt;</code> </p> <p> <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code> </p> <p> <code> &lt;/ResponseMetadata&gt;</code> </p> <p> <code>&lt;/GetMetricWidgetImageResponse&gt;</code> </p> <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most use cases, and all actions using an AWS SDK, you should use <code>png</code>. If you specify <code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, and the body of the response is a PNG image. </p>'
  MetricWidgetImage:
    type: string
  InsightRuleState:
    type: string
    pattern: '[\x20-\x7E]+'
    minLength: 1
    maxLength: 32
  InsightRuleSchema:
    type: string
  InsightRuleDefinition:
    type: string
    pattern: '[\x00-\x7F]+'
    minLength: 1
    maxLength: 8192
  InsightRule:
    type: object
    required:
      - Name
      - State
      - Schema
      - Definition
    properties:
      Name:
        $ref: '#/definitions/InsightRuleName'
        description: The name of the rule.
      State:
        $ref: '#/definitions/InsightRuleState'
        description: Indicates whether the rule is enabled or disabled.
      Schema:
        $ref: '#/definitions/InsightRuleSchema'
        description: 'For rules that you create, this is always <code>{"Name": "CloudWatchLogRule", "Version": 1}</code>. For built-in rules, this is <code>{"Name": "ServiceLogRule", "Version": 1}</code> '
      Definition:
        $ref: '#/definitions/InsightRuleDefinition'
        description: 'The definition of the rule, as a JSON object. The definition contains the keywords used to define contributors, the value to aggregate on if this rule returns a sum instead of a count, and the filters. For details on the valid syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html">Contributor Insights Rule Syntax</a>.'
    description: This structure contains the definition for a Contributor Insights rule.
  InsightRuleContributorKeys:
    type: array
    items:
      $ref: '#/definitions/InsightRuleContributorKey'
  InsightRuleContributorDatapoints:
    type: array
    items:
      $ref: '#/definitions/InsightRuleContributorDatapoint'
  InsightRuleContributor:
    type: object
    required:
      - Keys
      - ApproximateAggregateValue
      - Datapoints
    properties:
      Keys:
        $ref: '#/definitions/InsightRuleContributorKeys'
        description: One of the log entry field keywords that is used to define contributors for this rule.
      ApproximateAggregateValue:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: An approximation of the aggregate value that comes from this contributor.
      Datapoints:
        $ref: '#/definitions/InsightRuleContributorDatapoints'
        description: An array of the data points where this contributor is present. Only the data points when this contributor appeared are included in the array.
    description: '<p>One of the unique contributors found by a Contributor Insights rule. If the rule contains multiple keys, then a unique contributor is a unique combination of values from all the keys in the rule.</p> <p>If the rule contains a single key, then each unique contributor is each unique value for this key.</p> <p>For more information, see <a>GetInsightRuleReport</a>.</p>'
  InsightRuleContributorDatapoint:
    type: object
    required:
      - Timestamp
      - ApproximateValue
    properties:
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: The timestamp of the data point.
      ApproximateValue:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: The approximate value that this contributor added during this timestamp.
    description: '<p>One data point related to one contributor.</p> <p>For more information, see <a>GetInsightRuleReport</a> and <a>InsightRuleContributor</a>.</p>'
  InsightRuleContributorKey:
    type: string
  InsightRuleContributorKeyLabel:
    type: string
  InsightRuleMetricDatapoint:
    type: object
    required:
      - Timestamp
    properties:
      Timestamp:
        $ref: '#/definitions/Timestamp'
        description: The timestamp of the data point.
      UniqueContributors:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: <p>The number of unique contributors who published data during this timestamp.</p> <p>This statistic is returned only if you included it in the <code>Metrics</code> array in your request.</p>
      MaxContributorValue:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: '<p>The maximum value provided by one contributor during this timestamp. Each timestamp is evaluated separately, so the identity of the max contributor could be different for each timestamp.</p> <p>This statistic is returned only if you included it in the <code>Metrics</code> array in your request.</p>'
      SampleCount:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: <p>The number of occurrences that matched the rule during this data point.</p> <p>This statistic is returned only if you included it in the <code>Metrics</code> array in your request.</p>
      Average:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: <p>The average value from all contributors during the time period represented by that data point.</p> <p>This statistic is returned only if you included it in the <code>Metrics</code> array in your request.</p>
      Sum:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: <p>The sum of the values from all contributors during the time period represented by that data point.</p> <p>This statistic is returned only if you included it in the <code>Metrics</code> array in your request.</p>
      Minimum:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: <p>The minimum value from a single contributor during the time period represented by that data point.</p> <p>This statistic is returned only if you included it in the <code>Metrics</code> array in your request.</p>
      Maximum:
        $ref: '#/definitions/InsightRuleUnboundDouble'
        description: <p>The maximum value from a single occurence from a single contributor during the time period represented by that data point.</p> <p>This statistic is returned only if you included it in the <code>Metrics</code> array in your request.</p>
    description: '<p>One data point from the metric time series returned in a Contributor Insights rule report.</p> <p>For more information, see <a>GetInsightRuleReport</a>.</p>'
  ListDashboardsInput:
    type: object
    properties:
      DashboardNamePrefix:
        $ref: '#/definitions/DashboardNamePrefix'
        description: 'If you specify this parameter, only the dashboards with names starting with the specified string are listed. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, ".", "-", and "_". '
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
  ListMetricsInput:
    type: object
    properties:
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace to filter against.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric to filter against.
      Dimensions:
        $ref: '#/definitions/DimensionFilters'
        description: The dimensions to filter against.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token returned by a previous call to indicate that there is more data available.
  Metrics:
    type: array
    items:
      $ref: '#/definitions/Metric'
  ListTagsForResourceInput:
    type: object
    required:
      - ResourceARN
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: 'The ARN of the CloudWatch resource that you want to view tags for. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  MessageDataCode:
    type: string
  MessageDataValue:
    type: string
  MessageData:
    type: object
    properties:
      Code:
        $ref: '#/definitions/MessageDataCode'
        description: The error code or status code associated with the message.
      Value:
        $ref: '#/definitions/MessageDataValue'
        description: The message text.
    description: 'A message returned by the <code>GetMetricData</code>API, including a code and a description.'
  Metric:
    type: object
    properties:
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric. This is a required field.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions for the metric.
    description: Represents a specific metric.
  ResourceList:
    type: array
    items:
      $ref: '#/definitions/ResourceName'
    maxItems: 5
  StateReason:
    type: string
    minLength: 0
    maxLength: 1023
  StateReasonData:
    type: string
    minLength: 0
    maxLength: 4000
  Threshold:
    type: number
    format: double
  TreatMissingData:
    type: string
    minLength: 1
    maxLength: 255
  MetricId:
    type: string
    minLength: 1
    maxLength: 255
  MetricAlarm:
    type: object
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name of the alarm.
      AlarmArn:
        $ref: '#/definitions/AlarmArn'
        description: The Amazon Resource Name (ARN) of the alarm.
      AlarmDescription:
        $ref: '#/definitions/AlarmDescription'
        description: The description of the alarm.
      AlarmConfigurationUpdatedTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp of the last update to the alarm configuration.
      ActionsEnabled:
        $ref: '#/definitions/ActionsEnabled'
        description: Indicates whether actions should be executed during any changes to the alarm state.
      OKActions:
        $ref: '#/definitions/ResourceList'
        description: The actions to execute when this alarm transitions to the <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).
      AlarmActions:
        $ref: '#/definitions/ResourceList'
        description: The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).
      InsufficientDataActions:
        $ref: '#/definitions/ResourceList'
        description: The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).
      StateValue:
        $ref: '#/definitions/StateValue'
        description: The state value for the alarm.
      StateReason:
        $ref: '#/definitions/StateReason'
        description: 'An explanation for the alarm state, in text format.'
      StateReasonData:
        $ref: '#/definitions/StateReasonData'
        description: 'An explanation for the alarm state, in JSON format.'
      StateUpdatedTimestamp:
        $ref: '#/definitions/Timestamp'
        description: The time stamp of the last update to the alarm state.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: 'The name of the metric associated with the alarm, if this is an alarm based on a single metric.'
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric associated with the alarm.
      Statistic:
        $ref: '#/definitions/Statistic'
        description: 'The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>.'
      ExtendedStatistic:
        $ref: '#/definitions/ExtendedStatistic'
        description: The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions for the metric associated with the alarm.
      Period:
        $ref: '#/definitions/Period'
        description: 'The period, in seconds, over which the statistic is applied.'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: The unit of the metric associated with the alarm.
      EvaluationPeriods:
        $ref: '#/definitions/EvaluationPeriods'
        description: The number of periods over which data is compared to the specified threshold.
      DatapointsToAlarm:
        $ref: '#/definitions/DatapointsToAlarm'
        description: The number of data points that must be breaching to trigger the alarm.
      Threshold:
        $ref: '#/definitions/Threshold'
        description: The value to compare with the specified statistic.
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.
      TreatMissingData:
        $ref: '#/definitions/TreatMissingData'
        description: 'Sets how this alarm is to handle missing data points. If this parameter is omitted, the default behavior of <code>missing</code> is used.'
      EvaluateLowSampleCountPercentile:
        $ref: '#/definitions/EvaluateLowSampleCountPercentile'
        description: 'Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If <code>evaluate</code> or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available.'
      Metrics:
        $ref: '#/definitions/MetricDataQueries'
        description: 'An array of MetricDataQuery structures, used in an alarm based on a metric math expression. Each structure either retrieves a metric or performs a math expression. One item in the Metrics array is the math expression that the alarm watches. This expression by designated by having <code>ReturnValue</code> set to true.'
      ThresholdMetricId:
        $ref: '#/definitions/MetricId'
        description: 'In an alarm based on an anomaly detection model, this is the ID of the <code>ANOMALY_DETECTION_BAND</code> function used as the threshold for the alarm.'
    description: Represents an alarm.
  MetricData:
    type: array
    items:
      $ref: '#/definitions/MetricDatum'
  MetricStat:
    type: object
    required:
      - Metric
      - Period
      - Stat
    properties:
      Metric:
        $ref: '#/definitions/Metric'
        description: 'The metric to return, including the metric name, namespace, and dimensions.'
      Period:
        $ref: '#/definitions/Period'
        description: '<p>The granularity, in seconds, of the returned data points. For metrics with regular resolution, a period can be as short as one minute (60 seconds) and must be a multiple of 60. For high-resolution metrics that are collected at intervals of less than one minute, the period can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution metrics are those metrics stored by a <code>PutMetricData</code> call that includes a <code>StorageResolution</code> of 1 second.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 3 hours ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 3 hours and 15 days ago - Use a multiple of 60 seconds (1 minute).</p> </li> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>'
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic to return. It can include any CloudWatch statistic or extended statistic.
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: '<p>When you are using a <code>Put</code> operation, this defines what unit you want to use when storing the metric.</p> <p>In a <code>Get</code> operation, if you omit <code>Unit</code> then all data that was collected with any unit is returned, along with the corresponding units that were specified when the data was reported to CloudWatch. If you specify a unit, the operation returns only data data that was collected with that unit specified. If you specify a unit that does not match the data collected, the results of the operation are null. CloudWatch does not perform unit conversions.</p>'
    description: 'This structure defines the metric to be returned, along with the statistics, period, and units.'
  MetricExpression:
    type: string
    minLength: 1
    maxLength: 1024
  ReturnData:
    type: boolean
  Timestamps:
    type: array
    items:
      $ref: '#/definitions/Timestamp'
  StatusCode:
    type: string
    enum:
      - Complete
      - InternalError
      - PartialData
  MetricDataResult:
    type: object
    properties:
      Id:
        $ref: '#/definitions/MetricId'
        description: The short name you specified to represent this metric.
      Label:
        $ref: '#/definitions/MetricLabel'
        description: The human-readable label associated with the data.
      Timestamps:
        $ref: '#/definitions/Timestamps'
        description: 'The timestamps for the data points, formatted in Unix timestamp format. The number of timestamps always matches the number of values and the value for Timestamps[x] is Values[x].'
      Values:
        $ref: '#/definitions/DatapointValues'
        description: 'The data points for the metric corresponding to <code>Timestamps</code>. The number of values always matches the number of timestamps and the timestamp for Values[x] is Timestamps[x].'
      StatusCode:
        $ref: '#/definitions/StatusCode'
        description: 'The status of the returned data. <code>Complete</code> indicates that all data points in the requested time range were returned. <code>PartialData</code> means that an incomplete set of data points were returned. You can use the <code>NextToken</code> value that was returned and repeat your request to get more data points. <code>NextToken</code> is not returned if you are performing a math expression. <code>InternalError</code> indicates that an error occurred. Retry your request using <code>NextToken</code>, if present.'
      Messages:
        $ref: '#/definitions/MetricDataResultMessages'
        description: A list of messages with additional information about the data returned.
    description: 'A <code>GetMetricData</code> call returns an array of <code>MetricDataResult</code> structures. Each of these structures includes the data points for that metric, along with the timestamps of those data points and other identifying information.'
  StatisticSet:
    type: object
    required:
      - SampleCount
      - Sum
      - Minimum
      - Maximum
    properties:
      SampleCount:
        $ref: '#/definitions/DatapointValue'
        description: The number of samples used for the statistic set.
      Sum:
        $ref: '#/definitions/DatapointValue'
        description: The sum of values for the sample set.
      Minimum:
        $ref: '#/definitions/DatapointValue'
        description: The minimum value of the sample set.
      Maximum:
        $ref: '#/definitions/DatapointValue'
        description: The maximum value of the sample set.
    description: 'Represents a set of statistics that describes a specific metric. '
  Values:
    type: array
    items:
      $ref: '#/definitions/DatapointValue'
  StorageResolution:
    type: integer
    minimum: 1
  PutAnomalyDetectorInput:
    type: object
    required:
      - Namespace
      - MetricName
      - Stat
    properties:
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace of the metric to create the anomaly detection model for.
      MetricName:
        $ref: '#/definitions/MetricName'
        description: The name of the metric to create the anomaly detection model for.
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The metric dimensions to create the anomaly detection model for.
      Stat:
        $ref: '#/definitions/Stat'
        description: The statistic to use for the metric and the anomaly detection model.
      Configuration:
        $ref: '#/definitions/AnomalyDetectorConfiguration'
        description: '<p>The configuration specifies details about how the anomaly detection model is to be trained, including time ranges to exclude when training and updating the model. You can specify as many as 10 time ranges.</p> <p>The configuration can also include the time zone to use for the metric.</p> <p>You can in</p>'
  PutDashboardInput:
    type: object
    required:
      - DashboardName
      - DashboardBody
    properties:
      DashboardName:
        $ref: '#/definitions/DashboardName'
        description: 'The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.'
      DashboardBody:
        $ref: '#/definitions/DashboardBody'
        description: '<p>The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.</p> <p>For more information about the syntax, see <a>CloudWatch-Dashboard-Body-Structure</a>.</p>'
  PutInsightRuleInput:
    type: object
    required:
      - RuleName
      - RuleDefinition
    properties:
      RuleName:
        $ref: '#/definitions/InsightRuleName'
        description: A unique name for the rule.
      RuleState:
        $ref: '#/definitions/InsightRuleState'
        description: The state of the rule. Valid values are ENABLED and DISABLED.
      RuleDefinition:
        $ref: '#/definitions/InsightRuleDefinition'
        description: 'The definition of the rule, as a JSON object. For details on the valid syntax, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html">Contributor Insights Rule Syntax</a>.'
  PutMetricAlarmInput:
    type: object
    required:
      - AlarmName
      - EvaluationPeriods
      - ComparisonOperator
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name for the alarm. This name must be unique within your AWS account.
      AlarmDescription:
        $ref: '#/definitions/AlarmDescription'
        description: The description for the alarm.
      ActionsEnabled:
        $ref: '#/definitions/ActionsEnabled'
        description: Indicates whether actions should be executed during any changes to the alarm state. The default is <code>TRUE</code>.
      OKActions:
        $ref: '#/definitions/ResourceList'
        description: '<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
      AlarmActions:
        $ref: '#/definitions/ResourceList'
        description: '<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
      InsufficientDataActions:
        $ref: '#/definitions/ResourceList'
        description: '<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: <code>arn:aws:automate:<i>region</i>:ec2:stop</code> | <code>arn:aws:automate:<i>region</i>:ec2:terminate</code> | <code>arn:aws:automate:<i>region</i>:ec2:recover</code> | <code>arn:aws:automate:<i>region</i>:ec2:reboot</code> | <code>arn:aws:sns:<i>region</i>:<i>account-id</i>:<i>sns-topic-name</i> </code> | <code>arn:aws:autoscaling:<i>region</i>:<i>account-id</i>:scalingPolicy:<i>policy-id</i>autoScalingGroupName/<i>group-friendly-name</i>:policyName/<i>policy-friendly-name</i> </code> </p> <p>Valid Values (for use with IAM roles): <code>&gt;arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Stop/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Terminate/1.0</code> | <code>arn:aws:swf:<i>region</i>:<i>account-id</i>:action/actions/AWS_EC2.InstanceId.Reboot/1.0</code> </p>'
      MetricName:
        $ref: '#/definitions/MetricName'
        description: '<p>The name for the metric associated with the alarm. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>If you are creating an alarm based on a math expression, you cannot specify this parameter, or any of the <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters. Instead, you specify all this information in the <code>Metrics</code> array.</p>'
      Namespace:
        $ref: '#/definitions/Namespace'
        description: The namespace for the metric associated specified in <code>MetricName</code>.
      Statistic:
        $ref: '#/definitions/Statistic'
        description: 'The statistic for the metric specified in <code>MetricName</code>, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
      ExtendedStatistic:
        $ref: '#/definitions/ExtendedStatistic'
        description: 'The percentile statistic for the metric specified in <code>MetricName</code>. Specify a value between p0.0 and p100. When you call <code>PutMetricAlarm</code> and specify a <code>MetricName</code>, you must specify either <code>Statistic</code> or <code>ExtendedStatistic,</code> but not both.'
      Dimensions:
        $ref: '#/definitions/Dimensions'
        description: The dimensions for the metric specified in <code>MetricName</code>.
      Period:
        $ref: '#/definitions/Period'
        description: '<p>The length, in seconds, used each time the metric specified in <code>MetricName</code> is evaluated. Valid values are 10, 30, and any multiple of 60.</p> <p> <code>Period</code> is required for alarms based on static thresholds. If you are creating an alarm based on a metric math expression, you specify the period for each metric within the objects in the <code>Metrics</code> array.</p> <p>Be sure to specify 10 or 30 only for metrics that are stored by a <code>PutMetricData</code> call with a <code>StorageResolution</code> of 1. If you specify a period of 10 or 30 for a metric that does not have sub-minute resolution, the alarm still attempts to gather data at the period rate that you specify. In this case, it does not receive data for the attempts that do not correspond to a one-minute data resolution, and the alarm may often lapse into INSUFFICENT_DATA status. Specifying 10 or 30 also sets this alarm as a high-resolution alarm, which has a higher charge than other alarms. For more information about pricing, see <a href="https://aws.amazon.com/cloudwatch/pricing/">Amazon CloudWatch Pricing</a>.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so <code>Period</code> multiplied by <code>EvaluationPeriods</code> cannot be more than 86,400 seconds.</p>'
      Unit:
        $ref: '#/definitions/StandardUnit'
        description: '<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you don''t specify <code>Unit</code>, CloudWatch retrieves all unit types that have been published for the metric and attempts to evaluate the alarm. Usually metrics are published with only one unit, so the alarm will work as intended.</p> <p>However, if the metric is published with multiple types of units and you don''t specify a unit, the alarm''s behavior is not defined and will behave un-predictably.</p> <p>We recommend omitting <code>Unit</code> so that you don''t inadvertently specify an incorrect unit that is not published for this metric. Doing so causes the alarm to be stuck in the <code>INSUFFICIENT DATA</code> state.</p>'
      EvaluationPeriods:
        $ref: '#/definitions/EvaluationPeriods'
        description: '<p>The number of periods over which data is compared to the specified threshold. If you are setting an alarm that requires that a number of consecutive data points be breaching to trigger the alarm, this value specifies that number. If you are setting an "M out of N" alarm, this value is the N.</p> <p>An alarm''s total current evaluation period can be no longer than one day, so this number multiplied by <code>Period</code> cannot be more than 86,400 seconds.</p>'
      DatapointsToAlarm:
        $ref: '#/definitions/DatapointsToAlarm'
        description: 'The number of data points that must be breaching to trigger the alarm. This is used only if you are setting an "M out of N" alarm. In that case, this value is the M. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">Evaluating an Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.'
      Threshold:
        $ref: '#/definitions/Threshold'
        description: '<p>The value against which the specified statistic is compared.</p> <p>This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.</p>'
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: '<p> The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand.</p> <p>The values <code>LessThanLowerOrGreaterThanUpperThreshold</code>, <code>LessThanLowerThreshold</code>, and <code>GreaterThanUpperThreshold</code> are used only for alarms based on anomaly detection models.</p>'
      TreatMissingData:
        $ref: '#/definitions/TreatMissingData'
        description: '<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>'
      EvaluateLowSampleCountPercentile:
        $ref: '#/definitions/EvaluateLowSampleCountPercentile'
        description: '<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm is always evaluated and possibly changes state no matter how many data points are available. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>'
      Metrics:
        $ref: '#/definitions/MetricDataQueries'
        description: '<p>An array of <code>MetricDataQuery</code> structures that enable you to create an alarm based on the result of a metric math expression. For each <code>PutMetricAlarm</code> operation, you must specify either <code>MetricName</code> or a <code>Metrics</code> array.</p> <p>Each item in the <code>Metrics</code> array either retrieves a metric or performs a math expression.</p> <p>One item in the <code>Metrics</code> array is the expression that the alarm watches. You designate this expression by setting <code>ReturnValue</code> to true for this object in the array. For more information, see <a>MetricDataQuery</a>.</p> <p>If you use the <code>Metrics</code> parameter, you cannot include the <code>MetricName</code>, <code>Dimensions</code>, <code>Period</code>, <code>Namespace</code>, <code>Statistic</code>, or <code>ExtendedStatistic</code> parameters of <code>PutMetricAlarm</code> in the same operation. Instead, you retrieve the metrics you are using in your math expression as part of the <code>Metrics</code> array.</p>'
      Tags:
        $ref: '#/definitions/TagList'
        description: '<p>A list of key-value pairs to associate with the alarm. You can associate as many as 50 tags with an alarm.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values.</p>'
      ThresholdMetricId:
        $ref: '#/definitions/MetricId'
        description: '<p>If this is an alarm based on an anomaly detection model, make this value match the ID of the <code>ANOMALY_DETECTION_BAND</code> function.</p> <p>For an example of how to use this parameter, see the <b>Anomaly Detection Model Alarm</b> example on this page.</p> <p>If your alarm uses this parameter, it cannot have Auto Scaling actions.</p>'
  PutMetricDataInput:
    type: object
    required:
      - Namespace
      - MetricData
    properties:
      Namespace:
        $ref: '#/definitions/Namespace'
        description: '<p>The namespace for the metric data.</p> <p>To avoid conflicts with AWS service namespaces, you should not specify a namespace that begins with <code>AWS/</code> </p>'
      MetricData:
        $ref: '#/definitions/MetricData'
        description: The data for the metric. The array can include no more than 20 metrics per call.
  SetAlarmStateInput:
    type: object
    required:
      - AlarmName
      - StateValue
      - StateReason
    properties:
      AlarmName:
        $ref: '#/definitions/AlarmName'
        description: The name for the alarm. This name must be unique within the AWS account. The maximum length is 255 characters.
      StateValue:
        $ref: '#/definitions/StateValue'
        description: The value of the state.
      StateReason:
        $ref: '#/definitions/StateReason'
        description: 'The reason that this alarm is set to this specific state, in text format.'
      StateReasonData:
        $ref: '#/definitions/StateReasonData'
        description: 'The reason that this alarm is set to this specific state, in JSON format.'
  TagValue:
    type: string
    minLength: 0
    maxLength: 256
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagResourceInput:
    type: object
    required:
      - ResourceARN
      - Tags
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: 'The ARN of the CloudWatch alarm that you''re adding tags to. The ARN format is <code>arn:aws:cloudwatch:<i>Region</i>:<i>account-id</i>:alarm:<i>alarm-name</i> </code> '
      Tags:
        $ref: '#/definitions/TagList'
        description: The list of key-value pairs to associate with the alarm.
  UntagResourceInput:
    type: object
    required:
      - ResourceARN
      - TagKeys
    properties:
      ResourceARN:
        $ref: '#/definitions/AmazonResourceName'
        description: 'The ARN of the CloudWatch resource that you''re removing tags from. For more information on ARN format, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-cloudwatch">Example ARNs</a> in the <i>Amazon Web Services General Reference</i>.'
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: The list of tag keys to remove from the resource.
