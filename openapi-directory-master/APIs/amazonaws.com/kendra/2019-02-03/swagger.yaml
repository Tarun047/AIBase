swagger: '2.0'
info:
  version: '2019-02-03'
  x-release: v4
  title: AWSKendraFrontendService
  description: Amazon Kendra is a service for indexing large document sets.
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: kendra
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kendra-2019-02-03.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/kendra/'
host: kendra.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://kendra.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The kendra multi-region endpoint
  - url: 'https://kendra.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The kendra multi-region endpoint
  - url: 'http://kendra.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The kendra endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://kendra.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The kendra endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#X-Amz-Target=AWSKendraFrontendService.BatchDeleteDocument':
    post:
      operationId: BatchDeleteDocument
      description: <p>Removes one or more documents from an index. The documents must have been added with the <a>BatchPutDocument</a> operation.</p> <p>The documents are deleted asynchronously. You can see the progress of the deletion by using AWS CloudWatch. Any error messages releated to the processing of the batch are sent to you CloudWatch log.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchDeleteDocumentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchDeleteDocumentRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.BatchDeleteDocument
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.BatchPutDocument':
    post:
      operationId: BatchPutDocument
      description: '<p>Adds one or more documents to an index.</p> <p>The <code>BatchPutDocument</code> operation enables you to ingest inline documents or a set of documents stored in an Amazon S3 bucket. Use this operation to ingest your text and unstructured text into an index, add custom attributes to the documents, and to attach an access control list to the documents added to the index.</p> <p>The documents are indexed asynchronously. You can see the progress of the batch using AWS CloudWatch. Any error messages related to processing the batch are sent to your AWS CloudWatch log.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BatchPutDocumentResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/BatchPutDocumentRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.BatchPutDocument
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.CreateDataSource':
    post:
      operationId: CreateDataSource
      description: '<p>Creates a data source that you use to with an Amazon Kendra index. </p> <p>You specify a name, connector type and description for your data source. You can choose between an S3 connector, a SharePoint Online connector, and a database connector.</p> <p>You also specify configuration information such as document metadata (author, source URI, and so on) and user context information.</p> <p> <code>CreateDataSource</code> is a synchronous operation. The operation returns 200 if the data source was successfully created. Otherwise, an exception is raised.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDataSourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistException'
        '484':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '487':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateDataSourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.CreateDataSource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.CreateFaq':
    post:
      operationId: CreateFaq
      description: Creates an new set of frequently asked question (FAQ) questions and answers.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateFaqResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateFaqRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.CreateFaq
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.CreateIndex':
    post:
      operationId: CreateIndex
      description: '<p>Creates a new Amazon Kendra index. Index creation is an asynchronous operation. To determine if index creation has completed, check the <code>Status</code> field returned from a call to . The <code>Status</code> field is set to <code>ACTIVE</code> when the index is ready to use.</p> <p>Once the index is active you can index your documents using the operation or using one of the supported data sources. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateIndexResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceAlreadyExistException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistException'
        '482':
          description: ServiceQuotaExceededException
          schema:
            $ref: '#/definitions/ServiceQuotaExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateIndexRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.CreateIndex
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.DeleteFaq':
    post:
      operationId: DeleteFaq
      description: Removes an FAQ from an index.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteFaqRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.DeleteFaq
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.DeleteIndex':
    post:
      operationId: DeleteIndex
      description: 'Deletes an existing Amazon Kendra index. An exception is not thrown if the index is already being deleted. While the index is being deleted, the <code>Status</code> field returned by a call to the <a>DescribeIndex</a> operation is set to <code>DELETING</code>.'
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteIndexRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.DeleteIndex
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.DescribeDataSource':
    post:
      operationId: DescribeDataSource
      description: Gets information about a Amazon Kendra data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDataSourceResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeDataSourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.DescribeDataSource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.DescribeFaq':
    post:
      operationId: DescribeFaq
      description: Gets information about an FAQ list.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeFaqResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeFaqRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.DescribeFaq
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.DescribeIndex':
    post:
      operationId: DescribeIndex
      description: Describes an existing Amazon Kendra index
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeIndexResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DescribeIndexRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.DescribeIndex
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.ListDataSourceSyncJobs':
    post:
      operationId: ListDataSourceSyncJobs
      description: Gets statistics about synchronizing Amazon Kendra with a data source.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDataSourceSyncJobsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDataSourceSyncJobsRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.ListDataSourceSyncJobs
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.ListDataSources':
    post:
      operationId: ListDataSources
      description: Lists the data sources that you have created.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDataSourcesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListDataSourcesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.ListDataSources
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.ListFaqs':
    post:
      operationId: ListFaqs
      description: Gets a list of FAQ lists associated with an index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFaqsResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFaqsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.ListFaqs
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.ListIndices':
    post:
      operationId: ListIndices
      description: Lists the Amazon Kendra indexes that you have created.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIndicesResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListIndicesRequest'
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.ListIndices
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.Query':
    post:
      operationId: Query
      description: <p>Searches an active index. Use this API to search your documents using query. The <code>Query</code> operation enables to do faceted search and to filter results based on document attributes.</p> <p>It also enables you to provide user context that Amazon Kendra uses to enforce document access control in the search results. </p> <p>Amazon Kendra searches your index for text content and question and answer (FAQ) content. By default the response contains three types of results.</p> <ul> <li> <p>Relevant passages</p> </li> <li> <p>Matching FAQs</p> </li> <li> <p>Relevant documents</p> </li> </ul> <p>You can specify that the query return only one type of result using the <code>QueryResultTypeConfig</code> parameter.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/QueryResult'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/QueryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.Query
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.StartDataSourceSyncJob':
    post:
      operationId: StartDataSourceSyncJob
      description: 'Starts a synchronization job for a data source. If a synchronization job is already in progress, Amazon Kendra returns a <code>ResourceInUseException</code> exception.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartDataSourceSyncJobResponse'
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '486':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StartDataSourceSyncJobRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.StartDataSourceSyncJob
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.StopDataSourceSyncJob':
    post:
      operationId: StopDataSourceSyncJob
      description: Stops a running synchronization job. You can't stop a scheduled synchronization job.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/StopDataSourceSyncJobRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.StopDataSourceSyncJob
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.SubmitFeedback':
    post:
      operationId: SubmitFeedback
      description: 'Enables you to provide feedback to Amazon Kendra to improve the performance of the service. '
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ResourceUnavailableException
          schema:
            $ref: '#/definitions/ResourceUnavailableException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmitFeedbackRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.SubmitFeedback
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.UpdateDataSource':
    post:
      operationId: UpdateDataSource
      description: Updates an existing Amazon Kendra data source.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDataSourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.UpdateDataSource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSKendraFrontendService.UpdateIndex':
    post:
      operationId: UpdateIndex
      description: Updates an existing Amazon Kendra index.
      responses:
        '200':
          description: Success
        '480':
          description: ValidationException
          schema:
            $ref: '#/definitions/ValidationException'
        '481':
          description: ConflictException
          schema:
            $ref: '#/definitions/ConflictException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: InternalServerException
          schema:
            $ref: '#/definitions/InternalServerException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateIndexRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSKendraFrontendService.UpdateIndex
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  BatchDeleteDocumentResponse:
    type: object
    properties:
      FailedDocuments:
        $ref: '#/definitions/BatchDeleteDocumentResponseFailedDocuments'
        description: A list of documents that could not be removed from the index. Each entry contains an error message that indicates why the document couldn't be removed from the index.
  BatchDeleteDocumentRequest:
    type: object
    required:
      - IndexId
      - DocumentIdList
    properties:
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the documents to delete.
      DocumentIdList:
        $ref: '#/definitions/DocumentIdList'
        description: One or more identifiers for documents to delete from the index.
  ValidationException: {}
  ConflictException: {}
  ResourceNotFoundException: {}
  ThrottlingException: {}
  AccessDeniedException: {}
  InternalServerException: {}
  BatchPutDocumentResponse:
    type: object
    properties:
      FailedDocuments:
        $ref: '#/definitions/BatchPutDocumentResponseFailedDocuments'
        description: <p>A list of documents that were not added to the index because the document failed a validation check. Each document contains an error message that indicates why the document couldn't be added to the index.</p> <p>If there was an error adding a document to an index the error is reported in your AWS CloudWatch log.</p>
  BatchPutDocumentRequest:
    type: object
    required:
      - IndexId
      - Documents
    properties:
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index to add the documents to. You need to create the index first using the <a>CreateIndex</a> operation.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) of a role that is allowed to run the <code>BatchPutDocument</code> operation. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM Roles for Amazon Kendra</a>.'
      Documents:
        $ref: '#/definitions/DocumentList'
        description: '<p>One or more documents to add to the index. </p> <p>Each document is limited to 5 Mb, the total size of the list is limited to 50 Mb.</p>'
  ServiceQuotaExceededException: {}
  CreateDataSourceResponse:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/DataSourceId'
        description: A unique identifier for the data source.
  CreateDataSourceRequest:
    type: object
    required:
      - Name
      - IndexId
      - Type
      - Configuration
      - RoleArn
    properties:
      Name:
        $ref: '#/definitions/DataSourceName'
        description: A unique name for the data source. A data source name can't be changed without deleting and recreating the data source.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that should be associated with this data source.
      Type:
        $ref: '#/definitions/DataSourceType'
        description: The type of repository that contains the data source.
      Configuration:
        $ref: '#/definitions/DataSourceConfiguration'
        description: The connector configuration information that is required to access the repository.
      Description:
        $ref: '#/definitions/Description'
        description: A description for the data source.
      Schedule:
        $ref: '#/definitions/ScanSchedule'
        description: Sets the frequency that Amazon Kendra will check the documents in your repository and update the index. If you don't set a schedule Amazon Kendra will not periodically update the index. You can call the <code>StartDataSourceSyncJob</code> operation to update the index.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) of a role with permission to access the data source. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM Roles for Amazon Kendra</a>.'
  ResourceAlreadyExistException: {}
  CreateFaqResponse:
    type: object
    properties:
      Id:
        $ref: '#/definitions/FaqId'
        description: The unique identifier of the FAQ.
  CreateFaqRequest:
    type: object
    required:
      - IndexId
      - Name
      - S3Path
      - RoleArn
    properties:
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the FAQ.
      Name:
        $ref: '#/definitions/FaqName'
        description: The name that should be associated with the FAQ.
      Description:
        $ref: '#/definitions/Description'
        description: A description of the FAQ.
      S3Path:
        $ref: '#/definitions/S3Path'
        description: The S3 location of the FAQ input data.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM Roles for Amazon Kendra</a>.'
  CreateIndexResponse:
    type: object
    properties:
      Id:
        $ref: '#/definitions/IndexId'
        description: 'The unique identifier of the index. Use this identifier when you query an index, set up a data source, or index a document.'
  CreateIndexRequest:
    type: object
    required:
      - Name
      - RoleArn
    properties:
      Name:
        $ref: '#/definitions/IndexName'
        description: The name for the new index.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: An IAM role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role used when you use the <code>BatchPutDocument</code> operation to index documents from an Amazon S3 bucket.
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
        description: The identifier of the AWS KMS customer managed key (CMK) to use to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.
      Description:
        $ref: '#/definitions/Description'
        description: A description for the index.
  DeleteFaqRequest:
    type: object
    required:
      - Id
      - IndexId
    properties:
      Id:
        $ref: '#/definitions/FaqId'
        description: The identifier of the FAQ to remove.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The index to remove the FAQ from.
  DeleteIndexRequest:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index to delete.
  DescribeDataSourceResponse:
    type: object
    properties:
      Id:
        $ref: '#/definitions/DataSourceId'
        description: The identifier of the data source.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the data source.
      Name:
        $ref: '#/definitions/DataSourceName'
        description: The name that you gave the data source when it was created.
      Type:
        $ref: '#/definitions/DataSourceType'
        description: The type of the data source.
      Configuration:
        $ref: '#/definitions/DataSourceConfiguration'
        description: Information that describes where the data source is located and how the data source is configured. The specific information in the description depends on the data source provider.
      CreatedAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix timestamp of when the data source was created.
      UpdatedAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix timestamp of when the data source was last updated.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the data source.
      Status:
        $ref: '#/definitions/DataSourceStatus'
        description: 'The current status of the data source. When the status is <code>ACTIVE</code> the data source is ready to use. When the status is <code>FAILED</code>, the <code>ErrorMessage</code> field contains the reason that the data source failed.'
      Schedule:
        $ref: '#/definitions/ScanSchedule'
        description: The schedule that Amazon Kendra will update the data source.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the role that enables the data source to access its resources.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: 'When the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a description of the error that caused the data source to fail.'
  DescribeDataSourceRequest:
    type: object
    required:
      - Id
      - IndexId
    properties:
      Id:
        $ref: '#/definitions/DataSourceId'
        description: The unique identifier of the data source to describe.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the data source.
  DescribeFaqResponse:
    type: object
    properties:
      Id:
        $ref: '#/definitions/FaqId'
        description: The identifier of the FAQ.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the FAQ.
      Name:
        $ref: '#/definitions/FaqName'
        description: The name that you gave the FAQ when it was created.
      Description:
        $ref: '#/definitions/Description'
        description: The description of the FAQ that you provided when it was created.
      CreatedAt:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the FAQ was created.
      UpdatedAt:
        $ref: '#/definitions/Timestamp'
        description: The date and time that the FAQ was last updated.
      S3Path:
        $ref: '#/definitions/S3Path'
      Status:
        $ref: '#/definitions/FaqStatus'
        description: The status of the FAQ. It is ready to use when the status is <code>ACTIVE</code>.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the role that provides access to the S3 bucket containing the input files for the FAQ.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: 'If the <code>Status</code> field is <code>FAILED</code>, the <code>ErrorMessage</code> field contains the reason why the FAQ failed.'
  DescribeFaqRequest:
    type: object
    required:
      - Id
      - IndexId
    properties:
      Id:
        $ref: '#/definitions/FaqId'
        description: The unique identifier of the FAQ.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the FAQ.
  DescribeIndexResponse:
    type: object
    properties:
      Name:
        $ref: '#/definitions/IndexName'
        description: The name of the index.
      Id:
        $ref: '#/definitions/IndexId'
        description: the name of the index.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the IAM role that gives Amazon Kendra permission to write to your Amazon Cloudwatch logs.
      ServerSideEncryptionConfiguration:
        $ref: '#/definitions/ServerSideEncryptionConfiguration'
        description: The identifier of the AWS KMS customer master key (CMK) used to encrypt your data. Amazon Kendra doesn't support asymmetric CMKs.
      Status:
        $ref: '#/definitions/IndexStatus'
        description: 'The current status of the index. When the value is <code>ACTIVE</code>, the index is ready for use. If the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a message that explains why.'
      Description:
        $ref: '#/definitions/Description'
        description: The description of the index.
      CreatedAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix datetime that the index was created.
      UpdatedAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix datetime that the index was last updated.
      DocumentMetadataConfigurations:
        $ref: '#/definitions/DocumentMetadataConfigurationList'
        description: Configuration settings for any metadata applied to the documents in the index.
      IndexStatistics:
        $ref: '#/definitions/IndexStatistics'
        description: Provides information about the number of FAQ questions and answers and the number of text documents indexed.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: 'When th e<code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a message that explains why.'
  DescribeIndexRequest:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/IndexId'
        description: The name of the index to describe.
  ListDataSourceSyncJobsResponse:
    type: object
    properties:
      History:
        $ref: '#/definitions/DataSourceSyncJobHistoryList'
        description: A history of synchronization jobs for the data source.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The <code>GetDataSourceSyncJobHistory</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Kendra returns the NextPage token. Include the token in the next request to the <code>GetDataSourceSyncJobHistory</code> operation to return in the next page of jobs.'
  ListDataSourceSyncJobsRequest:
    type: object
    required:
      - Id
      - IndexId
    properties:
      Id:
        $ref: '#/definitions/DataSourceId'
        description: The identifier of the data source.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the data source.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous request to <code>GetDataSourceSyncJobHistory</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.'
      MaxResults:
        $ref: '#/definitions/MaxResultsIntegerForListDataSourceSyncJobsRequest'
        description: 'The maximum number of synchronization jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.'
      StartTimeFilter:
        $ref: '#/definitions/TimeRange'
        description: 'When specified, the synchronization jobs returned in the list are limited to jobs between the specified dates. '
      StatusFilter:
        $ref: '#/definitions/DataSourceSyncJobStatus'
        description: 'When specified, only returns synchronization jobs with the <code>Status</code> field equal to the specified status.'
  ListDataSourcesResponse:
    type: object
    properties:
      SummaryItems:
        $ref: '#/definitions/DataSourceSummaryList'
        description: An array of summary information for one or more data sources.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of data sources. '
  ListDataSourcesRequest:
    type: object
    required:
      - IndexId
    properties:
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the data source.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of data sources (<code>DataSourceSummaryItems</code>). '
      MaxResults:
        $ref: '#/definitions/MaxResultsIntegerForListDataSourcesRequest'
        description: The maximum number of data sources to return.
  ListFaqsResponse:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The <code>ListFaqs</code> operation returns a page of FAQs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Kendra returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListFaqs</code> operation to return the next page of FAQs.'
      FaqSummaryItems:
        $ref: '#/definitions/FaqSummaryItems'
        description: information about the FAQs associated with the specified index.
  ListFaqsRequest:
    type: object
    required:
      - IndexId
    properties:
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The index that contains the FAQ lists.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the result of the previous request to <code>ListFaqs</code> was truncated, include the <code>NextToken</code> to fetch the next set of FAQs.'
      MaxResults:
        $ref: '#/definitions/MaxResultsIntegerForListFaqsRequest'
        description: 'The maximum number of FAQs to return in the response. If there are fewer results in the list, this response contains only the actual results.'
  ListIndicesResponse:
    type: object
    properties:
      IndexConfigurationSummaryItems:
        $ref: '#/definitions/IndexConfigurationSummaryList'
        description: An array of summary information for one or more indexes.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of indexes.'
  ListIndicesRequest:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of indexes (<code>DataSourceSummaryItems</code>). '
      MaxResults:
        $ref: '#/definitions/MaxResultsIntegerForListIndicesRequest'
        description: The maximum number of data sources to return.
  QueryResult:
    type: object
    properties:
      QueryId:
        $ref: '#/definitions/QueryId'
        description: The unique identifier for the search. You use <code>QueryId</code> to identify the search when using the feedback API.
      ResultItems:
        $ref: '#/definitions/QueryResultItemList'
        description: The results of the search.
      FacetResults:
        $ref: '#/definitions/FacetResultList'
        description: Contains the facet results. A <code>FacetResult</code> contains the counts for each attribute key that was specified in the <code>Facets</code> input parameter.
      TotalNumberOfResults:
        $ref: '#/definitions/Integer'
        description: The number of items returned by the search. Use this to determine when you have requested the last set of results.
  QueryRequest:
    type: object
    required:
      - IndexId
      - QueryText
    properties:
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The unique identifier of the index to search. The identifier is returned in the response from the operation.
      QueryText:
        $ref: '#/definitions/QueryText'
        description: The text to search for.
      AttributeFilter:
        $ref: '#/definitions/AttributeFilter'
        description: '<p>Enables filtered searches based on document attributes. You can only provide one attribute filter; however, the <code>AndAllFilters</code>, <code>NotFilter</code>, and <code>OrAllFilters</code> parameters contain a list of other filters.</p> <p>The <code>AttributeFilter</code> parameter enables you to create a set of filtering rules that a document must satisfy to be included in the query results.</p>'
      Facets:
        $ref: '#/definitions/FacetList'
        description: An array of documents attributes. Amazon Kendra returns a count for each attribute key specified. You can use this information to help narrow the search for your user.
      RequestedDocumentAttributes:
        $ref: '#/definitions/DocumentAttributeKeyList'
        description: 'An array of document attributes to include in the response. No other document attributes are included in the response. By default all document attributes are included in the response. '
      QueryResultTypeFilter:
        $ref: '#/definitions/QueryResultType'
        description: Sets the type of query. Only results for the specified query type are returned.
      PageNumber:
        $ref: '#/definitions/Integer'
        description: 'Query results are returned in pages the size of the <code>PageSize</code> parameter. By default, Amazon Kendra returns the first page of results. Use this parameter to get result pages after the first one.'
      PageSize:
        $ref: '#/definitions/Integer'
        description: Sets the number of results that are returned in each page of results. The default page size is 100.
  StartDataSourceSyncJobResponse:
    type: object
    properties:
      ExecutionId:
        $ref: '#/definitions/String'
        description: Identifies a particular synchronization job.
  StartDataSourceSyncJobRequest:
    type: object
    required:
      - Id
      - IndexId
    properties:
      Id:
        $ref: '#/definitions/DataSourceId'
        description: The identifier of the data source to synchronize.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the data source.
  ResourceInUseException: {}
  StopDataSourceSyncJobRequest:
    type: object
    required:
      - Id
      - IndexId
    properties:
      Id:
        $ref: '#/definitions/DataSourceId'
        description: The identifier of the data source for which to stop the synchronization jobs.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the data source.
  SubmitFeedbackRequest:
    type: object
    required:
      - IndexId
      - QueryId
    properties:
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that was queried.
      QueryId:
        $ref: '#/definitions/QueryId'
        description: The identifier of the specific query for which you are submitting feedback. The query ID is returned in the response to the operation.
      ClickFeedbackItems:
        $ref: '#/definitions/ClickFeedbackList'
        description: 'Tells Amazon Kendra that a particular search result link was chosen by the user. '
      RelevanceFeedbackItems:
        $ref: '#/definitions/RelevanceFeedbackList'
        description: Provides Amazon Kendra with relevant or not relevant feedback for whether a particular item was relevant to the search.
  ResourceUnavailableException: {}
  UpdateDataSourceRequest:
    type: object
    required:
      - Id
      - IndexId
    properties:
      Id:
        $ref: '#/definitions/DataSourceId'
        description: The unique identifier of the data source to update.
      Name:
        $ref: '#/definitions/DataSourceName'
        description: The name of the data source to update. The name of the data source can't be updated. To rename a data source you must delete the data source and re-create it.
      IndexId:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index that contains the data source to update.
      Configuration:
        $ref: '#/definitions/DataSourceConfiguration'
      Description:
        $ref: '#/definitions/Description'
        description: The new description for the data source.
      Schedule:
        $ref: '#/definitions/ScanSchedule'
        description: The new update schedule for the data source.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: The Amazon Resource Name (ARN) of the new role to use when the data source is accessing resources on your behalf.
  UpdateIndexRequest:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/IndexId'
        description: The identifier of the index to update.
      Name:
        $ref: '#/definitions/IndexName'
        description: The name of the index to update.
      RoleArn:
        $ref: '#/definitions/RoleArn'
        description: A new IAM role that gives Amazon Kendra permission to access your Amazon CloudWatch logs.
      Description:
        $ref: '#/definitions/Description'
        description: A new description for the index.
      DocumentMetadataConfigurationUpdates:
        $ref: '#/definitions/DocumentMetadataConfigurationList'
        description: 'The document metadata to update. '
  S3ObjectKey:
    type: string
    pattern: .*
    minLength: 1
    maxLength: 1024
  AccessControlListConfiguration:
    type: object
    properties:
      KeyPath:
        $ref: '#/definitions/S3ObjectKey'
        description: Path to the AWS S3 bucket that contains the ACL files.
    description: Access Control List files for the documents in a data source.
  ColumnName:
    type: string
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    minLength: 1
    maxLength: 100
  AclConfiguration:
    type: object
    required:
      - AllowedGroupsColumnName
    properties:
      AllowedGroupsColumnName:
        $ref: '#/definitions/ColumnName'
        description: 'A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the <code>UserContext</code> field of the <a>Query</a> operation.'
    description: Provides information about the column that should be used for filtering the query response by groups.
  String:
    type: string
    minLength: 1
    maxLength: 2048
  AdditionalResultAttributeValueType:
    type: string
    enum:
      - TEXT_WITH_HIGHLIGHTS_VALUE
  AdditionalResultAttributeValue:
    type: object
    properties:
      TextWithHighlightsValue:
        $ref: '#/definitions/TextWithHighlights'
        description: The text associated with the attribute and information about the highlight to apply to the text.
    description: An attribute returned with a document from a search.
  AdditionalResultAttribute:
    type: object
    required:
      - Key
      - ValueType
      - Value
    properties:
      Key:
        $ref: '#/definitions/String'
        description: <p/>
      ValueType:
        $ref: '#/definitions/AdditionalResultAttributeValueType'
        description: <p/>
      Value:
        $ref: '#/definitions/AdditionalResultAttributeValue'
        description: <p/>
    description: <p/>
  AdditionalResultAttributeList:
    type: array
    items:
      $ref: '#/definitions/AdditionalResultAttribute'
  TextWithHighlights:
    type: object
    properties:
      Text:
        $ref: '#/definitions/String'
        description: The text to display to the user.
      Highlights:
        $ref: '#/definitions/HighlightList'
        description: The beginning and end of the text that should be highlighted.
    description: Provides text and information about where to highlight the text.
  AttributeFilterList:
    type: array
    items:
      $ref: '#/definitions/AttributeFilter'
    minItems: 1
    maxItems: 5
  AttributeFilter:
    type: object
    properties:
      AndAllFilters:
        $ref: '#/definitions/AttributeFilterList'
        description: Performs a logical <code>AND</code> operation on all supplied filters.
      OrAllFilters:
        $ref: '#/definitions/AttributeFilterList'
        description: Performs a logical <code>OR</code> operation on all supplied filters.
      NotFilter:
        $ref: '#/definitions/AttributeFilter'
        description: Performs a logical <code>NOT</code> operation on all supplied filters.
      EqualsTo:
        $ref: '#/definitions/DocumentAttribute'
        description: Performs an equals operation on two document attributes.
      ContainsAll:
        $ref: '#/definitions/DocumentAttribute'
        description: Returns true when a document contains all of the specified document attributes.
      ContainsAny:
        $ref: '#/definitions/DocumentAttribute'
        description: Returns true when a document contains any of the specified document attributes.
      GreaterThan:
        $ref: '#/definitions/DocumentAttribute'
        description: Performs a greater than operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
      GreaterThanOrEquals:
        $ref: '#/definitions/DocumentAttribute'
        description: Performs a greater or equals than operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
      LessThan:
        $ref: '#/definitions/DocumentAttribute'
        description: Performs a less than operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
      LessThanOrEquals:
        $ref: '#/definitions/DocumentAttribute'
        description: Performs a less than or equals operation on two document attributes. Use with a document attribute of type <code>Integer</code> or <code>Long</code>.
    description: Provides filtering the query results based on document attributes.
  DocumentAttribute:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/DocumentAttributeKey'
        description: The identifier for the attribute.
      Value:
        $ref: '#/definitions/DocumentAttributeValue'
        description: The value of the attribute.
    description: 'A custom attribute value assigned to a document. '
  IndexId:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9-]*'
    minLength: 36
    maxLength: 36
  DocumentIdList:
    type: array
    items:
      $ref: '#/definitions/DocumentId'
    minItems: 1
    maxItems: 10
  BatchDeleteDocumentResponseFailedDocuments:
    type: array
    items:
      $ref: '#/definitions/BatchDeleteDocumentResponseFailedDocument'
  DocumentId:
    type: string
    minLength: 1
    maxLength: 2048
  ErrorCode:
    type: string
    enum:
      - InternalError
      - InvalidRequest
  ErrorMessage:
    type: string
    pattern: '^\P{C}*$'
    minLength: 1
    maxLength: 2048
  BatchDeleteDocumentResponseFailedDocument:
    type: object
    properties:
      Id:
        $ref: '#/definitions/DocumentId'
        description: The identifier of the document that couldn't be removed from the index.
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: The error code for why the document couldn't be removed from the index.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: An explanation for why the document couldn't be removed from the index.
    description: Provides information about documents that could not be removed from an index by the <a>BatchDeleteDocument</a> operation.
  RoleArn:
    type: string
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1284
  DocumentList:
    type: array
    items:
      $ref: '#/definitions/Document'
    minItems: 1
    maxItems: 10
  BatchPutDocumentResponseFailedDocuments:
    type: array
    items:
      $ref: '#/definitions/BatchPutDocumentResponseFailedDocument'
  BatchPutDocumentResponseFailedDocument:
    type: object
    properties:
      Id:
        $ref: '#/definitions/DocumentId'
        description: The unique identifier of the document.
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: The type of error that caused the document to fail to be indexed.
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: A description of the reason why the document could not be indexed.
    description: Provides information about a document that could not be indexed.
  Blob:
    type: string
    minLength: 1
    maxLength: 153600
  Boolean:
    type: boolean
  ChangeDetectingColumns:
    type: array
    items:
      $ref: '#/definitions/ColumnName'
    minItems: 1
    maxItems: 5
  ResultId:
    type: string
    minLength: 1
    maxLength: 73
  Timestamp:
    type: string
    format: date-time
  ClickFeedback:
    type: object
    required:
      - ResultId
      - ClickTime
    properties:
      ResultId:
        $ref: '#/definitions/ResultId'
        description: The unique identifier of the search result that was clicked.
      ClickTime:
        $ref: '#/definitions/Timestamp'
        description: The Unix timestamp of the data and time that the result was clicked.
    description: Gathers information about when a particular result was clicked by a user. Your application uses the <a>SubmitFeedback</a> operation to provide click information.
  ClickFeedbackList:
    type: array
    items:
      $ref: '#/definitions/ClickFeedback'
  DataSourceToIndexFieldMappingList:
    type: array
    items:
      $ref: '#/definitions/DataSourceToIndexFieldMapping'
    minItems: 1
    maxItems: 100
  ColumnConfiguration:
    type: object
    required:
      - DocumentIdColumnName
      - DocumentDataColumnName
      - ChangeDetectingColumns
    properties:
      DocumentIdColumnName:
        $ref: '#/definitions/ColumnName'
        description: The column that provides the document's unique identifier.
      DocumentDataColumnName:
        $ref: '#/definitions/ColumnName'
        description: The column that contains the contents of the document.
      DocumentTitleColumnName:
        $ref: '#/definitions/ColumnName'
        description: The column that contains the title of the document.
      FieldMappings:
        $ref: '#/definitions/DataSourceToIndexFieldMappingList'
        description: An array of objects that map database column names to the corresponding fields in an index. You must first create the fields in the index using the <a>UpdateIndex</a> operation.
      ChangeDetectingColumns:
        $ref: '#/definitions/ChangeDetectingColumns'
        description: One to five columns that indicate when a document in the database has changed.
    description: Provides information about how Amazon Kendra should use the columns of a database in an index.
  DatabaseHost:
    type: string
    minLength: 1
    maxLength: 253
  DatabasePort:
    type: integer
    minimum: 1
    maximum: 65535
  DatabaseName:
    type: string
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    minLength: 1
    maxLength: 100
  TableName:
    type: string
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    minLength: 1
    maxLength: 100
  SecretArn:
    type: string
    pattern: 'arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}'
    minLength: 1
    maxLength: 1284
  ConnectionConfiguration:
    type: object
    required:
      - DatabaseHost
      - DatabasePort
      - DatabaseName
      - TableName
      - SecretArn
    properties:
      DatabaseHost:
        $ref: '#/definitions/DatabaseHost'
        description: The name of the host for the database. Can be either a string (host.subdomain.domain.tld) or an IPv4 or IPv6 address.
      DatabasePort:
        $ref: '#/definitions/DatabasePort'
        description: The port that the database uses for connections.
      DatabaseName:
        $ref: '#/definitions/DatabaseName'
        description: The name of the database containing the document data.
      TableName:
        $ref: '#/definitions/TableName'
        description: The name of the table that contains the document data.
      SecretArn:
        $ref: '#/definitions/SecretArn'
        description: 'The Amazon Resource Name (ARN) of credentials stored in AWS Secrets Manager. The credentials should be a user/password pair. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-database.html">Using a Database Data Source</a>. For more information about AWS Secrets Manager, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html"> What Is AWS Secrets Manager </a> in the <i>AWS Secrets Manager</i> user guide.'
    description: Provides the information necessary to connect to a database.
  ContentType:
    type: string
    enum:
      - PDF
      - HTML
      - MS_WORD
      - PLAIN_TEXT
      - PPT
  DataSourceName:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 1000
  DataSourceType:
    type: string
    enum:
      - S3
      - SHAREPOINT
      - DATABASE
  DataSourceConfiguration:
    type: object
    properties:
      S3Configuration:
        $ref: '#/definitions/S3DataSourceConfiguration'
        description: Provides information to create a connector for a document repository in an Amazon S3 bucket.
      SharePointConfiguration:
        $ref: '#/definitions/SharePointConfiguration'
        description: Provides information necessary to create a connector for a Microsoft SharePoint site.
      DatabaseConfiguration:
        $ref: '#/definitions/DatabaseConfiguration'
        description: Provides information necessary to create a connector for a database.
    description: Configuration information for a Amazon Kendra data source.
  Description:
    type: string
    pattern: '^\P{C}*$'
    minLength: 1
    maxLength: 1000
  ScanSchedule:
    type: string
  DataSourceId:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 100
  FaqName:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 100
  S3Path:
    type: object
    required:
      - Bucket
      - Key
    properties:
      Bucket:
        $ref: '#/definitions/S3BucketName'
        description: The name of the S3 bucket that contains the file.
      Key:
        $ref: '#/definitions/S3ObjectKey'
        description: The name of the file.
    description: Information required to find a specific file in an Amazon S3 bucket.
  FaqId:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 100
  IndexName:
    type: string
    pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 1000
  ServerSideEncryptionConfiguration:
    type: object
    properties:
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The identifier of the AWS KMS customer master key (CMK). Amazon Kendra doesn't support asymmetric CMKs.
    description: Provides the identifier of the AWS KMS customer master key (CMK) used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.
  S3DataSourceConfiguration:
    type: object
    required:
      - BucketName
    properties:
      BucketName:
        $ref: '#/definitions/S3BucketName'
        description: The name of the bucket that contains the documents.
      InclusionPrefixes:
        $ref: '#/definitions/DataSourceInclusionsExclusionsStrings'
        description: A list of S3 prefixes for the documents that should be included in the index.
      ExclusionPatterns:
        $ref: '#/definitions/DataSourceInclusionsExclusionsStrings'
        description: '<p>A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix also matches an exclusion pattern, the document is not indexed.</p> <p>For more information about glob patterns, see <a href="http://wikipedia.org/wiki/Glob_%28programming%29">glob (programming)</a> in <i>Wikipedia</i>.</p>'
      DocumentsMetadataConfiguration:
        $ref: '#/definitions/DocumentsMetadataConfiguration'
      AccessControlListConfiguration:
        $ref: '#/definitions/AccessControlListConfiguration'
        description: Provides the path to the S3 bucket that contains the user context filtering files for the data source.
    description: Provides configuration information for a data source to index documents in an Amazon S3 bucket.
  SharePointConfiguration:
    type: object
    required:
      - SharePointVersion
      - Urls
      - SecretArn
    properties:
      SharePointVersion:
        $ref: '#/definitions/SharePointVersion'
        description: The version of Microsoft SharePoint that you are using as a data source.
      Urls:
        $ref: '#/definitions/SharePointUrlList'
        description: The URLs of the Microsoft SharePoint site that contains the documents that should be indexed.
      SecretArn:
        $ref: '#/definitions/SecretArn'
        description: 'The Amazon Resource Name (ARN) of credentials stored in AWS Secrets Manager. The credentials should be a user/password pair. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-sharepoint.html">Using a Microsoft SharePoint Data Source</a>. For more information about AWS Secrets Manager, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html"> What Is AWS Secrets Manager </a> in the <i>AWS Secrets Manager</i> user guide.'
      CrawlAttachments:
        $ref: '#/definitions/Boolean'
        description: ' <code>TRUE</code> to include attachments to documents stored in your Microsoft SharePoint site in the index; otherwise, <code>FALSE</code>.'
      VpcConfiguration:
        $ref: '#/definitions/DataSourceVpcConfiguration'
      FieldMappings:
        $ref: '#/definitions/DataSourceToIndexFieldMappingList'
        description: 'A list of <code>DataSourceToIndexFieldMapping</code> objects that map Microsoft SharePoint attributes to custom fields in the Amazon Kendra index. You must first create the index fields using the operation before you map SharePoint attributes. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping Data Source Fields</a>.'
      DocumentTitleFieldName:
        $ref: '#/definitions/DataSourceFieldName'
        description: The Microsoft SharePoint attribute field that contains the title of the document.
    description: Provides configuration information for connecting to a Microsoft SharePoint data source.
  DatabaseConfiguration:
    type: object
    required:
      - DatabaseEngineType
      - ConnectionConfiguration
      - ColumnConfiguration
    properties:
      DatabaseEngineType:
        $ref: '#/definitions/DatabaseEngineType'
        description: The type of database engine that runs the database.
      ConnectionConfiguration:
        $ref: '#/definitions/ConnectionConfiguration'
        description: The information necessary to connect to a database.
      VpcConfiguration:
        $ref: '#/definitions/DataSourceVpcConfiguration'
      ColumnConfiguration:
        $ref: '#/definitions/ColumnConfiguration'
        description: Information about where the index should get the document information from the database.
      AclConfiguration:
        $ref: '#/definitions/AclConfiguration'
        description: Information about the database column that provides information for user context filtering.
    description: 'Provides the information necessary to connect a database to an index. '
  DataSourceDateFieldFormat:
    type: string
    minLength: 4
    maxLength: 40
  DataSourceFieldName:
    type: string
    pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    minLength: 1
    maxLength: 100
  DataSourceInclusionsExclusionsStringsMember:
    type: string
    pattern: '^\P{C}*$'
    minLength: 1
    maxLength: 50
  DataSourceInclusionsExclusionsStrings:
    type: array
    items:
      $ref: '#/definitions/DataSourceInclusionsExclusionsStringsMember'
    minItems: 0
    maxItems: 100
  DataSourceStatus:
    type: string
    enum:
      - CREATING
      - DELETING
      - FAILED
      - UPDATING
      - ACTIVE
  DataSourceSummary:
    type: object
    properties:
      Name:
        $ref: '#/definitions/DataSourceName'
        description: The name of the data source.
      Id:
        $ref: '#/definitions/DataSourceId'
        description: The unique identifier for the data source.
      Type:
        $ref: '#/definitions/DataSourceType'
        description: The type of the data source.
      CreatedAt:
        $ref: '#/definitions/Timestamp'
        description: The UNIX datetime that the data source was created.
      UpdatedAt:
        $ref: '#/definitions/Timestamp'
        description: 'The UNIX datetime that the data source was lasted updated. '
      Status:
        $ref: '#/definitions/DataSourceStatus'
        description: The status of the data source. When the status is <code>ATIVE</code> the data source is ready to use.
    description: Summary information for a Amazon Kendra data source. Returned in a call to .
  DataSourceSummaryList:
    type: array
    items:
      $ref: '#/definitions/DataSourceSummary'
  DataSourceSyncJobStatus:
    type: string
    enum:
      - FAILED
      - SUCCEEDED
      - SYNCING
      - INCOMPLETE
      - STOPPING
      - ABORTED
  DataSourceSyncJob:
    type: object
    properties:
      ExecutionId:
        $ref: '#/definitions/String'
        description: A unique identifier for the synchronization job.
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The UNIX datetime that the synchronization job was started.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: The UNIX datetime that the synchronization job was completed.
      Status:
        $ref: '#/definitions/DataSourceSyncJobStatus'
        description: 'The execution status of the synchronization job. When the <code>Status</code> field is set to <code>SUCCEEDED</code>, the synchronization job is done. If the status code is set to <code>FAILED</code>, the <code>ErrorCode</code> and <code>ErrorMessage</code> fields give you the reason for the failure.'
      ErrorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: 'If the <code>Status</code> field is set to <code>ERROR</code>, the <code>ErrorMessage</code> field contains a description of the error that caused the synchronization to fail.'
      ErrorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'If the <code>Status</code> field is set to <code>FAILED</code>, the <code>ErrorCode</code> field contains a the reason that the synchronization failed.'
      DataSourceErrorCode:
        $ref: '#/definitions/String'
        description: 'If the reason that the synchronization failed is due to an error with the underlying data source, this field contains a code that identifies the error.'
    description: Provides information about a synchronization job.
  DataSourceSyncJobHistoryList:
    type: array
    items:
      $ref: '#/definitions/DataSourceSyncJob'
  IndexFieldName:
    type: string
    pattern: '^\P{C}*$'
    minLength: 1
    maxLength: 30
  DataSourceToIndexFieldMapping:
    type: object
    required:
      - DataSourceFieldName
      - IndexFieldName
    properties:
      DataSourceFieldName:
        $ref: '#/definitions/DataSourceFieldName'
        description: The name of the column or attribute in the data source.
      DateFieldFormat:
        $ref: '#/definitions/DataSourceDateFieldFormat'
        description: The type of data stored in the column or attribute.
      IndexFieldName:
        $ref: '#/definitions/IndexFieldName'
        description: The name of the field in the index.
    description: Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the <a>UpdateIndex</a> operation.
  SubnetIdList:
    type: array
    items:
      $ref: '#/definitions/SubnetId'
    minItems: 1
    maxItems: 6
  SecurityGroupIdList:
    type: array
    items:
      $ref: '#/definitions/VpcSecurityGroupId'
    minItems: 1
    maxItems: 10
  DataSourceVpcConfiguration:
    type: object
    required:
      - SubnetIds
      - SecurityGroupIds
    properties:
      SubnetIds:
        $ref: '#/definitions/SubnetIdList'
        description: 'A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.'
      SecurityGroupIds:
        $ref: '#/definitions/SecurityGroupIdList'
        description: A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.
    description: Provides information for connecting to an Amazon VPC.
  DatabaseEngineType:
    type: string
    enum:
      - RDS_AURORA_MYSQL
      - RDS_AURORA_POSTGRESQL
      - RDS_MYSQL
      - RDS_POSTGRESQL
  FaqStatus:
    type: string
    enum:
      - CREATING
      - UPDATING
      - ACTIVE
      - DELETING
      - FAILED
  IndexStatus:
    type: string
    enum:
      - CREATING
      - ACTIVE
      - DELETING
      - FAILED
      - SYSTEM_UPDATING
  DocumentMetadataConfigurationList:
    type: array
    items:
      $ref: '#/definitions/DocumentMetadataConfiguration'
    minItems: 0
    maxItems: 500
  IndexStatistics:
    type: object
    required:
      - FaqStatistics
      - TextDocumentStatistics
    properties:
      FaqStatistics:
        $ref: '#/definitions/FaqStatistics'
        description: The number of question and answer topics in the index.
      TextDocumentStatistics:
        $ref: '#/definitions/TextDocumentStatistics'
        description: The number of text documents indexed.
    description: Provides information about the number of documents and the number of questions and answers in an index.
  Title:
    type: string
    minLength: 1
    maxLength: 1024
  DocumentAttributeList:
    type: array
    items:
      $ref: '#/definitions/DocumentAttribute'
    minItems: 1
    maxItems: 100
  PrincipalList:
    type: array
    items:
      $ref: '#/definitions/Principal'
    minItems: 1
    maxItems: 200
  Document:
    type: object
    required:
      - Id
    properties:
      Id:
        $ref: '#/definitions/DocumentId'
        description: A unique identifier of the document in the index.
      Title:
        $ref: '#/definitions/Title'
        description: The title of the document.
      Blob:
        $ref: '#/definitions/Blob'
        description: The contents of the document as a base-64 encoded string.
      S3Path:
        $ref: '#/definitions/S3Path'
      Attributes:
        $ref: '#/definitions/DocumentAttributeList'
        description: 'Custom attributes to apply to the document. Use the custom attributes to provide additional information for searching, to provide facets for refining searches, and to provide additional information in the query response.'
      AccessControlList:
        $ref: '#/definitions/PrincipalList'
        description: Information to use for user context filtering.
      ContentType:
        $ref: '#/definitions/ContentType'
        description: The file type of the document in the <code>Blob</code> field.
    description: A document in an index.
  DocumentAttributeKey:
    type: string
    pattern: '[a-zA-Z0-9_][a-zA-Z0-9_-]*'
    minLength: 1
    maxLength: 200
  DocumentAttributeValue:
    type: object
    properties:
      StringValue:
        $ref: '#/definitions/DocumentAttributeStringValue'
        description: 'A string, such as "department".'
      StringListValue:
        $ref: '#/definitions/DocumentAttributeStringListValue'
        description: 'A list of strings. '
      LongValue:
        $ref: '#/definitions/Long'
        description: A long integer value.
      DateValue:
        $ref: '#/definitions/Timestamp'
        description: A date value expressed as seconds from the Unix epoch.
    description: The value of a custom document attribute. You can only provide one value for a custom attribute.
  DocumentAttributeKeyList:
    type: array
    items:
      $ref: '#/definitions/DocumentAttributeKey'
    minItems: 1
    maxItems: 100
  DocumentAttributeStringListValue:
    type: array
    items:
      $ref: '#/definitions/String'
    minItems: 1
    maxItems: 5
  DocumentAttributeStringValue:
    type: string
    pattern: '^\P{C}*$'
    minLength: 1
    maxLength: 2048
  Long:
    type: integer
  Integer:
    type: integer
  DocumentAttributeValueCountPair:
    type: object
    properties:
      DocumentAttributeValue:
        $ref: '#/definitions/DocumentAttributeValue'
        description: 'The value of the attribute. For example, "HR."'
      Count:
        $ref: '#/definitions/Integer'
        description: The number of documents in the response that have the attribute value for the key.
    description: Provides the count of documents that match a particular attribute when doing a faceted search.
  DocumentAttributeValueCountPairList:
    type: array
    items:
      $ref: '#/definitions/DocumentAttributeValueCountPair'
  DocumentAttributeValueType:
    type: string
    enum:
      - STRING_VALUE
      - STRING_LIST_VALUE
      - LONG_VALUE
      - DATE_VALUE
  DocumentMetadataBoolean:
    type: boolean
  DocumentMetadataConfigurationName:
    type: string
    minLength: 1
    maxLength: 30
  Relevance:
    type: object
    properties:
      Freshness:
        $ref: '#/definitions/DocumentMetadataBoolean'
        description: 'Indicates that this field determines how "fresh" a document is. For example, if document 1 was created on November 5, and document 2 was created on October 31, document 1 is "fresher" than document 2. You can only set the <code>Freshness</code> field on one <code>DATE</code> type field. Only applies to <code>DATE</code> fields.'
      Importance:
        $ref: '#/definitions/Importance'
        description: The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers.
      Duration:
        $ref: '#/definitions/Duration'
        description: '<p>Specifies the time period that the boost applies to. For example, to make the boost apply to documents with the field value within the last month, you would use "2628000s". Once the field value is beyond the specified range, the effect of the boost drops off. The higher the importance, the faster the effect drops off. If you don''t specify a value, the default is 3 months. The value of the field is a numeric string followed by the character "s", for example "86400s" for one day, or "604800s" for one week. </p> <p>Only applies to <code>DATE</code> fields.</p>'
      RankOrder:
        $ref: '#/definitions/Order'
        description: '<p>Determines how values should be interpreted.</p> <p>When the <code>RankOrder</code> field is <code>ASCENDING</code>, higher numbers are better. For example, a document with a rating score of 10 is higher ranking than a document with a rating score of 1.</p> <p>When the <code>RankOrder</code> field is <code>DESCENDING</code>, lower numbers are better. For example, in a task tracking application, a priority 1 task is more important than a priority 5 task.</p> <p>Only applies to <code>LONG</code> and <code>DOUBLE</code> fields.</p>'
      ValueImportanceMap:
        $ref: '#/definitions/ValueImportanceMap'
        description: '<p>A list of values that should be given a different boost when they appear in the result list. For example, if you are boosting a field called "department," query terms that match the department field are boosted in the result. However, you can add entries from the department field to boost documents with those values higher. </p> <p>For example, you can add entries to the map with names of departments. If you add "HR",5 and "Legal",3 those departments are given special attention when they appear in the metadata of a document. When those terms appear they are given the specified importance instead of the regular importance for the boost.</p>'
    description: 'Provides information for manually tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.'
  Search:
    type: object
    properties:
      Facetable:
        $ref: '#/definitions/Boolean'
        description: 'Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is <code>false</code> .'
      Searchable:
        $ref: '#/definitions/Boolean'
        description: 'Determines whether the field is used in the search. If the <code>Searchable</code> field is <code>true</code>, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is <code>true</code> for string fields and <code>false</code> for number and date fields.'
      Displayable:
        $ref: '#/definitions/Boolean'
        description: Determines whether the field is returned in the query response. The default is <code>true</code>.
    description: Provides information about how a custom index field is used during a search.
  DocumentMetadataConfiguration:
    type: object
    required:
      - Name
      - Type
    properties:
      Name:
        $ref: '#/definitions/DocumentMetadataConfigurationName'
        description: The name of the index field.
      Type:
        $ref: '#/definitions/DocumentAttributeValueType'
        description: 'The data type of the index field. '
      Relevance:
        $ref: '#/definitions/Relevance'
        description: Provides manual tuning parameters to determine how the field affects the search results.
      Search:
        $ref: '#/definitions/Search'
        description: Provides information about how the field is used during a search.
    description: Specifies the properties of a custom index field.
  DocumentsMetadataConfiguration:
    type: object
    properties:
      S3Prefix:
        $ref: '#/definitions/S3ObjectKey'
        description: A prefix used to filter metadata configuration files in the AWS S3 bucket. The S3 bucket might contain multiple metadata files. Use <code>S3Prefix</code> to include only the desired metadata files.
    description: 'Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.'
  Duration:
    type: string
    pattern: '[0-9]+[s]'
    minLength: 1
    maxLength: 10
  Facet:
    type: object
    properties:
      DocumentAttributeKey:
        $ref: '#/definitions/DocumentAttributeKey'
        description: The unique key for the document attribute.
    description: Information a document attribute
  FacetList:
    type: array
    items:
      $ref: '#/definitions/Facet'
  FacetResult:
    type: object
    properties:
      DocumentAttributeKey:
        $ref: '#/definitions/DocumentAttributeKey'
        description: The key for the facet values. This is the same as the <code>DocumentAttributeKey</code> provided in the query.
      DocumentAttributeValueCountPairs:
        $ref: '#/definitions/DocumentAttributeValueCountPairList'
        description: 'An array of key/value pairs, where the key is the value of the attribute and the count is the number of documents that share the key value.'
    description: The facet values for the documents in the response.
  FacetResultList:
    type: array
    items:
      $ref: '#/definitions/FacetResult'
  IndexedQuestionAnswersCount:
    type: integer
    minimum: 0
  FaqStatistics:
    type: object
    required:
      - IndexedQuestionAnswersCount
    properties:
      IndexedQuestionAnswersCount:
        $ref: '#/definitions/IndexedQuestionAnswersCount'
        description: The total number of FAQ questions and answers contained in the index.
    description: Provides statistical information about the FAQ questions and answers contained in an index.
  FaqSummary:
    type: object
    properties:
      Id:
        $ref: '#/definitions/FaqId'
        description: The unique identifier of the FAQ.
      Name:
        $ref: '#/definitions/FaqName'
        description: The name that you assigned the FAQ when you created or updated the FAQ.
      Status:
        $ref: '#/definitions/FaqStatus'
        description: The current status of the FAQ. When the status is <code>ACTIVE</code> the FAQ is ready for use.
      CreatedAt:
        $ref: '#/definitions/Timestamp'
        description: The UNIX datetime that the FAQ was added to the index.
      UpdatedAt:
        $ref: '#/definitions/Timestamp'
        description: The UNIX datetime that the FAQ was last updated.
    description: Provides information about a frequently asked questions and answer contained in an index.
  FaqSummaryItems:
    type: array
    items:
      $ref: '#/definitions/FaqSummary'
  Highlight:
    type: object
    required:
      - BeginOffset
      - EndOffset
    properties:
      BeginOffset:
        $ref: '#/definitions/Integer'
        description: The zero-based location in the response string where the highlight starts.
      EndOffset:
        $ref: '#/definitions/Integer'
        description: The zero-based location in the response string where the highlight ends.
      TopAnswer:
        $ref: '#/definitions/Boolean'
        description: 'Indicates whether the response is the best response. True if this is the best response; otherwise, false.'
    description: Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.
  HighlightList:
    type: array
    items:
      $ref: '#/definitions/Highlight'
  Importance:
    type: integer
    minimum: 1
    maximum: 10
  IndexConfigurationSummary:
    type: object
    required:
      - CreatedAt
      - UpdatedAt
      - Status
    properties:
      Name:
        $ref: '#/definitions/IndexName'
        description: The name of the index.
      Id:
        $ref: '#/definitions/IndexId'
        description: 'A unique identifier for the index. Use this to identify the index when you are using operations such as <code>Query</code>, <code>DescribeIndex</code>, <code>UpdateIndex</code>, and <code>DeleteIndex</code>.'
      CreatedAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix timestamp when the index was created.
      UpdatedAt:
        $ref: '#/definitions/Timestamp'
        description: The Unix timestamp when the index was last updated by the <code>UpdateIndex</code> operation.
      Status:
        $ref: '#/definitions/IndexStatus'
        description: 'The current status of the index. When the status is <code>ACTIVE</code>, the index is ready to search.'
    description: A summary of information about an index.
  IndexConfigurationSummaryList:
    type: array
    items:
      $ref: '#/definitions/IndexConfigurationSummary'
  TextDocumentStatistics:
    type: object
    required:
      - IndexedTextDocumentsCount
    properties:
      IndexedTextDocumentsCount:
        $ref: '#/definitions/IndexedTextDocumentsCount'
        description: The number of text documents indexed.
    description: Provides information about text documents indexed in an index.
  IndexedTextDocumentsCount:
    type: integer
    minimum: 0
  KmsKeyId:
    type: string
    minLength: 1
    maxLength: 2048
    format: password
  NextToken:
    type: string
    minLength: 1
    maxLength: 800
  MaxResultsIntegerForListDataSourceSyncJobsRequest:
    type: integer
    minimum: 1
    maximum: 10
  TimeRange:
    type: object
    properties:
      StartTime:
        $ref: '#/definitions/Timestamp'
        description: The UNIX datetime of the beginning of the time range.
      EndTime:
        $ref: '#/definitions/Timestamp'
        description: The UNIX datetime of the end of the time range.
    description: Provides a range of time.
  MaxResultsIntegerForListDataSourcesRequest:
    type: integer
    minimum: 1
    maximum: 100
  MaxResultsIntegerForListFaqsRequest:
    type: integer
    minimum: 1
    maximum: 100
  MaxResultsIntegerForListIndicesRequest:
    type: integer
    minimum: 1
    maximum: 100
  Order:
    type: string
    enum:
      - ASCENDING
      - DESCENDING
  PrincipalName:
    type: string
    pattern: '^\P{C}*$'
    minLength: 1
    maxLength: 200
  PrincipalType:
    type: string
    enum:
      - USER
      - GROUP
  ReadAccessType:
    type: string
    enum:
      - ALLOW
      - DENY
  Principal:
    type: object
    required:
      - Name
      - Type
      - Access
    properties:
      Name:
        $ref: '#/definitions/PrincipalName'
        description: The name of the user or group.
      Type:
        $ref: '#/definitions/PrincipalType'
        description: The type of principal.
      Access:
        $ref: '#/definitions/ReadAccessType'
        description: Whether to allow or deny access to the principal.
    description: Provides user and group information for document access filtering.
  QueryId:
    type: string
    minLength: 1
    maxLength: 36
  QueryText:
    type: string
    pattern: '^\P{C}*$'
    minLength: 1
    maxLength: 1000
  QueryResultType:
    type: string
    enum:
      - DOCUMENT
      - QUESTION_ANSWER
      - ANSWER
  QueryResultItemList:
    type: array
    items:
      $ref: '#/definitions/QueryResultItem'
  Url:
    type: string
    pattern: '^(https?|ftp|file):\/\/(.*)'
    minLength: 1
    maxLength: 2048
  QueryResultItem:
    type: object
    properties:
      Id:
        $ref: '#/definitions/ResultId'
        description: The unique identifier for the query result.
      Type:
        $ref: '#/definitions/QueryResultType'
        description: 'The type of document. '
      AdditionalAttributes:
        $ref: '#/definitions/AdditionalResultAttributeList'
        description: <p/>
      DocumentId:
        $ref: '#/definitions/DocumentId'
        description: The unique identifier for the document.
      DocumentTitle:
        $ref: '#/definitions/TextWithHighlights'
        description: The title of the document. Contains the text of the title and information for highlighting the relevant terms in the title.
      DocumentExcerpt:
        $ref: '#/definitions/TextWithHighlights'
        description: An extract of the text in the document. Contains information about highlighting the relevant terms in the excerpt.
      DocumentURI:
        $ref: '#/definitions/Url'
        description: The URI of the original location of the document.
      DocumentAttributes:
        $ref: '#/definitions/DocumentAttributeList'
        description: 'An array of document attributes for the document that the query result maps to. For example, the document author (Author) or the source URI (SourceUri) of the document.'
    description: '<p>A single query result.</p> <p>A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.</p>'
  ValueImportanceMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/Importance'
  RelevanceType:
    type: string
    enum:
      - RELEVANT
      - NOT_RELEVANT
  RelevanceFeedback:
    type: object
    required:
      - ResultId
      - RelevanceValue
    properties:
      ResultId:
        $ref: '#/definitions/ResultId'
        description: The unique identifier of the search result that the user provided relevance feedback for.
      RelevanceValue:
        $ref: '#/definitions/RelevanceType'
        description: Whether to document was relevant or not relevant to the search.
    description: Provides feedback on how relevant a document is to a search. Your application uses the <a>SubmitFeedback</a> operation to provide relevance information.
  RelevanceFeedbackList:
    type: array
    items:
      $ref: '#/definitions/RelevanceFeedback'
  S3BucketName:
    type: string
    pattern: '[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]'
    minLength: 3
    maxLength: 63
  VpcSecurityGroupId:
    type: string
    pattern: '[-0-9a-zA-Z]+'
    minLength: 1
    maxLength: 200
  SharePointVersion:
    type: string
    enum:
      - SHAREPOINT_ONLINE
  SharePointUrlList:
    type: array
    items:
      $ref: '#/definitions/Url'
    minItems: 1
    maxItems: 100
  SubnetId:
    type: string
    pattern: '[\-0-9a-zA-Z]+'
    minLength: 1
    maxLength: 200
  ValueImportanceMapKey:
    type: string
    minLength: 1
    maxLength: 50
