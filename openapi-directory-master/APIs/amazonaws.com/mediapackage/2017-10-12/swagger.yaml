swagger: '2.0'
info:
  version: '2017-10-12'
  x-release: v4
  title: AWS Elemental MediaPackage
  description: AWS Elemental MediaPackage
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: mediapackage
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediapackage-2017-10-12.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/mediapackage/'
host: mediapackage.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://mediapackage.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The MediaPackage multi-region endpoint
  - url: 'https://mediapackage.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The MediaPackage multi-region endpoint
  - url: 'http://mediapackage.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://mediapackage.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaPackage endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /channels:
    post:
      operationId: CreateChannel
      description: Creates a new Channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateChannelResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - id
            properties:
              description:
                description: A short text description of the Channel.
                type: string
              id:
                description: |
                  The ID of the Channel. The ID must be unique within the region and it
                  cannot be changed after a Channel is created.
                type: string
              tags:
                description: A collection of tags associated with a resource
                type: object
                additionalProperties:
                  $ref: '#/definitions/__string'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListChannels
      description: Returns a collection of Channels.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListChannelsResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: Upper bound on number of records to return.
          type: integer
          minimum: 1
          maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  /harvest_jobs:
    post:
      operationId: CreateHarvestJob
      description: Creates a new HarvestJob record.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateHarvestJobResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - endTime
              - id
              - originEndpointId
              - s3Destination
              - startTime
            properties:
              endTime:
                description: |
                  The end of the time-window which will be harvested
                type: string
              id:
                description: |
                  The ID of the HarvestJob. The ID must be unique within the region
                  and it cannot be changed after the HarvestJob is submitted
                type: string
              originEndpointId:
                description: |
                  The ID of the OriginEndpoint that the HarvestJob will harvest from.
                  This cannot be changed after the HarvestJob is submitted.
                type: string
              s3Destination:
                description: |
                  Configuration parameters for where in an S3 bucket to place the harvested content
                type: object
                properties:
                  BucketName:
                    description: |
                      The name of an S3 bucket within which harvested content will be exported
                    $ref: '#/definitions/__string'
                  ManifestKey:
                    description: |
                      The key in the specified S3 bucket where the harvested top-level manifest will be placed.
                    $ref: '#/definitions/__string'
                  RoleArn:
                    description: |
                      The IAM role used to write to the specified S3 bucket
                    $ref: '#/definitions/__string'
              startTime:
                description: |
                  The start of the time-window which will be harvested
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListHarvestJobs
      description: Returns a collection of HarvestJob records.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListHarvestJobsResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: includeChannelId
          in: query
          required: false
          description: 'When specified, the request will return only HarvestJobs associated with the given Channel ID.'
          type: string
        - name: includeStatus
          in: query
          required: false
          description: 'When specified, the request will return only HarvestJobs in the given status.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The upper bound on the number of records to return.
          type: integer
          minimum: 1
          maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  /origin_endpoints:
    post:
      operationId: CreateOriginEndpoint
      description: Creates a new OriginEndpoint record.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - authorization
              - channelId
              - id
            properties:
              authorization:
                description: CDN Authorization credentials
                type: object
                properties:
                  CdnIdentifierSecret:
                    description: |
                      The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
                    $ref: '#/definitions/__string'
                  SecretsRoleArn:
                    description: |
                      The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
                    $ref: '#/definitions/__string'
              channelId:
                description: |
                  The ID of the Channel that the OriginEndpoint will be associated with.
                  This cannot be changed after the OriginEndpoint is created.
                type: string
              cmafPackage:
                description: A Common Media Application Format (CMAF) packaging configuration.
                type: object
                properties:
                  Encryption:
                    $ref: '#/definitions/CmafEncryption'
                  HlsManifests:
                    description: A list of HLS manifest configurations
                    $ref: '#/definitions/__listOfHlsManifestCreateOrUpdateParameters'
                  SegmentDurationSeconds:
                    description: |
                      Duration (in seconds) of each segment. Actual segments will be
                      rounded to the nearest multiple of the source segment duration.
                    $ref: '#/definitions/__integer'
                  SegmentPrefix:
                    description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
                    $ref: '#/definitions/__string'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
              dashPackage:
                description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
                type: object
                properties:
                  AdTriggers:
                    $ref: '#/definitions/AdTriggers'
                  AdsOnDeliveryRestrictions:
                    $ref: '#/definitions/AdsOnDeliveryRestrictions'
                  Encryption:
                    $ref: '#/definitions/DashEncryption'
                  ManifestLayout:
                    description: 'Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.'
                    $ref: '#/definitions/ManifestLayout'
                  ManifestWindowSeconds:
                    description: Time window (in seconds) contained in each manifest.
                    $ref: '#/definitions/__integer'
                  MinBufferTimeSeconds:
                    description: Minimum duration (in seconds) that a player will buffer media before starting the presentation.
                    $ref: '#/definitions/__integer'
                  MinUpdatePeriodSeconds:
                    description: Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
                    $ref: '#/definitions/__integer'
                  PeriodTriggers:
                    description: |
                      A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
                      Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
                      be partitioned into more than one period. If the list contains "ADS", new periods will be created where
                      the Channel source contains SCTE-35 ad markers.
                    $ref: '#/definitions/__listOf__PeriodTriggersElement'
                  Profile:
                    description: 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.'
                    $ref: '#/definitions/Profile'
                  SegmentDurationSeconds:
                    description: |
                      Duration (in seconds) of each segment. Actual segments will be
                      rounded to the nearest multiple of the source segment duration.
                    $ref: '#/definitions/__integer'
                  SegmentTemplateFormat:
                    description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
                    $ref: '#/definitions/SegmentTemplateFormat'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
                  SuggestedPresentationDelaySeconds:
                    description: Duration (in seconds) to delay live content before presentation.
                    $ref: '#/definitions/__integer'
              description:
                description: A short text description of the OriginEndpoint.
                type: string
              hlsPackage:
                description: An HTTP Live Streaming (HLS) packaging configuration.
                type: object
                properties:
                  AdMarkers:
                    description: |
                      This setting controls how ad markers are included in the packaged OriginEndpoint.
                      "NONE" will omit all SCTE-35 ad markers from the output.
                      "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                      markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                      "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                      messages in the input source.
                    $ref: '#/definitions/AdMarkers'
                  AdTriggers:
                    $ref: '#/definitions/AdTriggers'
                  AdsOnDeliveryRestrictions:
                    $ref: '#/definitions/AdsOnDeliveryRestrictions'
                  Encryption:
                    $ref: '#/definitions/HlsEncryption'
                  IncludeIframeOnlyStream:
                    description: 'When enabled, an I-Frame only stream will be included in the output.'
                    $ref: '#/definitions/__boolean'
                  PlaylistType:
                    description: |
                      The HTTP Live Streaming (HLS) playlist type.
                      When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
                      entry will be included in the media playlist.
                    $ref: '#/definitions/PlaylistType'
                  PlaylistWindowSeconds:
                    description: Time window (in seconds) contained in each parent manifest.
                    $ref: '#/definitions/__integer'
                  ProgramDateTimeIntervalSeconds:
                    description: |
                      The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                      inserted into manifests. Additionally, when an interval is specified
                      ID3Timed Metadata messages will be generated every 5 seconds using the
                      ingest time of the content.
                      If the interval is not specified, or set to 0, then
                      no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                      ID3Timed Metadata messages will be generated. Note that irrespective
                      of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                      it will be passed through to HLS output.
                    $ref: '#/definitions/__integer'
                  SegmentDurationSeconds:
                    description: |
                      Duration (in seconds) of each fragment. Actual fragments will be
                      rounded to the nearest multiple of the source fragment duration.
                    $ref: '#/definitions/__integer'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
                  UseAudioRenditionGroup:
                    description: 'When enabled, audio streams will be placed in rendition groups in the output.'
                    $ref: '#/definitions/__boolean'
              id:
                description: |
                  The ID of the OriginEndpoint.  The ID must be unique within the region
                  and it cannot be changed after the OriginEndpoint is created.
                type: string
              manifestName:
                description: A short string that will be used as the filename of the OriginEndpoint URL (defaults to "index").
                type: string
              mssPackage:
                description: A Microsoft Smooth Streaming (MSS) packaging configuration.
                type: object
                properties:
                  Encryption:
                    $ref: '#/definitions/MssEncryption'
                  ManifestWindowSeconds:
                    description: The time window (in seconds) contained in each manifest.
                    $ref: '#/definitions/__integer'
                  SegmentDurationSeconds:
                    description: The duration (in seconds) of each segment.
                    $ref: '#/definitions/__integer'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
              origination:
                description: |
                  Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                  may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                  requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
                enum:
                  - ALLOW
                  - DENY
                type: string
              startoverWindowSeconds:
                description: |
                  Maximum duration (seconds) of content to retain for startover playback.
                  If not specified, startover playback will be disabled for the OriginEndpoint.
                type: integer
              tags:
                description: A collection of tags associated with a resource
                type: object
                additionalProperties:
                  $ref: '#/definitions/__string'
              timeDelaySeconds:
                description: |
                  Amount of delay (seconds) to enforce on the playback of live content.
                  If not specified, there will be no time delay in effect for the OriginEndpoint.
                type: integer
              whitelist:
                description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
                type: array
                items:
                  $ref: '#/definitions/__string'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListOriginEndpoints
      description: Returns a collection of OriginEndpoint records.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOriginEndpointsResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: channelId
          in: query
          required: false
          description: 'When specified, the request will return only OriginEndpoints associated with the given Channel ID.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The upper bound on the number of records to return.
          type: integer
          minimum: 1
          maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: A token used to resume pagination from the end of a previous request.
          type: string
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
  '/channels/{id}':
    delete:
      operationId: DeleteChannel
      description: Deletes an existing Channel.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteChannelResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Channel to delete.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeChannel
      description: Gets details about a Channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeChannelResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of a Channel.
          type: string
    put:
      operationId: UpdateChannel
      description: Updates an existing Channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateChannelResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Channel to update.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              description:
                description: A short text description of the Channel.
                type: string
  '/origin_endpoints/{id}':
    delete:
      operationId: DeleteOriginEndpoint
      description: Deletes an existing OriginEndpoint.
      responses:
        '202':
          description: Success
          schema:
            $ref: '#/definitions/DeleteOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint to delete.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeOriginEndpoint
      description: Gets details about an existing OriginEndpoint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint.
          type: string
    put:
      operationId: UpdateOriginEndpoint
      description: Updates an existing OriginEndpoint.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateOriginEndpointResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the OriginEndpoint to update.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - authorization
            properties:
              authorization:
                description: CDN Authorization credentials
                type: object
                properties:
                  CdnIdentifierSecret:
                    description: |
                      The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
                    $ref: '#/definitions/__string'
                  SecretsRoleArn:
                    description: |
                      The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
                    $ref: '#/definitions/__string'
              cmafPackage:
                description: A Common Media Application Format (CMAF) packaging configuration.
                type: object
                properties:
                  Encryption:
                    $ref: '#/definitions/CmafEncryption'
                  HlsManifests:
                    description: A list of HLS manifest configurations
                    $ref: '#/definitions/__listOfHlsManifestCreateOrUpdateParameters'
                  SegmentDurationSeconds:
                    description: |
                      Duration (in seconds) of each segment. Actual segments will be
                      rounded to the nearest multiple of the source segment duration.
                    $ref: '#/definitions/__integer'
                  SegmentPrefix:
                    description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
                    $ref: '#/definitions/__string'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
              dashPackage:
                description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
                type: object
                properties:
                  AdTriggers:
                    $ref: '#/definitions/AdTriggers'
                  AdsOnDeliveryRestrictions:
                    $ref: '#/definitions/AdsOnDeliveryRestrictions'
                  Encryption:
                    $ref: '#/definitions/DashEncryption'
                  ManifestLayout:
                    description: 'Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.'
                    $ref: '#/definitions/ManifestLayout'
                  ManifestWindowSeconds:
                    description: Time window (in seconds) contained in each manifest.
                    $ref: '#/definitions/__integer'
                  MinBufferTimeSeconds:
                    description: Minimum duration (in seconds) that a player will buffer media before starting the presentation.
                    $ref: '#/definitions/__integer'
                  MinUpdatePeriodSeconds:
                    description: Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
                    $ref: '#/definitions/__integer'
                  PeriodTriggers:
                    description: |
                      A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
                      Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
                      be partitioned into more than one period. If the list contains "ADS", new periods will be created where
                      the Channel source contains SCTE-35 ad markers.
                    $ref: '#/definitions/__listOf__PeriodTriggersElement'
                  Profile:
                    description: 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.'
                    $ref: '#/definitions/Profile'
                  SegmentDurationSeconds:
                    description: |
                      Duration (in seconds) of each segment. Actual segments will be
                      rounded to the nearest multiple of the source segment duration.
                    $ref: '#/definitions/__integer'
                  SegmentTemplateFormat:
                    description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
                    $ref: '#/definitions/SegmentTemplateFormat'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
                  SuggestedPresentationDelaySeconds:
                    description: Duration (in seconds) to delay live content before presentation.
                    $ref: '#/definitions/__integer'
              description:
                description: A short text description of the OriginEndpoint.
                type: string
              hlsPackage:
                description: An HTTP Live Streaming (HLS) packaging configuration.
                type: object
                properties:
                  AdMarkers:
                    description: |
                      This setting controls how ad markers are included in the packaged OriginEndpoint.
                      "NONE" will omit all SCTE-35 ad markers from the output.
                      "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
                      markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
                      "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
                      messages in the input source.
                    $ref: '#/definitions/AdMarkers'
                  AdTriggers:
                    $ref: '#/definitions/AdTriggers'
                  AdsOnDeliveryRestrictions:
                    $ref: '#/definitions/AdsOnDeliveryRestrictions'
                  Encryption:
                    $ref: '#/definitions/HlsEncryption'
                  IncludeIframeOnlyStream:
                    description: 'When enabled, an I-Frame only stream will be included in the output.'
                    $ref: '#/definitions/__boolean'
                  PlaylistType:
                    description: |
                      The HTTP Live Streaming (HLS) playlist type.
                      When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
                      entry will be included in the media playlist.
                    $ref: '#/definitions/PlaylistType'
                  PlaylistWindowSeconds:
                    description: Time window (in seconds) contained in each parent manifest.
                    $ref: '#/definitions/__integer'
                  ProgramDateTimeIntervalSeconds:
                    description: |
                      The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
                      inserted into manifests. Additionally, when an interval is specified
                      ID3Timed Metadata messages will be generated every 5 seconds using the
                      ingest time of the content.
                      If the interval is not specified, or set to 0, then
                      no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
                      ID3Timed Metadata messages will be generated. Note that irrespective
                      of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
                      it will be passed through to HLS output.
                    $ref: '#/definitions/__integer'
                  SegmentDurationSeconds:
                    description: |
                      Duration (in seconds) of each fragment. Actual fragments will be
                      rounded to the nearest multiple of the source fragment duration.
                    $ref: '#/definitions/__integer'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
                  UseAudioRenditionGroup:
                    description: 'When enabled, audio streams will be placed in rendition groups in the output.'
                    $ref: '#/definitions/__boolean'
              manifestName:
                description: A short string that will be appended to the end of the Endpoint URL.
                type: string
              mssPackage:
                description: A Microsoft Smooth Streaming (MSS) packaging configuration.
                type: object
                properties:
                  Encryption:
                    $ref: '#/definitions/MssEncryption'
                  ManifestWindowSeconds:
                    description: The time window (in seconds) contained in each manifest.
                    $ref: '#/definitions/__integer'
                  SegmentDurationSeconds:
                    description: The duration (in seconds) of each segment.
                    $ref: '#/definitions/__integer'
                  StreamSelection:
                    $ref: '#/definitions/StreamSelection'
              origination:
                description: |
                  Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
                  may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
                  requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
                enum:
                  - ALLOW
                  - DENY
                type: string
              startoverWindowSeconds:
                description: |
                  Maximum duration (in seconds) of content to retain for startover playback.
                  If not specified, startover playback will be disabled for the OriginEndpoint.
                type: integer
              timeDelaySeconds:
                description: |
                  Amount of delay (in seconds) to enforce on the playback of live content.
                  If not specified, there will be no time delay in effect for the OriginEndpoint.
                type: integer
              whitelist:
                description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
                type: array
                items:
                  $ref: '#/definitions/__string'
  '/harvest_jobs/{id}':
    get:
      operationId: DescribeHarvestJob
      description: Gets details about an existing HarvestJob.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeHarvestJobResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the HarvestJob.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resource-arn}':
    get:
      operationId: ListTagsForResource
      description: ''
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: TagResource
      description: ''
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - tags
            properties:
              tags:
                description: ''
                type: object
                additionalProperties:
                  $ref: '#/definitions/__string'
  '/channels/{id}/credentials':
    put:
      deprecated: true
      operationId: RotateChannelCredentials
      description: Changes the Channel's first IngestEndpoint's username and password. WARNING - This API is deprecated. Please use RotateIngestEndpointCredentials instead
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RotateChannelCredentialsResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the channel to update.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/channels/{id}/ingest_endpoints/{ingest_endpoint_id}/credentials':
    put:
      operationId: RotateIngestEndpointCredentials
      description: 'Rotate the IngestEndpoint''s username and password, as specified by the IngestEndpoint''s id.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RotateIngestEndpointCredentialsResponse'
        '480':
          description: UnprocessableEntityException
          schema:
            $ref: '#/definitions/UnprocessableEntityException'
        '481':
          description: InternalServerErrorException
          schema:
            $ref: '#/definitions/InternalServerErrorException'
        '482':
          description: ForbiddenException
          schema:
            $ref: '#/definitions/ForbiddenException'
        '483':
          description: NotFoundException
          schema:
            $ref: '#/definitions/NotFoundException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: TooManyRequestsException
          schema:
            $ref: '#/definitions/TooManyRequestsException'
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the channel the IngestEndpoint is on.
          type: string
        - name: ingest_endpoint_id
          in: path
          required: true
          description: The id of the IngestEndpoint whose credentials should be rotated
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags/{resource-arn}#tagKeys':
    delete:
      operationId: UntagResource
      description: ''
      responses:
        '204':
          description: Success
      parameters:
        - name: resource-arn
          in: path
          required: true
          description: ''
          type: string
        - name: tagKeys
          in: query
          required: true
          description: The key(s) of tag to be deleted
          type: array
          items:
            type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateChannelResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the Channel.
        $ref: '#/definitions/__string'
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
      HlsIngest:
        $ref: '#/definitions/HlsIngest'
      Id:
        description: The ID of the Channel.
        $ref: '#/definitions/__string'
      Tags:
        $ref: '#/definitions/Tags'
  __string:
    type: string
  UnprocessableEntityException: {}
  InternalServerErrorException: {}
  ForbiddenException: {}
  NotFoundException: {}
  ServiceUnavailableException: {}
  TooManyRequestsException: {}
  CreateHarvestJobResponse:
    type: object
    properties:
      Arn:
        description: |
          The Amazon Resource Name (ARN) assigned to the HarvestJob.
        $ref: '#/definitions/__string'
      ChannelId:
        description: |
          The ID of the Channel that the HarvestJob will harvest from.
        $ref: '#/definitions/__string'
      CreatedAt:
        description: |
          The time the HarvestJob was submitted
        $ref: '#/definitions/__string'
      EndTime:
        description: |
          The end of the time-window which will be harvested.
        $ref: '#/definitions/__string'
      Id:
        description: |
          The ID of the HarvestJob. The ID must be unique within the region
          and it cannot be changed after the HarvestJob is submitted.
        $ref: '#/definitions/__string'
      OriginEndpointId:
        description: |
          The ID of the OriginEndpoint that the HarvestJob will harvest from.
          This cannot be changed after the HarvestJob is submitted.
        $ref: '#/definitions/__string'
      S3Destination:
        $ref: '#/definitions/S3Destination'
      StartTime:
        description: |
          The start of the time-window which will be harvested.
        $ref: '#/definitions/__string'
      Status:
        description: |
          The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
          HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
          include an explanation of why the HarvestJob failed.
        $ref: '#/definitions/Status'
  CreateOriginEndpointResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        $ref: '#/definitions/__string'
      Authorization:
        $ref: '#/definitions/Authorization'
      ChannelId:
        description: The ID of the Channel the OriginEndpoint is associated with.
        $ref: '#/definitions/__string'
      CmafPackage:
        $ref: '#/definitions/CmafPackage'
      DashPackage:
        $ref: '#/definitions/DashPackage'
      Description:
        description: A short text description of the OriginEndpoint.
        $ref: '#/definitions/__string'
      HlsPackage:
        $ref: '#/definitions/HlsPackage'
      Id:
        description: The ID of the OriginEndpoint.
        $ref: '#/definitions/__string'
      ManifestName:
        description: A short string appended to the end of the OriginEndpoint URL.
        $ref: '#/definitions/__string'
      MssPackage:
        $ref: '#/definitions/MssPackage'
      Origination:
        description: |
          Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
          may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
          requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        $ref: '#/definitions/Origination'
      StartoverWindowSeconds:
        description: |
          Maximum duration (seconds) of content to retain for startover playback.
          If not specified, startover playback will be disabled for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Tags:
        $ref: '#/definitions/Tags'
      TimeDelaySeconds:
        description: |
          Amount of delay (seconds) to enforce on the playback of live content.
          If not specified, there will be no time delay in effect for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Url:
        description: The URL of the packaged OriginEndpoint for consumption.
        $ref: '#/definitions/__string'
      Whitelist:
        description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
        $ref: '#/definitions/__listOf__string'
  CmafEncryption:
    required:
      - SpekeKeyProvider
    type: object
    properties:
      KeyRotationIntervalSeconds:
        description: Time (in seconds) between each encryption key rotation.
        $ref: '#/definitions/__integer'
      SpekeKeyProvider:
        $ref: '#/definitions/SpekeKeyProvider'
    description: A Common Media Application Format (CMAF) encryption configuration.
  __listOfHlsManifestCreateOrUpdateParameters:
    type: array
    items:
      $ref: '#/definitions/HlsManifestCreateOrUpdateParameters'
  __integer:
    type: integer
  StreamSelection:
    type: object
    properties:
      MaxVideoBitsPerSecond:
        description: The maximum video bitrate (bps) to include in output.
        $ref: '#/definitions/__integer'
      MinVideoBitsPerSecond:
        description: The minimum video bitrate (bps) to include in output.
        $ref: '#/definitions/__integer'
      StreamOrder:
        description: A directive that determines the order of streams in the output.
        $ref: '#/definitions/StreamOrder'
    description: A StreamSelection configuration.
  AdTriggers:
    type: array
    description: |
      A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no
      ad markers are output.  Specify multiple items to create ad markers for all of the included
      message types.
    items:
      $ref: '#/definitions/__AdTriggersElement'
  AdsOnDeliveryRestrictions:
    enum:
      - NONE
      - RESTRICTED
      - UNRESTRICTED
      - BOTH
    type: string
    description: |
      This setting allows the delivery restriction flags on SCTE-35 segmentation descriptors to
      determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35 messages become
      ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that
      contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED" means SCTE-35
      messages of the types specified in AdTriggers that do not contain delivery restrictions will
      be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types specified in
      AdTriggers will be treated as ads.  Note that Splice Insert messages do not have these flags
      and are always treated as ads if specified in AdTriggers.
  DashEncryption:
    required:
      - SpekeKeyProvider
    type: object
    properties:
      KeyRotationIntervalSeconds:
        description: Time (in seconds) between each encryption key rotation.
        $ref: '#/definitions/__integer'
      SpekeKeyProvider:
        $ref: '#/definitions/SpekeKeyProvider'
    description: A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
  ManifestLayout:
    enum:
      - FULL
      - COMPACT
    type: string
  __listOf__PeriodTriggersElement:
    type: array
    items:
      $ref: '#/definitions/__PeriodTriggersElement'
  Profile:
    enum:
      - NONE
      - HBBTV_1_5
    type: string
  SegmentTemplateFormat:
    enum:
      - NUMBER_WITH_TIMELINE
      - TIME_WITH_TIMELINE
      - NUMBER_WITH_DURATION
    type: string
  AdMarkers:
    enum:
      - NONE
      - SCTE35_ENHANCED
      - PASSTHROUGH
    type: string
  HlsEncryption:
    required:
      - SpekeKeyProvider
    type: object
    properties:
      ConstantInitializationVector:
        description: |
          A constant initialization vector for encryption (optional).
          When not specified the initialization vector will be periodically rotated.
        $ref: '#/definitions/__string'
      EncryptionMethod:
        description: The encryption method to use.
        $ref: '#/definitions/EncryptionMethod'
      KeyRotationIntervalSeconds:
        description: Interval (in seconds) between each encryption key rotation.
        $ref: '#/definitions/__integer'
      RepeatExtXKey:
        description: 'When enabled, the EXT-X-KEY tag will be repeated in output manifests.'
        $ref: '#/definitions/__boolean'
      SpekeKeyProvider:
        $ref: '#/definitions/SpekeKeyProvider'
    description: An HTTP Live Streaming (HLS) encryption configuration.
  __boolean:
    type: boolean
  PlaylistType:
    enum:
      - NONE
      - EVENT
      - VOD
    type: string
  MssEncryption:
    required:
      - SpekeKeyProvider
    type: object
    properties:
      SpekeKeyProvider:
        $ref: '#/definitions/SpekeKeyProvider'
    description: A Microsoft Smooth Streaming (MSS) encryption configuration.
  DeleteChannelResponse:
    type: object
    properties: {}
  DeleteOriginEndpointResponse:
    type: object
    properties: {}
  DescribeChannelResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the Channel.
        $ref: '#/definitions/__string'
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
      HlsIngest:
        $ref: '#/definitions/HlsIngest'
      Id:
        description: The ID of the Channel.
        $ref: '#/definitions/__string'
      Tags:
        $ref: '#/definitions/Tags'
  DescribeHarvestJobResponse:
    type: object
    properties:
      Arn:
        description: |
          The Amazon Resource Name (ARN) assigned to the HarvestJob.
        $ref: '#/definitions/__string'
      ChannelId:
        description: |
          The ID of the Channel that the HarvestJob will harvest from.
        $ref: '#/definitions/__string'
      CreatedAt:
        description: |
          The time the HarvestJob was submitted
        $ref: '#/definitions/__string'
      EndTime:
        description: |
          The end of the time-window which will be harvested.
        $ref: '#/definitions/__string'
      Id:
        description: |
          The ID of the HarvestJob. The ID must be unique within the region
          and it cannot be changed after the HarvestJob is submitted.
        $ref: '#/definitions/__string'
      OriginEndpointId:
        description: |
          The ID of the OriginEndpoint that the HarvestJob will harvest from.
          This cannot be changed after the HarvestJob is submitted.
        $ref: '#/definitions/__string'
      S3Destination:
        $ref: '#/definitions/S3Destination'
      StartTime:
        description: |
          The start of the time-window which will be harvested.
        $ref: '#/definitions/__string'
      Status:
        description: |
          The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
          HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
          include an explanation of why the HarvestJob failed.
        $ref: '#/definitions/Status'
  DescribeOriginEndpointResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        $ref: '#/definitions/__string'
      Authorization:
        $ref: '#/definitions/Authorization'
      ChannelId:
        description: The ID of the Channel the OriginEndpoint is associated with.
        $ref: '#/definitions/__string'
      CmafPackage:
        $ref: '#/definitions/CmafPackage'
      DashPackage:
        $ref: '#/definitions/DashPackage'
      Description:
        description: A short text description of the OriginEndpoint.
        $ref: '#/definitions/__string'
      HlsPackage:
        $ref: '#/definitions/HlsPackage'
      Id:
        description: The ID of the OriginEndpoint.
        $ref: '#/definitions/__string'
      ManifestName:
        description: A short string appended to the end of the OriginEndpoint URL.
        $ref: '#/definitions/__string'
      MssPackage:
        $ref: '#/definitions/MssPackage'
      Origination:
        description: |
          Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
          may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
          requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        $ref: '#/definitions/Origination'
      StartoverWindowSeconds:
        description: |
          Maximum duration (seconds) of content to retain for startover playback.
          If not specified, startover playback will be disabled for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Tags:
        $ref: '#/definitions/Tags'
      TimeDelaySeconds:
        description: |
          Amount of delay (seconds) to enforce on the playback of live content.
          If not specified, there will be no time delay in effect for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Url:
        description: The URL of the packaged OriginEndpoint for consumption.
        $ref: '#/definitions/__string'
      Whitelist:
        description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
        $ref: '#/definitions/__listOf__string'
  ListChannelsResponse:
    type: object
    properties:
      Channels:
        description: A list of Channel records.
        $ref: '#/definitions/__listOfChannel'
      NextToken:
        description: A token that can be used to resume pagination from the end of the collection.
        $ref: '#/definitions/__string'
  ListHarvestJobsResponse:
    type: object
    properties:
      HarvestJobs:
        description: A list of HarvestJob records.
        $ref: '#/definitions/__listOfHarvestJob'
      NextToken:
        description: A token that can be used to resume pagination from the end of the collection.
        $ref: '#/definitions/__string'
  ListOriginEndpointsResponse:
    type: object
    properties:
      NextToken:
        description: A token that can be used to resume pagination from the end of the collection.
        $ref: '#/definitions/__string'
      OriginEndpoints:
        description: A list of OriginEndpoint records.
        $ref: '#/definitions/__listOfOriginEndpoint'
  ListTagsForResourceResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/__mapOf__string'
  RotateChannelCredentialsResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the Channel.
        $ref: '#/definitions/__string'
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
      HlsIngest:
        $ref: '#/definitions/HlsIngest'
      Id:
        description: The ID of the Channel.
        $ref: '#/definitions/__string'
      Tags:
        $ref: '#/definitions/Tags'
  RotateIngestEndpointCredentialsResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the Channel.
        $ref: '#/definitions/__string'
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
      HlsIngest:
        $ref: '#/definitions/HlsIngest'
      Id:
        description: The ID of the Channel.
        $ref: '#/definitions/__string'
      Tags:
        $ref: '#/definitions/Tags'
  UpdateChannelResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the Channel.
        $ref: '#/definitions/__string'
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
      HlsIngest:
        $ref: '#/definitions/HlsIngest'
      Id:
        description: The ID of the Channel.
        $ref: '#/definitions/__string'
      Tags:
        $ref: '#/definitions/Tags'
  UpdateOriginEndpointResponse:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        $ref: '#/definitions/__string'
      Authorization:
        $ref: '#/definitions/Authorization'
      ChannelId:
        description: The ID of the Channel the OriginEndpoint is associated with.
        $ref: '#/definitions/__string'
      CmafPackage:
        $ref: '#/definitions/CmafPackage'
      DashPackage:
        $ref: '#/definitions/DashPackage'
      Description:
        description: A short text description of the OriginEndpoint.
        $ref: '#/definitions/__string'
      HlsPackage:
        $ref: '#/definitions/HlsPackage'
      Id:
        description: The ID of the OriginEndpoint.
        $ref: '#/definitions/__string'
      ManifestName:
        description: A short string appended to the end of the OriginEndpoint URL.
        $ref: '#/definitions/__string'
      MssPackage:
        $ref: '#/definitions/MssPackage'
      Origination:
        description: |
          Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
          may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
          requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        $ref: '#/definitions/Origination'
      StartoverWindowSeconds:
        description: |
          Maximum duration (seconds) of content to retain for startover playback.
          If not specified, startover playback will be disabled for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Tags:
        $ref: '#/definitions/Tags'
      TimeDelaySeconds:
        description: |
          Amount of delay (seconds) to enforce on the playback of live content.
          If not specified, there will be no time delay in effect for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Url:
        description: The URL of the packaged OriginEndpoint for consumption.
        $ref: '#/definitions/__string'
      Whitelist:
        description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
        $ref: '#/definitions/__listOf__string'
  __AdTriggersElement:
    enum:
      - SPLICE_INSERT
      - BREAK
      - PROVIDER_ADVERTISEMENT
      - DISTRIBUTOR_ADVERTISEMENT
      - PROVIDER_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_PLACEMENT_OPPORTUNITY
      - PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY
      - DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY
    type: string
  Authorization:
    required:
      - SecretsRoleArn
      - CdnIdentifierSecret
    type: object
    properties:
      CdnIdentifierSecret:
        description: |
          The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.
        $ref: '#/definitions/__string'
      SecretsRoleArn:
        description: |
          The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.
        $ref: '#/definitions/__string'
    description: CDN Authorization credentials
  HlsIngest:
    type: object
    properties:
      IngestEndpoints:
        description: A list of endpoints to which the source stream should be sent.
        $ref: '#/definitions/__listOfIngestEndpoint'
    description: An HTTP Live Streaming (HLS) ingest resource configuration.
  Tags:
    type: object
    description: A collection of tags associated with a resource
    additionalProperties:
      $ref: '#/definitions/__string'
  Channel:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the Channel.
        $ref: '#/definitions/__string'
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
      HlsIngest:
        $ref: '#/definitions/HlsIngest'
      Id:
        description: The ID of the Channel.
        $ref: '#/definitions/__string'
      Tags:
        $ref: '#/definitions/Tags'
    description: A Channel resource configuration.
  SpekeKeyProvider:
    required:
      - ResourceId
      - SystemIds
      - Url
      - RoleArn
    type: object
    properties:
      CertificateArn:
        description: |
          An Amazon Resource Name (ARN) of a Certificate Manager certificate
          that MediaPackage will use for enforcing secure end-to-end data
          transfer with the key provider service.
        $ref: '#/definitions/__string'
      ResourceId:
        description: The resource ID to include in key requests.
        $ref: '#/definitions/__string'
      RoleArn:
        description: |
          An Amazon Resource Name (ARN) of an IAM role that AWS Elemental
          MediaPackage will assume when accessing the key provider service.
        $ref: '#/definitions/__string'
      SystemIds:
        description: The system IDs to include in key requests.
        $ref: '#/definitions/__listOf__string'
      Url:
        description: The URL of the external key provider service.
        $ref: '#/definitions/__string'
    description: A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
  __listOfHlsManifest:
    type: array
    items:
      $ref: '#/definitions/HlsManifest'
  CmafPackage:
    type: object
    properties:
      Encryption:
        $ref: '#/definitions/CmafEncryption'
      HlsManifests:
        description: A list of HLS manifest configurations
        $ref: '#/definitions/__listOfHlsManifest'
      SegmentDurationSeconds:
        description: |
          Duration (in seconds) of each segment. Actual segments will be
          rounded to the nearest multiple of the source segment duration.
        $ref: '#/definitions/__integer'
      SegmentPrefix:
        description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
        $ref: '#/definitions/__string'
      StreamSelection:
        $ref: '#/definitions/StreamSelection'
    description: A Common Media Application Format (CMAF) packaging configuration.
  CmafPackageCreateOrUpdateParameters:
    type: object
    properties:
      Encryption:
        $ref: '#/definitions/CmafEncryption'
      HlsManifests:
        description: A list of HLS manifest configurations
        $ref: '#/definitions/__listOfHlsManifestCreateOrUpdateParameters'
      SegmentDurationSeconds:
        description: |
          Duration (in seconds) of each segment. Actual segments will be
          rounded to the nearest multiple of the source segment duration.
        $ref: '#/definitions/__integer'
      SegmentPrefix:
        description: 'An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.'
        $ref: '#/definitions/__string'
      StreamSelection:
        $ref: '#/definitions/StreamSelection'
    description: A Common Media Application Format (CMAF) packaging configuration.
  CreateChannelRequest:
    required:
      - Id
    type: object
    properties:
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
      Id:
        description: |
          The ID of the Channel. The ID must be unique within the region and it
          cannot be changed after a Channel is created.
        $ref: '#/definitions/__string'
      Tags:
        $ref: '#/definitions/Tags'
    description: A new Channel configuration.
  S3Destination:
    required:
      - ManifestKey
      - BucketName
      - RoleArn
    type: object
    properties:
      BucketName:
        description: |
          The name of an S3 bucket within which harvested content will be exported
        $ref: '#/definitions/__string'
      ManifestKey:
        description: |
          The key in the specified S3 bucket where the harvested top-level manifest will be placed.
        $ref: '#/definitions/__string'
      RoleArn:
        description: |
          The IAM role used to write to the specified S3 bucket
        $ref: '#/definitions/__string'
    description: |
      Configuration parameters for where in an S3 bucket to place the harvested content
  CreateHarvestJobRequest:
    required:
      - S3Destination
      - EndTime
      - OriginEndpointId
      - StartTime
      - Id
    type: object
    properties:
      EndTime:
        description: |
          The end of the time-window which will be harvested
        $ref: '#/definitions/__string'
      Id:
        description: |
          The ID of the HarvestJob. The ID must be unique within the region
          and it cannot be changed after the HarvestJob is submitted
        $ref: '#/definitions/__string'
      OriginEndpointId:
        description: |
          The ID of the OriginEndpoint that the HarvestJob will harvest from.
          This cannot be changed after the HarvestJob is submitted.
        $ref: '#/definitions/__string'
      S3Destination:
        $ref: '#/definitions/S3Destination'
      StartTime:
        description: |
          The start of the time-window which will be harvested
        $ref: '#/definitions/__string'
    description: Configuration parameters used to create a new HarvestJob.
  Status:
    enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
    type: string
  DashPackage:
    type: object
    properties:
      AdTriggers:
        $ref: '#/definitions/AdTriggers'
      AdsOnDeliveryRestrictions:
        $ref: '#/definitions/AdsOnDeliveryRestrictions'
      Encryption:
        $ref: '#/definitions/DashEncryption'
      ManifestLayout:
        description: 'Determines the position of some tags in the Media Presentation Description (MPD).  When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation.  When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.'
        $ref: '#/definitions/ManifestLayout'
      ManifestWindowSeconds:
        description: Time window (in seconds) contained in each manifest.
        $ref: '#/definitions/__integer'
      MinBufferTimeSeconds:
        description: Minimum duration (in seconds) that a player will buffer media before starting the presentation.
        $ref: '#/definitions/__integer'
      MinUpdatePeriodSeconds:
        description: Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).
        $ref: '#/definitions/__integer'
      PeriodTriggers:
        description: |
          A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH)
          Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not
          be partitioned into more than one period. If the list contains "ADS", new periods will be created where
          the Channel source contains SCTE-35 ad markers.
        $ref: '#/definitions/__listOf__PeriodTriggersElement'
      Profile:
        description: 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type.  When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.'
        $ref: '#/definitions/Profile'
      SegmentDurationSeconds:
        description: |
          Duration (in seconds) of each segment. Actual segments will be
          rounded to the nearest multiple of the source segment duration.
        $ref: '#/definitions/__integer'
      SegmentTemplateFormat:
        description: 'Determines the type of SegmentTemplate included in the Media Presentation Description (MPD).  When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs.  When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.'
        $ref: '#/definitions/SegmentTemplateFormat'
      StreamSelection:
        $ref: '#/definitions/StreamSelection'
      SuggestedPresentationDelaySeconds:
        description: Duration (in seconds) to delay live content before presentation.
        $ref: '#/definitions/__integer'
    description: A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
  HlsPackage:
    type: object
    properties:
      AdMarkers:
        description: |
          This setting controls how ad markers are included in the packaged OriginEndpoint.
          "NONE" will omit all SCTE-35 ad markers from the output.
          "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
          markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
          "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
          messages in the input source.
        $ref: '#/definitions/AdMarkers'
      AdTriggers:
        $ref: '#/definitions/AdTriggers'
      AdsOnDeliveryRestrictions:
        $ref: '#/definitions/AdsOnDeliveryRestrictions'
      Encryption:
        $ref: '#/definitions/HlsEncryption'
      IncludeIframeOnlyStream:
        description: 'When enabled, an I-Frame only stream will be included in the output.'
        $ref: '#/definitions/__boolean'
      PlaylistType:
        description: |
          The HTTP Live Streaming (HLS) playlist type.
          When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
          entry will be included in the media playlist.
        $ref: '#/definitions/PlaylistType'
      PlaylistWindowSeconds:
        description: Time window (in seconds) contained in each parent manifest.
        $ref: '#/definitions/__integer'
      ProgramDateTimeIntervalSeconds:
        description: |
          The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
          inserted into manifests. Additionally, when an interval is specified
          ID3Timed Metadata messages will be generated every 5 seconds using the
          ingest time of the content.
          If the interval is not specified, or set to 0, then
          no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
          ID3Timed Metadata messages will be generated. Note that irrespective
          of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
          it will be passed through to HLS output.
        $ref: '#/definitions/__integer'
      SegmentDurationSeconds:
        description: |
          Duration (in seconds) of each fragment. Actual fragments will be
          rounded to the nearest multiple of the source fragment duration.
        $ref: '#/definitions/__integer'
      StreamSelection:
        $ref: '#/definitions/StreamSelection'
      UseAudioRenditionGroup:
        description: 'When enabled, audio streams will be placed in rendition groups in the output.'
        $ref: '#/definitions/__boolean'
    description: An HTTP Live Streaming (HLS) packaging configuration.
  MssPackage:
    type: object
    properties:
      Encryption:
        $ref: '#/definitions/MssEncryption'
      ManifestWindowSeconds:
        description: The time window (in seconds) contained in each manifest.
        $ref: '#/definitions/__integer'
      SegmentDurationSeconds:
        description: The duration (in seconds) of each segment.
        $ref: '#/definitions/__integer'
      StreamSelection:
        $ref: '#/definitions/StreamSelection'
    description: A Microsoft Smooth Streaming (MSS) packaging configuration.
  Origination:
    enum:
      - ALLOW
      - DENY
    type: string
  __listOf__string:
    type: array
    items:
      $ref: '#/definitions/__string'
  CreateOriginEndpointRequest:
    required:
      - Id
      - ChannelId
    type: object
    properties:
      Authorization:
        $ref: '#/definitions/Authorization'
      ChannelId:
        description: |
          The ID of the Channel that the OriginEndpoint will be associated with.
          This cannot be changed after the OriginEndpoint is created.
        $ref: '#/definitions/__string'
      CmafPackage:
        $ref: '#/definitions/CmafPackageCreateOrUpdateParameters'
      DashPackage:
        $ref: '#/definitions/DashPackage'
      Description:
        description: A short text description of the OriginEndpoint.
        $ref: '#/definitions/__string'
      HlsPackage:
        $ref: '#/definitions/HlsPackage'
      Id:
        description: |
          The ID of the OriginEndpoint.  The ID must be unique within the region
          and it cannot be changed after the OriginEndpoint is created.
        $ref: '#/definitions/__string'
      ManifestName:
        description: A short string that will be used as the filename of the OriginEndpoint URL (defaults to "index").
        $ref: '#/definitions/__string'
      MssPackage:
        $ref: '#/definitions/MssPackage'
      Origination:
        description: |
          Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
          may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
          requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        $ref: '#/definitions/Origination'
      StartoverWindowSeconds:
        description: |
          Maximum duration (seconds) of content to retain for startover playback.
          If not specified, startover playback will be disabled for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Tags:
        $ref: '#/definitions/Tags'
      TimeDelaySeconds:
        description: |
          Amount of delay (seconds) to enforce on the playback of live content.
          If not specified, there will be no time delay in effect for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Whitelist:
        description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
        $ref: '#/definitions/__listOf__string'
    description: Configuration parameters used to create a new OriginEndpoint.
  DeleteChannelRequest:
    type: object
    properties: {}
  DeleteOriginEndpointRequest:
    type: object
    properties: {}
  DescribeChannelRequest:
    type: object
    properties: {}
  DescribeHarvestJobRequest:
    type: object
    properties: {}
  DescribeOriginEndpointRequest:
    type: object
    properties: {}
  EncryptionMethod:
    enum:
      - AES_128
      - SAMPLE_AES
    type: string
  HarvestJob:
    type: object
    properties:
      Arn:
        description: |
          The Amazon Resource Name (ARN) assigned to the HarvestJob.
        $ref: '#/definitions/__string'
      ChannelId:
        description: |
          The ID of the Channel that the HarvestJob will harvest from.
        $ref: '#/definitions/__string'
      CreatedAt:
        description: |
          The time the HarvestJob was submitted
        $ref: '#/definitions/__string'
      EndTime:
        description: |
          The end of the time-window which will be harvested.
        $ref: '#/definitions/__string'
      Id:
        description: |
          The ID of the HarvestJob. The ID must be unique within the region
          and it cannot be changed after the HarvestJob is submitted.
        $ref: '#/definitions/__string'
      OriginEndpointId:
        description: |
          The ID of the OriginEndpoint that the HarvestJob will harvest from.
          This cannot be changed after the HarvestJob is submitted.
        $ref: '#/definitions/__string'
      S3Destination:
        $ref: '#/definitions/S3Destination'
      StartTime:
        description: |
          The start of the time-window which will be harvested.
        $ref: '#/definitions/__string'
      Status:
        description: |
          The current status of the HarvestJob. Consider setting up a CloudWatch Event to listen for
          HarvestJobs as they succeed or fail. In the event of failure, the CloudWatch Event will
          include an explanation of why the HarvestJob failed.
        $ref: '#/definitions/Status'
    description: A HarvestJob resource configuration
  __listOfIngestEndpoint:
    type: array
    items:
      $ref: '#/definitions/IngestEndpoint'
  HlsManifest:
    required:
      - Id
    type: object
    properties:
      AdMarkers:
        description: |
          This setting controls how ad markers are included in the packaged OriginEndpoint.
          "NONE" will omit all SCTE-35 ad markers from the output.
          "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
          markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
          "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
          messages in the input source.
        $ref: '#/definitions/AdMarkers'
      Id:
        description: The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
        $ref: '#/definitions/__string'
      IncludeIframeOnlyStream:
        description: 'When enabled, an I-Frame only stream will be included in the output.'
        $ref: '#/definitions/__boolean'
      ManifestName:
        description: 'An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.'
        $ref: '#/definitions/__string'
      PlaylistType:
        description: |
          The HTTP Live Streaming (HLS) playlist type.
          When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
          entry will be included in the media playlist.
        $ref: '#/definitions/PlaylistType'
      PlaylistWindowSeconds:
        description: Time window (in seconds) contained in each parent manifest.
        $ref: '#/definitions/__integer'
      ProgramDateTimeIntervalSeconds:
        description: |
          The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
          inserted into manifests. Additionally, when an interval is specified
          ID3Timed Metadata messages will be generated every 5 seconds using the
          ingest time of the content.
          If the interval is not specified, or set to 0, then
          no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
          ID3Timed Metadata messages will be generated. Note that irrespective
          of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
          it will be passed through to HLS output.
        $ref: '#/definitions/__integer'
      Url:
        description: The URL of the packaged OriginEndpoint for consumption.
        $ref: '#/definitions/__string'
    description: A HTTP Live Streaming (HLS) manifest configuration.
  HlsManifestCreateOrUpdateParameters:
    required:
      - Id
    type: object
    properties:
      AdMarkers:
        description: |
          This setting controls how ad markers are included in the packaged OriginEndpoint.
          "NONE" will omit all SCTE-35 ad markers from the output.
          "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad
          markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest.
          "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35
          messages in the input source.
        $ref: '#/definitions/AdMarkers'
      AdTriggers:
        $ref: '#/definitions/AdTriggers'
      AdsOnDeliveryRestrictions:
        $ref: '#/definitions/AdsOnDeliveryRestrictions'
      Id:
        description: The ID of the manifest. The ID must be unique within the OriginEndpoint and it cannot be changed after it is created.
        $ref: '#/definitions/__string'
      IncludeIframeOnlyStream:
        description: 'When enabled, an I-Frame only stream will be included in the output.'
        $ref: '#/definitions/__boolean'
      ManifestName:
        description: 'An optional short string appended to the end of the OriginEndpoint URL. If not specified, defaults to the manifestName for the OriginEndpoint.'
        $ref: '#/definitions/__string'
      PlaylistType:
        description: |
          The HTTP Live Streaming (HLS) playlist type.
          When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE
          entry will be included in the media playlist.
        $ref: '#/definitions/PlaylistType'
      PlaylistWindowSeconds:
        description: Time window (in seconds) contained in each parent manifest.
        $ref: '#/definitions/__integer'
      ProgramDateTimeIntervalSeconds:
        description: |
          The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag
          inserted into manifests. Additionally, when an interval is specified
          ID3Timed Metadata messages will be generated every 5 seconds using the
          ingest time of the content.
          If the interval is not specified, or set to 0, then
          no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no
          ID3Timed Metadata messages will be generated. Note that irrespective
          of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,
          it will be passed through to HLS output.
        $ref: '#/definitions/__integer'
    description: A HTTP Live Streaming (HLS) manifest configuration.
  IngestEndpoint:
    type: object
    properties:
      Id:
        description: The system generated unique identifier for the IngestEndpoint
        $ref: '#/definitions/__string'
      Password:
        description: The system generated password for ingest authentication.
        $ref: '#/definitions/__string'
      Url:
        description: The ingest URL to which the source stream should be sent.
        $ref: '#/definitions/__string'
      Username:
        description: The system generated username for ingest authentication.
        $ref: '#/definitions/__string'
    description: An endpoint for ingesting source content for a Channel.
  MaxResults:
    type: integer
    minimum: 1
    maximum: 1000
  ListChannelsRequest:
    type: object
    properties: {}
  __listOfChannel:
    type: array
    items:
      $ref: '#/definitions/Channel'
  ListHarvestJobsRequest:
    type: object
    properties: {}
  __listOfHarvestJob:
    type: array
    items:
      $ref: '#/definitions/HarvestJob'
  ListOriginEndpointsRequest:
    type: object
    properties: {}
  __listOfOriginEndpoint:
    type: array
    items:
      $ref: '#/definitions/OriginEndpoint'
  ListTagsForResourceRequest:
    type: object
    properties: {}
  __mapOf__string:
    type: object
    additionalProperties:
      $ref: '#/definitions/__string'
  OriginEndpoint:
    type: object
    properties:
      Arn:
        description: The Amazon Resource Name (ARN) assigned to the OriginEndpoint.
        $ref: '#/definitions/__string'
      Authorization:
        $ref: '#/definitions/Authorization'
      ChannelId:
        description: The ID of the Channel the OriginEndpoint is associated with.
        $ref: '#/definitions/__string'
      CmafPackage:
        $ref: '#/definitions/CmafPackage'
      DashPackage:
        $ref: '#/definitions/DashPackage'
      Description:
        description: A short text description of the OriginEndpoint.
        $ref: '#/definitions/__string'
      HlsPackage:
        $ref: '#/definitions/HlsPackage'
      Id:
        description: The ID of the OriginEndpoint.
        $ref: '#/definitions/__string'
      ManifestName:
        description: A short string appended to the end of the OriginEndpoint URL.
        $ref: '#/definitions/__string'
      MssPackage:
        $ref: '#/definitions/MssPackage'
      Origination:
        description: |
          Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
          may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
          requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        $ref: '#/definitions/Origination'
      StartoverWindowSeconds:
        description: |
          Maximum duration (seconds) of content to retain for startover playback.
          If not specified, startover playback will be disabled for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Tags:
        $ref: '#/definitions/Tags'
      TimeDelaySeconds:
        description: |
          Amount of delay (seconds) to enforce on the playback of live content.
          If not specified, there will be no time delay in effect for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Url:
        description: The URL of the packaged OriginEndpoint for consumption.
        $ref: '#/definitions/__string'
      Whitelist:
        description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
        $ref: '#/definitions/__listOf__string'
    description: An OriginEndpoint resource configuration.
  RotateChannelCredentialsRequest:
    type: object
    properties: {}
  RotateIngestEndpointCredentialsRequest:
    type: object
    properties: {}
  StreamOrder:
    enum:
      - ORIGINAL
      - VIDEO_BITRATE_ASCENDING
      - VIDEO_BITRATE_DESCENDING
    type: string
  TagResourceRequest:
    required:
      - Tags
    type: object
    properties:
      Tags:
        $ref: '#/definitions/__mapOf__string'
  UntagResourceRequest:
    type: object
    properties: {}
  UpdateChannelRequest:
    type: object
    properties:
      Description:
        description: A short text description of the Channel.
        $ref: '#/definitions/__string'
    description: Configuration parameters used to update the Channel.
  UpdateOriginEndpointRequest:
    type: object
    properties:
      Authorization:
        $ref: '#/definitions/Authorization'
      CmafPackage:
        $ref: '#/definitions/CmafPackageCreateOrUpdateParameters'
      DashPackage:
        $ref: '#/definitions/DashPackage'
      Description:
        description: A short text description of the OriginEndpoint.
        $ref: '#/definitions/__string'
      HlsPackage:
        $ref: '#/definitions/HlsPackage'
      ManifestName:
        description: A short string that will be appended to the end of the Endpoint URL.
        $ref: '#/definitions/__string'
      MssPackage:
        $ref: '#/definitions/MssPackage'
      Origination:
        description: |
          Control whether origination of video is allowed for this OriginEndpoint. If set to ALLOW, the OriginEndpoint
          may by requested, pursuant to any other form of access control. If set to DENY, the OriginEndpoint may not be
          requested. This can be helpful for Live to VOD harvesting, or for temporarily disabling origination
        $ref: '#/definitions/Origination'
      StartoverWindowSeconds:
        description: |
          Maximum duration (in seconds) of content to retain for startover playback.
          If not specified, startover playback will be disabled for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      TimeDelaySeconds:
        description: |
          Amount of delay (in seconds) to enforce on the playback of live content.
          If not specified, there will be no time delay in effect for the OriginEndpoint.
        $ref: '#/definitions/__integer'
      Whitelist:
        description: A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.
        $ref: '#/definitions/__listOf__string'
    description: Configuration parameters used to update an existing OriginEndpoint.
  __PeriodTriggersElement:
    enum:
      - ADS
    type: string
