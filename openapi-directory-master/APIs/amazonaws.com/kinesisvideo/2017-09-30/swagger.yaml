swagger: '2.0'
info:
  version: '2017-09-30'
  x-release: v4
  title: Amazon Kinesis Video Streams
  description: <p/>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: kinesisvideo
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesisvideo-2017-09-30.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/kinesisvideo/'
host: kinesisvideo.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://kinesisvideo.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Kinesis Video multi-region endpoint
  - url: 'https://kinesisvideo.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Kinesis Video multi-region endpoint
  - url: 'http://kinesisvideo.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://kinesisvideo.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  /createSignalingChannel:
    post:
      operationId: CreateSignalingChannel
      description: <p>Creates a signaling channel. </p> <p> <code>CreateSignalingChannel</code> is an asynchronous operation.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSignalingChannelOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: AccountChannelLimitExceededException
          schema:
            $ref: '#/definitions/AccountChannelLimitExceededException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: TagsPerResourceExceededLimitException
          schema:
            $ref: '#/definitions/TagsPerResourceExceededLimitException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ChannelName
            properties:
              ChannelName:
                description: A name for the signaling channel that you are creating. It must be unique for each account and region.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              ChannelType:
                description: 'A type of the signaling channel that you are creating. Currently, <code>SINGLE_MASTER</code> is the only supported channel type. '
                type: string
                enum:
                  - SINGLE_MASTER
              SingleMasterConfiguration:
                description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
                type: object
                properties:
                  MessageTtlSeconds:
                    $ref: '#/definitions/MessageTtlSeconds'
                    description: The period of time a signaling channel retains underlivered messages before they are discarded.
              Tags:
                description: A set of tags (key/value pairs) that you want to associate with this channel.
                type: array
                items:
                  $ref: '#/definitions/Tag'
                minItems: 0
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /createStream:
    post:
      operationId: CreateStream
      description: '<p>Creates a new Kinesis video stream. </p> <p>When you create a new stream, Kinesis Video Streams assigns it a version number. When you change the stream''s metadata, Kinesis Video Streams updates the version. </p> <p> <code>CreateStream</code> is an asynchronous operation.</p> <p>For information about how the service works, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How it Works</a>. </p> <p>You must have permissions for the <code>KinesisVideo:CreateStream</code> action.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamOutput'
        '480':
          description: AccountStreamLimitExceededException
          schema:
            $ref: '#/definitions/AccountStreamLimitExceededException'
        '481':
          description: DeviceStreamLimitExceededException
          schema:
            $ref: '#/definitions/DeviceStreamLimitExceededException'
        '482':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '483':
          description: InvalidDeviceException
          schema:
            $ref: '#/definitions/InvalidDeviceException'
        '484':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '485':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '486':
          description: TagsPerResourceExceededLimitException
          schema:
            $ref: '#/definitions/TagsPerResourceExceededLimitException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - StreamName
            properties:
              DeviceName:
                description: '<p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>'
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 128
              StreamName:
                description: '<p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>'
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              MediaType:
                description: '<p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a> for guidelines.</p> <p>Example valid values include "video/h264" and "video/h264,audio/aac".</p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>'
                type: string
                pattern: '[\w\-\.\+]+/[\w\-\.\+]+(,[\w\-\.\+]+/[\w\-\.\+]+)*'
                minLength: 1
                maxLength: 128
              KmsKeyId:
                description: '<p>The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>) is used.</p> <p> For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>. </p>'
                type: string
                minLength: 1
                maxLength: 2048
              DataRetentionInHours:
                description: '<p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>'
                type: integer
                minimum: 0
              Tags:
                description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteSignalingChannel:
    post:
      operationId: DeleteSignalingChannel
      description: 'Deletes a specified signaling channel. <code>DeleteSignalingChannel</code> is an asynchronous operation. If you don''t specify the channel''s current version, the most recent version is deleted.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSignalingChannelOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ChannelARN
            properties:
              ChannelARN:
                description: The ARN of the signaling channel that you want to delete.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              CurrentVersion:
                description: The current version of the signaling channel that you want to delete. You can obtain the current version by invoking the <code>DescribeSignalingChannel</code> or <code>ListSignalingChannels</code> APIs.
                type: string
                pattern: '[a-zA-Z0-9]+'
                minLength: 1
                maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /deleteStream:
    post:
      operationId: DeleteStream
      description: '<p>Deletes a Kinesis video stream and the data contained in the stream. </p> <p>This method marks the stream for deletion, and makes the data in the stream inaccessible immediately.</p> <p> </p> <p> To ensure that you have the latest version of the stream before deleting it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p>This operation requires permission for the <code>KinesisVideo:DeleteStream</code> action.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '484':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - StreamARN
            properties:
              StreamARN:
                description: 'The Amazon Resource Name (ARN) of the stream that you want to delete. '
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              CurrentVersion:
                description: '<p>Optional: The version of the stream that you want to delete. </p> <p>Specify the version as a safeguard to ensure that your are deleting the correct stream. To get the stream version, use the <code>DescribeStream</code> API.</p> <p>If not specified, only the <code>CreationTime</code> is checked before deleting the stream.</p>'
                type: string
                pattern: '[a-zA-Z0-9]+'
                minLength: 1
                maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeSignalingChannel:
    post:
      operationId: DescribeSignalingChannel
      description: Returns the most current information about the signaling channel. You must specify either the name or the ARN of the channel that you want to describe.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSignalingChannelOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              ChannelName:
                description: The name of the signaling channel that you want to describe.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              ChannelARN:
                description: The ARN of the signaling channel that you want to describe.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /describeStream:
    post:
      operationId: DescribeStream
      description: 'Returns the most current information about the specified stream. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStreamOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              StreamName:
                description: The name of the stream.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              StreamARN:
                description: The Amazon Resource Name (ARN) of the stream.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /getDataEndpoint:
    post:
      operationId: GetDataEndpoint
      description: '<p>Gets an endpoint for a specified stream for either reading or writing. Use this endpoint in your application to read from the specified stream (using the <code>GetMedia</code> or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code> operation). </p> <note> <p>The returned endpoint does not have the API name appended. The client needs to add the API name to the returned endpoint.</p> </note> <p>In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetDataEndpointOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - APIName
            properties:
              StreamName:
                description: The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              StreamARN:
                description: 'The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request. '
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              APIName:
                description: The name of the API action for which to get an endpoint.
                type: string
                enum:
                  - PUT_MEDIA
                  - GET_MEDIA
                  - LIST_FRAGMENTS
                  - GET_MEDIA_FOR_FRAGMENT_LIST
                  - GET_HLS_STREAMING_SESSION_URL
                  - GET_DASH_STREAMING_SESSION_URL
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /getSignalingChannelEndpoint:
    post:
      operationId: GetSignalingChannelEndpoint
      description: '<p>Provides an endpoint for the specified signaling channel to send and receive messages. This API uses the <code>SingleMasterChannelEndpointConfiguration</code> input parameter, which consists of the <code>Protocols</code> and <code>Role</code> properties.</p> <p> <code>Protocols</code> is used to determine the communication mechanism. For example, specifying <code>WSS</code> as the protocol, results in this API producing a secure websocket endpoint, and specifying <code>HTTPS</code> as the protocol, results in this API generating an HTTPS endpoint. </p> <p> <code>Role</code> determines the messaging permissions. A <code>MASTER</code> role results in this API generating an endpoint that a client can use to communicate with any of the viewers on the channel. A <code>VIEWER</code> role results in this API generating an endpoint that a client can use to communicate only with a <code>MASTER</code>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetSignalingChannelEndpointOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ChannelARN
            properties:
              ChannelARN:
                description: The ARN of the signalling channel for which you want to get an endpoint.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              SingleMasterChannelEndpointConfiguration:
                description: 'An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code> channel type. '
                type: object
                properties:
                  Protocols:
                    $ref: '#/definitions/ListOfProtocols'
                    description: 'This property is used to determine the nature of communication over this <code>SINGLE_MASTER</code> signaling channel. If <code>WSS</code> is specified, this API returns a websocket endpoint. If <code>HTTPS</code> is specified, this API returns an <code>HTTPS</code> endpoint.'
                  Role:
                    $ref: '#/definitions/ChannelRole'
                    description: 'This property is used to determine messaging permissions in this <code>SINGLE_MASTER</code> signaling channel. If <code>MASTER</code> is specified, this API returns an endpoint that a client can use to receive offers from and send answers to any of the viewers on this signaling channel. If <code>VIEWER</code> is specified, this API returns an endpoint that a client can use only to send offers to another <code>MASTER</code> client on this signaling channel. '
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listSignalingChannels:
    post:
      operationId: ListSignalingChannels
      description: 'Returns an array of <code>ChannelInfo</code> objects. Each object describes a signaling channel. To retrieve only those channels that satisfy a specific condition, you can specify a <code>ChannelNameCondition</code>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSignalingChannelsOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              MaxResults:
                description: The maximum number of channels to return in the response. The default is 500.
                type: integer
                minimum: 1
                maximum: 10000
              NextToken:
                description: 'If you specify this parameter, when the result of a <code>ListSignalingChannels</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of channels, provide this token in your next request.'
                type: string
                pattern: '[a-zA-Z0-9+/=]*'
                minLength: 0
                maxLength: 512
              ChannelNameCondition:
                description: 'An optional input parameter for the <code>ListSignalingChannels</code> API. When this parameter is specified while invoking <code>ListSignalingChannels</code>, the API returns only the channels that satisfy a condition specified in <code>ChannelNameCondition</code>.'
                type: object
                properties:
                  ComparisonOperator:
                    $ref: '#/definitions/ComparisonOperator'
                    description: 'A comparison operator. Currently, you can only specify the <code>BEGINS_WITH</code> operator, which finds signaling channels whose names begin with a given prefix.'
                  ComparisonValue:
                    $ref: '#/definitions/ChannelName'
                    description: A value to compare.
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listStreams:
    post:
      operationId: ListStreams
      description: 'Returns an array of <code>StreamInfo</code> objects. Each object describes a stream. To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStreamsOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              MaxResults:
                description: 'The maximum number of streams to return in the response. The default is 10,000.'
                type: integer
                minimum: 1
                maximum: 10000
              NextToken:
                description: 'If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.'
                type: string
                pattern: '[a-zA-Z0-9+/=]*'
                minLength: 0
                maxLength: 512
              StreamNameCondition:
                description: 'Specifies the condition that streams must satisfy to be returned when you list streams (see the <code>ListStreams</code> API). A condition has a comparison operation and a value. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix. '
                type: object
                properties:
                  ComparisonOperator:
                    $ref: '#/definitions/ComparisonOperator'
                    description: 'A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.'
                  ComparisonValue:
                    $ref: '#/definitions/StreamName'
                    description: A value to compare.
        - name: MaxResults
          type: string
          in: query
          description: Pagination limit
          required: false
        - name: NextToken
          type: string
          in: query
          description: Pagination token
          required: false
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Returns a list of tags associated with the specified signaling channel.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ResourceARN
            properties:
              NextToken:
                description: 'If you specify this parameter and the result of a ListTagsForResource call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags. '
                type: string
                pattern: '[a-zA-Z0-9+/=]*'
                minLength: 0
                maxLength: 512
              ResourceARN:
                description: The ARN of the signaling channel for which you want to list tags.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /listTagsForStream:
    post:
      operationId: ListTagsForStream
      description: '<p>Returns a list of tags associated with the specified stream.</p> <p>In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '484':
          description: InvalidResourceFormatException
          schema:
            $ref: '#/definitions/InvalidResourceFormatException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              NextToken:
                description: 'If you specify this parameter and the result of a <code>ListTagsForStream</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.'
                type: string
                pattern: '[a-zA-Z0-9+/=]*'
                minLength: 0
                maxLength: 512
              StreamARN:
                description: The Amazon Resource Name (ARN) of the stream that you want to list tags for.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              StreamName:
                description: The name of the stream that you want to list tags for.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /TagResource:
    post:
      operationId: TagResource
      description: 'Adds one or more tags to a signaling channel. A <i>tag</i> is a key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: TagsPerResourceExceededLimitException
          schema:
            $ref: '#/definitions/TagsPerResourceExceededLimitException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ResourceARN
              - Tags
            properties:
              ResourceARN:
                description: The ARN of the signaling channel to which you want to add tags.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              Tags:
                description: A list of tags to associate with the specified signaling channel. Each tag is a key-value pair.
                type: array
                items:
                  $ref: '#/definitions/Tag'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /tagStream:
    post:
      operationId: TagStream
      description: '<p>Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p> <p>You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.</p> <p>This operation requires permission for the <code>KinesisVideo:TagStream</code> action.</p> <p>Kinesis video streams support up to 50 tags.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '484':
          description: InvalidResourceFormatException
          schema:
            $ref: '#/definitions/InvalidResourceFormatException'
        '485':
          description: TagsPerResourceExceededLimitException
          schema:
            $ref: '#/definitions/TagsPerResourceExceededLimitException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Tags
            properties:
              StreamARN:
                description: The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags to.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              StreamName:
                description: The name of the stream that you want to add the tag or tags to.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              Tags:
                description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
                type: object
                minProperties: 1
                maxProperties: 50
                additionalProperties:
                  $ref: '#/definitions/TagValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /UntagResource:
    post:
      operationId: UntagResource
      description: 'Removes one or more tags from a signaling channel. In the request, specify only a tag key or keys; don''t specify the value. If you specify a tag key that does not exist, it''s ignored.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ResourceARN
              - TagKeyList
            properties:
              ResourceARN:
                description: The ARN of the signaling channel from which you want to remove tags.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              TagKeyList:
                description: A list of the keys of the tags that you want to remove.
                type: array
                items:
                  $ref: '#/definitions/TagKey'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /untagStream:
    post:
      operationId: UntagStream
      description: '<p>Removes one or more tags from a stream. In the request, specify only a tag key or keys; don''t specify the value. If you specify a tag key that does not exist, it''s ignored.</p> <p>In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '484':
          description: InvalidResourceFormatException
          schema:
            $ref: '#/definitions/InvalidResourceFormatException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - TagKeyList
            properties:
              StreamARN:
                description: The Amazon Resource Name (ARN) of the stream that you want to remove tags from.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              StreamName:
                description: The name of the stream that you want to remove tags from.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              TagKeyList:
                description: A list of the keys of the tags that you want to remove.
                type: array
                items:
                  $ref: '#/definitions/TagKey'
                minItems: 1
                maxItems: 50
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateDataRetention:
    post:
      operationId: UpdateDataRetention
      description: '<p> Increases or decreases the stream''s data retention period by the value that you specify. To indicate whether you want to increase or decrease the data retention period, specify the <code>Operation</code> parameter in the request body. In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p> <note> <p>The retention period that you specify replaces the current value.</p> </note> <p>This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code> action.</p> <p>Changing the data retention period affects the data in the stream as follows:</p> <ul> <li> <p>If the data retention period is increased, existing data is retained for the new retention period. For example, if the data retention period is increased from one hour to seven hours, all existing data is retained for seven hours.</p> </li> <li> <p>If the data retention period is decreased, existing data is retained for the new retention period. For example, if the data retention period is decreased from seven hours to one hour, all existing data is retained for one hour, and any data older than one hour is deleted immediately.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDataRetentionOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '485':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - CurrentVersion
              - Operation
              - DataRetentionChangeInHours
            properties:
              StreamName:
                description: The name of the stream whose retention period you want to change.
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              StreamARN:
                description: The Amazon Resource Name (ARN) of the stream whose retention period you want to change.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              CurrentVersion:
                description: 'The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.'
                type: string
                pattern: '[a-zA-Z0-9]+'
                minLength: 1
                maxLength: 64
              Operation:
                description: Indicates whether you want to increase or decrease the retention period.
                type: string
                enum:
                  - INCREASE_DATA_RETENTION
                  - DECREASE_DATA_RETENTION
              DataRetentionChangeInHours:
                description: 'The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).'
                type: integer
                minimum: 1
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateSignalingChannel:
    post:
      operationId: UpdateSignalingChannel
      description: '<p>Updates the existing signaling channel. This is an asynchronous operation and takes time to complete. </p> <p>If the <code>MessageTtlSeconds</code> value is updated (either increased or reduced), then it only applies to new messages sent via this channel after it''s been updated. Existing messages are still expire as per the previous <code>MessageTtlSeconds</code> value.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSignalingChannelOutput'
        '480':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '481':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ChannelARN
              - CurrentVersion
            properties:
              ChannelARN:
                description: The ARN of the signaling channel that you want to update.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              CurrentVersion:
                description: The current version of the signaling channel that you want to update.
                type: string
                pattern: '[a-zA-Z0-9]+'
                minLength: 1
                maxLength: 64
              SingleMasterConfiguration:
                description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
                type: object
                properties:
                  MessageTtlSeconds:
                    $ref: '#/definitions/MessageTtlSeconds'
                    description: The period of time a signaling channel retains underlivered messages before they are discarded.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /updateStream:
    post:
      operationId: UpdateStream
      description: '<p>Updates stream metadata, such as the device name and media type.</p> <p>You must provide the stream name or the Amazon Resource Name (ARN) of the stream.</p> <p>To make sure that you have the latest version of the stream before updating it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p> <code>UpdateStream</code> is an asynchronous operation, and takes time to complete.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStreamOutput'
        '480':
          description: ClientLimitExceededException
          schema:
            $ref: '#/definitions/ClientLimitExceededException'
        '481':
          description: InvalidArgumentException
          schema:
            $ref: '#/definitions/InvalidArgumentException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceInUseException
          schema:
            $ref: '#/definitions/ResourceInUseException'
        '484':
          description: NotAuthorizedException
          schema:
            $ref: '#/definitions/NotAuthorizedException'
        '485':
          description: VersionMismatchException
          schema:
            $ref: '#/definitions/VersionMismatchException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - CurrentVersion
            properties:
              StreamName:
                description: '<p>The name of the stream whose metadata you want to update.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>'
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 256
              StreamARN:
                description: The ARN of the stream whose metadata you want to update.
                type: string
                pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
                minLength: 1
                maxLength: 1024
              CurrentVersion:
                description: The version of the stream whose metadata you want to update.
                type: string
                pattern: '[a-zA-Z0-9]+'
                minLength: 1
                maxLength: 64
              DeviceName:
                description: '<p>The name of the device that is writing to the stream. </p> <note> <p> In the current implementation, Kinesis Video Streams does not use this name. </p> </note>'
                type: string
                pattern: '[a-zA-Z0-9_.-]+'
                minLength: 1
                maxLength: 128
              MediaType:
                description: '<p>The stream''s media type. Use <code>MediaType</code> to specify the type of content that the stream contains to the consumers of the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a>.</p> <p>To play video on the console, you must specify the correct video type. For example, if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>'
                type: string
                pattern: '[\w\-\.\+]+/[\w\-\.\+]+(,[\w\-\.\+]+/[\w\-\.\+]+)*'
                minLength: 1
                maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateSignalingChannelOutput:
    type: object
    properties:
      ChannelARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the created channel.
  MessageTtlSeconds:
    type: integer
    minimum: 5
    maximum: 120
  Tag:
    type: object
    required:
      - Key
      - Value
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The key of the tag that is associated with the specified signaling channel.
      Value:
        $ref: '#/definitions/TagValue'
        description: The value of the tag that is associated with the specified signaling channel.
    description: A key and value pair that is associated with the specified signaling channel.
  InvalidArgumentException: {}
  ClientLimitExceededException: {}
  AccountChannelLimitExceededException: {}
  ResourceInUseException: {}
  AccessDeniedException: {}
  TagsPerResourceExceededLimitException: {}
  CreateStreamOutput:
    type: object
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream.
  TagValue:
    type: string
    pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]*'
    minLength: 0
    maxLength: 256
  AccountStreamLimitExceededException: {}
  DeviceStreamLimitExceededException: {}
  InvalidDeviceException: {}
  DeleteSignalingChannelOutput:
    type: object
    properties: {}
  ResourceNotFoundException: {}
  VersionMismatchException: {}
  DeleteStreamOutput:
    type: object
    properties: {}
  NotAuthorizedException: {}
  DescribeSignalingChannelOutput:
    type: object
    properties:
      ChannelInfo:
        $ref: '#/definitions/ChannelInfo'
        description: A structure that encapsulates the specified signaling channel's metadata and properties.
  DescribeStreamOutput:
    type: object
    properties:
      StreamInfo:
        $ref: '#/definitions/StreamInfo'
        description: An object that describes the stream.
  GetDataEndpointOutput:
    type: object
    properties:
      DataEndpoint:
        $ref: '#/definitions/DataEndpoint'
        description: 'The endpoint value. To read data from the stream or to write data to it, specify this endpoint in your application.'
  GetSignalingChannelEndpointOutput:
    type: object
    properties:
      ResourceEndpointList:
        $ref: '#/definitions/ResourceEndpointList'
        description: A list of endpoints for the specified signaling channel.
  ListOfProtocols:
    type: array
    items:
      $ref: '#/definitions/ChannelProtocol'
    minItems: 1
    maxItems: 5
  ChannelRole:
    type: string
    enum:
      - MASTER
      - VIEWER
  ListSignalingChannelsOutput:
    type: object
    properties:
      ChannelInfoList:
        $ref: '#/definitions/ChannelInfoList'
        description: An array of <code>ChannelInfo</code> objects.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, the call returns this element with a token. To get the next batch of streams, use this token in your next request.'
  ComparisonOperator:
    type: string
    enum:
      - BEGINS_WITH
  ChannelName:
    type: string
    pattern: '[a-zA-Z0-9_.-]+'
    minLength: 1
    maxLength: 256
  ListStreamsOutput:
    type: object
    properties:
      StreamInfoList:
        $ref: '#/definitions/StreamInfoList'
        description: An array of <code>StreamInfo</code> objects.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If the response is truncated, the call returns this element with a token. To get the next batch of streams, use this token in your next request. '
  StreamName:
    type: string
    pattern: '[a-zA-Z0-9_.-]+'
    minLength: 1
    maxLength: 256
  ListTagsForResourceOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter and the result of a ListTagsForResource call is truncated, the response includes a token that you can use in the next request to fetch the next set of tags. '
      Tags:
        $ref: '#/definitions/ResourceTags'
        description: A map of tag keys and values associated with the specified signaling channel.
  ListTagsForStreamOutput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter and the result of a <code>ListTags</code> call is truncated, the response includes a token that you can use in the next request to fetch the next set of tags.'
      Tags:
        $ref: '#/definitions/ResourceTags'
        description: A map of tag keys and values associated with the specified stream.
  InvalidResourceFormatException: {}
  TagResourceOutput:
    type: object
    properties: {}
  TagStreamOutput:
    type: object
    properties: {}
  UntagResourceOutput:
    type: object
    properties: {}
  TagKey:
    type: string
    pattern: '^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$'
    minLength: 1
    maxLength: 128
  UntagStreamOutput:
    type: object
    properties: {}
  UpdateDataRetentionOutput:
    type: object
    properties: {}
  UpdateSignalingChannelOutput:
    type: object
    properties: {}
  UpdateStreamOutput:
    type: object
    properties: {}
  APIName:
    type: string
    enum:
      - PUT_MEDIA
      - GET_MEDIA
      - LIST_FRAGMENTS
      - GET_MEDIA_FOR_FRAGMENT_LIST
      - GET_HLS_STREAMING_SESSION_URL
      - GET_DASH_STREAMING_SESSION_URL
  ResourceARN:
    type: string
    pattern: 'arn:aws:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+'
    minLength: 1
    maxLength: 1024
  ChannelType:
    type: string
    enum:
      - SINGLE_MASTER
  Status:
    type: string
    enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
  Timestamp:
    type: string
    format: date-time
  SingleMasterConfiguration:
    type: object
    properties:
      MessageTtlSeconds:
        $ref: '#/definitions/MessageTtlSeconds'
        description: The period of time a signaling channel retains underlivered messages before they are discarded.
    description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
  Version:
    type: string
    pattern: '[a-zA-Z0-9]+'
    minLength: 1
    maxLength: 64
  ChannelInfo:
    type: object
    properties:
      ChannelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the signaling channel.
      ChannelARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signaling channel.
      ChannelType:
        $ref: '#/definitions/ChannelType'
        description: The type of the signaling channel.
      ChannelStatus:
        $ref: '#/definitions/Status'
        description: Current status of the signaling channel.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: The time at which the signaling channel was created.
      SingleMasterConfiguration:
        $ref: '#/definitions/SingleMasterConfiguration'
        description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
      Version:
        $ref: '#/definitions/Version'
        description: The current version of the signaling channel.
    description: A structure that encapsulates a signaling channel's metadata and properties.
  ChannelInfoList:
    type: array
    items:
      $ref: '#/definitions/ChannelInfo'
  ChannelNameCondition:
    type: object
    properties:
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: 'A comparison operator. Currently, you can only specify the <code>BEGINS_WITH</code> operator, which finds signaling channels whose names begin with a given prefix.'
      ComparisonValue:
        $ref: '#/definitions/ChannelName'
        description: A value to compare.
    description: 'An optional input parameter for the <code>ListSignalingChannels</code> API. When this parameter is specified while invoking <code>ListSignalingChannels</code>, the API returns only the channels that satisfy a condition specified in <code>ChannelNameCondition</code>.'
  ChannelProtocol:
    type: string
    enum:
      - WSS
      - HTTPS
  TagOnCreateList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 0
    maxItems: 50
  CreateSignalingChannelInput:
    type: object
    required:
      - ChannelName
    properties:
      ChannelName:
        $ref: '#/definitions/ChannelName'
        description: A name for the signaling channel that you are creating. It must be unique for each account and region.
      ChannelType:
        $ref: '#/definitions/ChannelType'
        description: 'A type of the signaling channel that you are creating. Currently, <code>SINGLE_MASTER</code> is the only supported channel type. '
      SingleMasterConfiguration:
        $ref: '#/definitions/SingleMasterConfiguration'
        description: 'A structure containing the configuration for the <code>SINGLE_MASTER</code> channel type. '
      Tags:
        $ref: '#/definitions/TagOnCreateList'
        description: A set of tags (key/value pairs) that you want to associate with this channel.
  DeviceName:
    type: string
    pattern: '[a-zA-Z0-9_.-]+'
    minLength: 1
    maxLength: 128
  MediaType:
    type: string
    pattern: '[\w\-\.\+]+/[\w\-\.\+]+(,[\w\-\.\+]+/[\w\-\.\+]+)*'
    minLength: 1
    maxLength: 128
  KmsKeyId:
    type: string
    minLength: 1
    maxLength: 2048
  DataRetentionInHours:
    type: integer
    minimum: 0
  ResourceTags:
    type: object
    minProperties: 1
    maxProperties: 50
    additionalProperties:
      $ref: '#/definitions/TagValue'
  CreateStreamInput:
    type: object
    required:
      - StreamName
    properties:
      DeviceName:
        $ref: '#/definitions/DeviceName'
        description: '<p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>'
      StreamName:
        $ref: '#/definitions/StreamName'
        description: '<p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>'
      MediaType:
        $ref: '#/definitions/MediaType'
        description: '<p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a> for guidelines.</p> <p>Example valid values include "video/h264" and "video/h264,audio/aac".</p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>'
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: '<p>The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>) is used.</p> <p> For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>. </p>'
      DataRetentionInHours:
        $ref: '#/definitions/DataRetentionInHours'
        description: '<p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>'
      Tags:
        $ref: '#/definitions/ResourceTags'
        description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
  DataEndpoint:
    type: string
  DataRetentionChangeInHours:
    type: integer
    minimum: 1
  DeleteSignalingChannelInput:
    type: object
    required:
      - ChannelARN
    properties:
      ChannelARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signaling channel that you want to delete.
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: The current version of the signaling channel that you want to delete. You can obtain the current version by invoking the <code>DescribeSignalingChannel</code> or <code>ListSignalingChannels</code> APIs.
  DeleteStreamInput:
    type: object
    required:
      - StreamARN
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: 'The Amazon Resource Name (ARN) of the stream that you want to delete. '
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: '<p>Optional: The version of the stream that you want to delete. </p> <p>Specify the version as a safeguard to ensure that your are deleting the correct stream. To get the stream version, use the <code>DescribeStream</code> API.</p> <p>If not specified, only the <code>CreationTime</code> is checked before deleting the stream.</p>'
  DescribeSignalingChannelInput:
    type: object
    properties:
      ChannelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the signaling channel that you want to describe.
      ChannelARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signaling channel that you want to describe.
  DescribeStreamInput:
    type: object
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream.
  StreamInfo:
    type: object
    properties:
      DeviceName:
        $ref: '#/definitions/DeviceName'
        description: The name of the device that is associated with the stream.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream.
      MediaType:
        $ref: '#/definitions/MediaType'
        description: 'The <code>MediaType</code> of the stream. '
      KmsKeyId:
        $ref: '#/definitions/KmsKeyId'
        description: The ID of the AWS Key Management Service (AWS KMS) key that Kinesis Video Streams uses to encrypt data on the stream.
      Version:
        $ref: '#/definitions/Version'
        description: The version of the stream.
      Status:
        $ref: '#/definitions/Status'
        description: The status of the stream.
      CreationTime:
        $ref: '#/definitions/Timestamp'
        description: A time stamp that indicates when the stream was created.
      DataRetentionInHours:
        $ref: '#/definitions/DataRetentionInHours'
        description: 'How long the stream retains data, in hours.'
    description: An object describing a Kinesis video stream.
  GetDataEndpointInput:
    type: object
    required:
      - APIName
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: 'The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request. '
      APIName:
        $ref: '#/definitions/APIName'
        description: The name of the API action for which to get an endpoint.
  SingleMasterChannelEndpointConfiguration:
    type: object
    properties:
      Protocols:
        $ref: '#/definitions/ListOfProtocols'
        description: 'This property is used to determine the nature of communication over this <code>SINGLE_MASTER</code> signaling channel. If <code>WSS</code> is specified, this API returns a websocket endpoint. If <code>HTTPS</code> is specified, this API returns an <code>HTTPS</code> endpoint.'
      Role:
        $ref: '#/definitions/ChannelRole'
        description: 'This property is used to determine messaging permissions in this <code>SINGLE_MASTER</code> signaling channel. If <code>MASTER</code> is specified, this API returns an endpoint that a client can use to receive offers from and send answers to any of the viewers on this signaling channel. If <code>VIEWER</code> is specified, this API returns an endpoint that a client can use only to send offers to another <code>MASTER</code> client on this signaling channel. '
    description: 'An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code> channel type. '
  GetSignalingChannelEndpointInput:
    type: object
    required:
      - ChannelARN
    properties:
      ChannelARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signalling channel for which you want to get an endpoint.
      SingleMasterChannelEndpointConfiguration:
        $ref: '#/definitions/SingleMasterChannelEndpointConfiguration'
        description: A structure containing the endpoint configuration for the <code>SINGLE_MASTER</code> channel type.
  ResourceEndpointList:
    type: array
    items:
      $ref: '#/definitions/ResourceEndpointListItem'
  ListStreamsInputLimit:
    type: integer
    minimum: 1
    maximum: 10000
  NextToken:
    type: string
    pattern: '[a-zA-Z0-9+/=]*'
    minLength: 0
    maxLength: 512
  ListSignalingChannelsInput:
    type: object
    properties:
      MaxResults:
        $ref: '#/definitions/ListStreamsInputLimit'
        description: The maximum number of channels to return in the response. The default is 500.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter, when the result of a <code>ListSignalingChannels</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of channels, provide this token in your next request.'
      ChannelNameCondition:
        $ref: '#/definitions/ChannelNameCondition'
        description: 'Optional: Returns only the channels that satisfy a specific condition.'
  StreamNameCondition:
    type: object
    properties:
      ComparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: 'A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.'
      ComparisonValue:
        $ref: '#/definitions/StreamName'
        description: A value to compare.
    description: 'Specifies the condition that streams must satisfy to be returned when you list streams (see the <code>ListStreams</code> API). A condition has a comparison operation and a value. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix. '
  ListStreamsInput:
    type: object
    properties:
      MaxResults:
        $ref: '#/definitions/ListStreamsInputLimit'
        description: 'The maximum number of streams to return in the response. The default is 10,000.'
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.'
      StreamNameCondition:
        $ref: '#/definitions/StreamNameCondition'
        description: 'Optional: Returns only streams that satisfy a specific condition. Currently, you can specify only the prefix of a stream name as a condition. '
  StreamInfoList:
    type: array
    items:
      $ref: '#/definitions/StreamInfo'
  ListTagsForResourceInput:
    type: object
    required:
      - ResourceARN
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter and the result of a ListTagsForResource call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags. '
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signaling channel for which you want to list tags.
  ListTagsForStreamInput:
    type: object
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'If you specify this parameter and the result of a <code>ListTagsForStream</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.'
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream that you want to list tags for.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to list tags for.
  ResourceEndpoint:
    type: string
  ResourceEndpointListItem:
    type: object
    properties:
      Protocol:
        $ref: '#/definitions/ChannelProtocol'
        description: The protocol of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code> API.
      ResourceEndpoint:
        $ref: '#/definitions/ResourceEndpoint'
        description: The endpoint of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code> API.
    description: An object that describes the endpoint of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code> API.
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
    minItems: 1
    maxItems: 50
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
    minItems: 1
    maxItems: 50
  TagResourceInput:
    type: object
    required:
      - ResourceARN
      - Tags
    properties:
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signaling channel to which you want to add tags.
      Tags:
        $ref: '#/definitions/TagList'
        description: A list of tags to associate with the specified signaling channel. Each tag is a key-value pair.
  TagStreamInput:
    type: object
    required:
      - Tags
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags to.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to add the tag or tags to.
      Tags:
        $ref: '#/definitions/ResourceTags'
        description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
  UntagResourceInput:
    type: object
    required:
      - ResourceARN
      - TagKeyList
    properties:
      ResourceARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signaling channel from which you want to remove tags.
      TagKeyList:
        $ref: '#/definitions/TagKeyList'
        description: A list of the keys of the tags that you want to remove.
  UntagStreamInput:
    type: object
    required:
      - TagKeyList
    properties:
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream that you want to remove tags from.
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream that you want to remove tags from.
      TagKeyList:
        $ref: '#/definitions/TagKeyList'
        description: A list of the keys of the tags that you want to remove.
  UpdateDataRetentionOperation:
    type: string
    enum:
      - INCREASE_DATA_RETENTION
      - DECREASE_DATA_RETENTION
  UpdateDataRetentionInput:
    type: object
    required:
      - CurrentVersion
      - Operation
      - DataRetentionChangeInHours
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: The name of the stream whose retention period you want to change.
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The Amazon Resource Name (ARN) of the stream whose retention period you want to change.
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: 'The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.'
      Operation:
        $ref: '#/definitions/UpdateDataRetentionOperation'
        description: Indicates whether you want to increase or decrease the retention period.
      DataRetentionChangeInHours:
        $ref: '#/definitions/DataRetentionChangeInHours'
        description: 'The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).'
  UpdateSignalingChannelInput:
    type: object
    required:
      - ChannelARN
      - CurrentVersion
    properties:
      ChannelARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the signaling channel that you want to update.
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: The current version of the signaling channel that you want to update.
      SingleMasterConfiguration:
        $ref: '#/definitions/SingleMasterConfiguration'
        description: 'The structure containing the configuration for the <code>SINGLE_MASTER</code> type of the signaling channel that you want to update. '
  UpdateStreamInput:
    type: object
    required:
      - CurrentVersion
    properties:
      StreamName:
        $ref: '#/definitions/StreamName'
        description: '<p>The name of the stream whose metadata you want to update.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>'
      StreamARN:
        $ref: '#/definitions/ResourceARN'
        description: The ARN of the stream whose metadata you want to update.
      CurrentVersion:
        $ref: '#/definitions/Version'
        description: The version of the stream whose metadata you want to update.
      DeviceName:
        $ref: '#/definitions/DeviceName'
        description: '<p>The name of the device that is writing to the stream. </p> <note> <p> In the current implementation, Kinesis Video Streams does not use this name. </p> </note>'
      MediaType:
        $ref: '#/definitions/MediaType'
        description: '<p>The stream''s media type. Use <code>MediaType</code> to specify the type of content that the stream contains to the consumers of the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a>.</p> <p>To play video on the console, you must specify the correct video type. For example, if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>'
