swagger: '2.0'
info:
  version: '2018-08-01'
  x-release: v4
  title: AWS License Manager
  description: <fullname> AWS License Manager </fullname> <p>AWS License Manager makes it easier to manage licenses from software vendors across multiple AWS accounts and on-premises servers.</p>
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: license-manager
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/license-manager-2018-08-01.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/license-manager/'
host: license-manager.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://license-manager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: 'https://license-manager.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS License Manager multi-region endpoint
  - url: 'http://license-manager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://license-manager.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS License Manager endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/#X-Amz-Target=AWSLicenseManager.CreateLicenseConfiguration':
    post:
      operationId: CreateLicenseConfiguration
      description: '<p>Creates a license configuration.</p> <p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: ResourceLimitExceededException
          schema:
            $ref: '#/definitions/ResourceLimitExceededException'
        '483':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateLicenseConfigurationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.CreateLicenseConfiguration
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.DeleteLicenseConfiguration':
    post:
      operationId: DeleteLicenseConfiguration
      description: <p>Deletes the specified license configuration.</p> <p>You cannot delete a license configuration that is in use.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteLicenseConfigurationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.DeleteLicenseConfiguration
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.GetLicenseConfiguration':
    post:
      operationId: GetLicenseConfiguration
      description: Gets detailed information about the specified license configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetLicenseConfigurationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.GetLicenseConfiguration
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.GetServiceSettings':
    post:
      operationId: GetServiceSettings
      description: Gets the License Manager settings for the current Region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetServiceSettingsResponse'
        '480':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '481':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '482':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '483':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/GetServiceSettingsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.GetServiceSettings
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListAssociationsForLicenseConfiguration':
    post:
      operationId: ListAssociationsForLicenseConfiguration
      description: '<p>Lists the resource associations for the specified license configuration.</p> <p>Resource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance might not consume a license (depending on the license rules).</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAssociationsForLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: FilterLimitExceededException
          schema:
            $ref: '#/definitions/FilterLimitExceededException'
        '482':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '483':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListAssociationsForLicenseConfigurationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.ListAssociationsForLicenseConfiguration
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListFailuresForLicenseConfigurationOperations':
    post:
      operationId: ListFailuresForLicenseConfigurationOperations
      description: Lists the license configuration operations that failed.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListFailuresForLicenseConfigurationOperationsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListFailuresForLicenseConfigurationOperationsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.ListFailuresForLicenseConfigurationOperations
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListLicenseConfigurations':
    post:
      operationId: ListLicenseConfigurations
      description: Lists the license configurations for your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLicenseConfigurationsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: FilterLimitExceededException
          schema:
            $ref: '#/definitions/FilterLimitExceededException'
        '483':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLicenseConfigurationsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.ListLicenseConfigurations
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListLicenseSpecificationsForResource':
    post:
      operationId: ListLicenseSpecificationsForResource
      description: Describes the license configurations for the specified resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListLicenseSpecificationsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListLicenseSpecificationsForResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.ListLicenseSpecificationsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListResourceInventory':
    post:
      operationId: ListResourceInventory
      description: Lists resources managed using Systems Manager inventory.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceInventoryResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: FilterLimitExceededException
          schema:
            $ref: '#/definitions/FilterLimitExceededException'
        '483':
          description: FailedDependencyException
          schema:
            $ref: '#/definitions/FailedDependencyException'
        '484':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceInventoryRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.ListResourceInventory
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListTagsForResource':
    post:
      operationId: ListTagsForResource
      description: Lists the tags for the specified license configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListTagsForResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.ListTagsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.ListUsageForLicenseConfiguration':
    post:
      operationId: ListUsageForLicenseConfiguration
      description: 'Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUsageForLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: FilterLimitExceededException
          schema:
            $ref: '#/definitions/FilterLimitExceededException'
        '482':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '483':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '484':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '485':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ListUsageForLicenseConfigurationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.ListUsageForLicenseConfiguration
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.TagResource':
    post:
      operationId: TagResource
      description: Adds the specified tags to the specified license configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.TagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UntagResource':
    post:
      operationId: UntagResource
      description: Removes the specified tags from the specified license configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UntagResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.UntagResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UpdateLicenseConfiguration':
    post:
      operationId: UpdateLicenseConfiguration
      description: '<p>Modifies the attributes of an existing license configuration.</p> <p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLicenseConfigurationResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLicenseConfigurationRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.UpdateLicenseConfiguration
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UpdateLicenseSpecificationsForResource':
    post:
      operationId: UpdateLicenseSpecificationsForResource
      description: '<p>Adds or removes the specified license configurations for the specified AWS resource.</p> <p>You can update the license specifications of AMIs, instances, and hosts. You cannot update the license specifications for launch templates and AWS CloudFormation templates, as they send license configurations to the operation that creates the resource.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateLicenseSpecificationsForResourceResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: InvalidResourceStateException
          schema:
            $ref: '#/definitions/InvalidResourceStateException'
        '482':
          description: LicenseUsageException
          schema:
            $ref: '#/definitions/LicenseUsageException'
        '483':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '484':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '485':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '486':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateLicenseSpecificationsForResourceRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.UpdateLicenseSpecificationsForResource
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/#X-Amz-Target=AWSLicenseManager.UpdateServiceSettings':
    post:
      operationId: UpdateServiceSettings
      description: Updates License Manager settings for the current Region.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateServiceSettingsResponse'
        '480':
          description: InvalidParameterValueException
          schema:
            $ref: '#/definitions/InvalidParameterValueException'
        '481':
          description: ServerInternalException
          schema:
            $ref: '#/definitions/ServerInternalException'
        '482':
          description: AuthorizationException
          schema:
            $ref: '#/definitions/AuthorizationException'
        '483':
          description: AccessDeniedException
          schema:
            $ref: '#/definitions/AccessDeniedException'
        '484':
          description: RateLimitExceededException
          schema:
            $ref: '#/definitions/RateLimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceSettingsRequest'
        - name: X-Amz-Target
          in: header
          required: true
          type: string
          enum:
            - AWSLicenseManager.UpdateServiceSettings
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  CreateLicenseConfigurationResponse:
    type: object
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
  CreateLicenseConfigurationRequest:
    type: object
    required:
      - Name
      - LicenseCountingType
    properties:
      Name:
        $ref: '#/definitions/String'
        description: Name of the license configuration.
      Description:
        $ref: '#/definitions/String'
        description: Description of the license configuration.
      LicenseCountingType:
        $ref: '#/definitions/LicenseCountingType'
        description: Dimension used to track the license inventory.
      LicenseCount:
        $ref: '#/definitions/BoxLong'
        description: Number of licenses managed by the license configuration.
      LicenseCountHardLimit:
        $ref: '#/definitions/BoxBoolean'
        description: Indicates whether hard or soft license enforcement is used. Exceeding a hard limit blocks the launch of new instances.
      LicenseRules:
        $ref: '#/definitions/StringList'
        description: '<p>License rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost). Available rules vary by dimension.</p> <ul> <li> <p> <code>Cores</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code> | <code>minimumCores</code> </p> </li> <li> <p> <code>Instances</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code> | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> <li> <p> <code>Sockets</code> dimension: <code>allowedTenancy</code> | <code>maximumSockets</code> | <code>minimumSockets</code> </p> </li> <li> <p> <code>vCPUs</code> dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> </ul>'
      Tags:
        $ref: '#/definitions/TagList'
        description: Tags to add to the license configuration.
      ProductInformationList:
        $ref: '#/definitions/ProductInformationList'
        description: Product information.
  InvalidParameterValueException: {}
  ServerInternalException: {}
  ResourceLimitExceededException: {}
  AuthorizationException: {}
  AccessDeniedException: {}
  RateLimitExceededException: {}
  DeleteLicenseConfigurationResponse:
    type: object
    properties: {}
  DeleteLicenseConfigurationRequest:
    type: object
    required:
      - LicenseConfigurationArn
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: ID of the license configuration.
  GetLicenseConfigurationResponse:
    type: object
    properties:
      LicenseConfigurationId:
        $ref: '#/definitions/String'
        description: Unique ID for the license configuration.
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
      Name:
        $ref: '#/definitions/String'
        description: Name of the license configuration.
      Description:
        $ref: '#/definitions/String'
        description: Description of the license configuration.
      LicenseCountingType:
        $ref: '#/definitions/LicenseCountingType'
        description: Dimension on which the licenses are counted.
      LicenseRules:
        $ref: '#/definitions/StringList'
        description: License rules.
      LicenseCount:
        $ref: '#/definitions/BoxLong'
        description: Number of available licenses.
      LicenseCountHardLimit:
        $ref: '#/definitions/BoxBoolean'
        description: Sets the number of available licenses as a hard limit.
      ConsumedLicenses:
        $ref: '#/definitions/BoxLong'
        description: Number of licenses assigned to resources.
      Status:
        $ref: '#/definitions/String'
        description: License configuration status.
      OwnerAccountId:
        $ref: '#/definitions/String'
        description: Account ID of the owner of the license configuration.
      ConsumedLicenseSummaryList:
        $ref: '#/definitions/ConsumedLicenseSummaryList'
        description: Summaries of the licenses consumed by resources.
      ManagedResourceSummaryList:
        $ref: '#/definitions/ManagedResourceSummaryList'
        description: Summaries of the managed resources.
      Tags:
        $ref: '#/definitions/TagList'
        description: Tags for the license configuration.
      ProductInformationList:
        $ref: '#/definitions/ProductInformationList'
        description: Product information.
      AutomatedDiscoveryInformation:
        $ref: '#/definitions/AutomatedDiscoveryInformation'
        description: Automated discovery information.
  GetLicenseConfigurationRequest:
    type: object
    required:
      - LicenseConfigurationArn
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
  GetServiceSettingsResponse:
    type: object
    properties:
      S3BucketArn:
        $ref: '#/definitions/String'
        description: 'Regional S3 bucket path for storing reports, license trail event data, discovery data, and so on.'
      SnsTopicArn:
        $ref: '#/definitions/String'
        description: SNS topic configured to receive notifications from License Manager.
      OrganizationConfiguration:
        $ref: '#/definitions/OrganizationConfiguration'
        description: Indicates whether AWS Organizations has been integrated with License Manager for cross-account discovery.
      EnableCrossAccountsDiscovery:
        $ref: '#/definitions/BoxBoolean'
        description: Indicates whether cross-account discovery has been enabled.
      LicenseManagerResourceShareArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the AWS resource share. The License Manager master account will provide member accounts with access to this share.
  GetServiceSettingsRequest:
    type: object
    properties: {}
  ListAssociationsForLicenseConfigurationResponse:
    type: object
    properties:
      LicenseConfigurationAssociations:
        $ref: '#/definitions/LicenseConfigurationAssociations'
        description: Information about the associations for the license configuration.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListAssociationsForLicenseConfigurationRequest:
    type: object
    required:
      - LicenseConfigurationArn
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of a license configuration.
      MaxResults:
        $ref: '#/definitions/BoxInteger'
        description: Maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  FilterLimitExceededException: {}
  ListFailuresForLicenseConfigurationOperationsResponse:
    type: object
    properties:
      LicenseOperationFailureList:
        $ref: '#/definitions/LicenseOperationFailureList'
        description: License configuration operations that failed.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListFailuresForLicenseConfigurationOperationsRequest:
    type: object
    required:
      - LicenseConfigurationArn
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name of the license configuration.
      MaxResults:
        $ref: '#/definitions/BoxInteger'
        description: Maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListLicenseConfigurationsResponse:
    type: object
    properties:
      LicenseConfigurations:
        $ref: '#/definitions/LicenseConfigurations'
        description: Information about the license configurations.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListLicenseConfigurationsRequest:
    type: object
    properties:
      LicenseConfigurationArns:
        $ref: '#/definitions/StringList'
        description: Amazon Resource Names (ARN) of the license configurations.
      MaxResults:
        $ref: '#/definitions/BoxInteger'
        description: Maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
      Filters:
        $ref: '#/definitions/Filters'
        description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>licenseCountingType</code> - The dimension on which licenses are counted (vCPU). Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>enforceLicenseCount</code> - A Boolean value that indicates whether hard license enforcement is used. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>usagelimitExceeded</code> - A Boolean value that indicates whether the available licenses have been exceeded. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
  ListLicenseSpecificationsForResourceResponse:
    type: object
    properties:
      LicenseSpecifications:
        $ref: '#/definitions/LicenseSpecifications'
        description: License configurations associated with a resource.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListLicenseSpecificationsForResourceRequest:
    type: object
    required:
      - ResourceArn
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of a resource that has an associated license configuration.
      MaxResults:
        $ref: '#/definitions/BoxInteger'
        description: Maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListResourceInventoryResponse:
    type: object
    properties:
      ResourceInventoryList:
        $ref: '#/definitions/ResourceInventoryList'
        description: Information about the resources.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListResourceInventoryRequest:
    type: object
    properties:
      MaxResults:
        $ref: '#/definitions/BoxInteger'
        description: Maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
      Filters:
        $ref: '#/definitions/InventoryFilterList'
        description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>account_id</code> - The ID of the AWS account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>application_name</code> - The name of the application. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>license_included</code> - The type of license included. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> <li> <p> <code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
  FailedDependencyException: {}
  ListTagsForResourceResponse:
    type: object
    properties:
      Tags:
        $ref: '#/definitions/TagList'
        description: Information about the tags.
  ListTagsForResourceRequest:
    type: object
    required:
      - ResourceArn
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
  ListUsageForLicenseConfigurationResponse:
    type: object
    properties:
      LicenseConfigurationUsageList:
        $ref: '#/definitions/LicenseConfigurationUsageList'
        description: Information about the license configurations.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
  ListUsageForLicenseConfigurationRequest:
    type: object
    required:
      - LicenseConfigurationArn
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
      MaxResults:
        $ref: '#/definitions/BoxInteger'
        description: Maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/String'
        description: Token for the next set of results.
      Filters:
        $ref: '#/definitions/Filters'
        description: '<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>resourceArn</code> - The ARN of the license configuration resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceType</code> - The resource type (EC2_INSTANCE | EC2_HOST | EC2_AMI | SYSTEMS_MANAGER_MANAGED_INSTANCE). Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceAccount</code> - The ID of the account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>'
  TagResourceResponse:
    type: object
    properties: {}
  TagResourceRequest:
    type: object
    required:
      - ResourceArn
      - Tags
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
      Tags:
        $ref: '#/definitions/TagList'
        description: One or more tags.
  UntagResourceResponse:
    type: object
    properties: {}
  UntagResourceRequest:
    type: object
    required:
      - ResourceArn
      - TagKeys
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
      TagKeys:
        $ref: '#/definitions/TagKeyList'
        description: Keys identifying the tags to remove.
  UpdateLicenseConfigurationResponse:
    type: object
    properties: {}
  UpdateLicenseConfigurationRequest:
    type: object
    required:
      - LicenseConfigurationArn
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
      LicenseConfigurationStatus:
        $ref: '#/definitions/LicenseConfigurationStatus'
        description: New status of the license configuration.
      LicenseRules:
        $ref: '#/definitions/StringList'
        description: New license rules.
      LicenseCount:
        $ref: '#/definitions/BoxLong'
        description: New number of licenses managed by the license configuration.
      LicenseCountHardLimit:
        $ref: '#/definitions/BoxBoolean'
        description: New hard limit of the number of available licenses.
      Name:
        $ref: '#/definitions/String'
        description: New name of the license configuration.
      Description:
        $ref: '#/definitions/String'
        description: New description of the license configuration.
      ProductInformationList:
        $ref: '#/definitions/ProductInformationList'
        description: New product information.
  UpdateLicenseSpecificationsForResourceResponse:
    type: object
    properties: {}
  UpdateLicenseSpecificationsForResourceRequest:
    type: object
    required:
      - ResourceArn
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the AWS resource.
      AddLicenseSpecifications:
        $ref: '#/definitions/LicenseSpecifications'
        description: ARNs of the license configurations to add.
      RemoveLicenseSpecifications:
        $ref: '#/definitions/LicenseSpecifications'
        description: ARNs of the license configurations to remove.
  InvalidResourceStateException: {}
  LicenseUsageException: {}
  UpdateServiceSettingsResponse:
    type: object
    properties: {}
  UpdateServiceSettingsRequest:
    type: object
    properties:
      S3BucketArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information is stored.
      SnsTopicArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.
      OrganizationConfiguration:
        $ref: '#/definitions/OrganizationConfiguration'
        description: Enables integration with AWS Organizations for cross-account discovery.
      EnableCrossAccountsDiscovery:
        $ref: '#/definitions/BoxBoolean'
        description: Activates cross-account discovery.
  DateTime:
    type: string
    format: date-time
  AutomatedDiscoveryInformation:
    type: object
    properties:
      LastRunTime:
        $ref: '#/definitions/DateTime'
        description: Time that automated discovery last ran.
    description: Describes automated discovery.
  Boolean:
    type: boolean
  BoxBoolean:
    type: boolean
  BoxInteger:
    type: integer
  BoxLong:
    type: integer
  ResourceType:
    type: string
    enum:
      - EC2_INSTANCE
      - EC2_HOST
      - EC2_AMI
      - RDS
      - SYSTEMS_MANAGER_MANAGED_INSTANCE
  ConsumedLicenseSummary:
    type: object
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: Resource type of the resource consuming a license.
      ConsumedLicenses:
        $ref: '#/definitions/BoxLong'
        description: Number of licenses consumed by the resource.
    description: Details about license consumption.
  ConsumedLicenseSummaryList:
    type: array
    items:
      $ref: '#/definitions/ConsumedLicenseSummary'
  String:
    type: string
  LicenseCountingType:
    type: string
    enum:
      - vCPU
      - Instance
      - Core
      - Socket
  StringList:
    type: array
    items:
      $ref: '#/definitions/String'
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  ProductInformationList:
    type: array
    items:
      $ref: '#/definitions/ProductInformation'
  FilterName:
    type: string
  FilterValues:
    type: array
    items:
      $ref: '#/definitions/FilterValue'
  Filter:
    type: object
    properties:
      Name:
        $ref: '#/definitions/FilterName'
        description: Name of the filter. Filter names are case-sensitive.
      Values:
        $ref: '#/definitions/FilterValues'
        description: Filter values. Filter values are case-sensitive.
    description: 'A filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.'
  FilterValue:
    type: string
  Filters:
    type: array
    items:
      $ref: '#/definitions/Filter'
  ManagedResourceSummaryList:
    type: array
    items:
      $ref: '#/definitions/ManagedResourceSummary'
  OrganizationConfiguration:
    type: object
    required:
      - EnableIntegration
    properties:
      EnableIntegration:
        $ref: '#/definitions/Boolean'
        description: Enables AWS Organization integration.
    description: Configuration information for AWS Organizations.
  InventoryFilterCondition:
    type: string
    enum:
      - EQUALS
      - NOT_EQUALS
      - BEGINS_WITH
      - CONTAINS
  InventoryFilter:
    type: object
    required:
      - Name
      - Condition
    properties:
      Name:
        $ref: '#/definitions/String'
        description: Name of the filter.
      Condition:
        $ref: '#/definitions/InventoryFilterCondition'
        description: Condition of the filter.
      Value:
        $ref: '#/definitions/String'
        description: Value of the filter.
    description: An inventory filter.
  InventoryFilterList:
    type: array
    items:
      $ref: '#/definitions/InventoryFilter'
  LicenseConfiguration:
    type: object
    properties:
      LicenseConfigurationId:
        $ref: '#/definitions/String'
        description: Unique ID of the license configuration.
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
      Name:
        $ref: '#/definitions/String'
        description: Name of the license configuration.
      Description:
        $ref: '#/definitions/String'
        description: Description of the license configuration.
      LicenseCountingType:
        $ref: '#/definitions/LicenseCountingType'
        description: Dimension to use to track the license inventory.
      LicenseRules:
        $ref: '#/definitions/StringList'
        description: License rules.
      LicenseCount:
        $ref: '#/definitions/BoxLong'
        description: Number of licenses managed by the license configuration.
      LicenseCountHardLimit:
        $ref: '#/definitions/BoxBoolean'
        description: Number of available licenses as a hard limit.
      ConsumedLicenses:
        $ref: '#/definitions/BoxLong'
        description: 'Number of licenses consumed. '
      Status:
        $ref: '#/definitions/String'
        description: Status of the license configuration.
      OwnerAccountId:
        $ref: '#/definitions/String'
        description: Account ID of the license configuration's owner.
      ConsumedLicenseSummaryList:
        $ref: '#/definitions/ConsumedLicenseSummaryList'
        description: Summaries for licenses consumed by various resources.
      ManagedResourceSummaryList:
        $ref: '#/definitions/ManagedResourceSummaryList'
        description: Summaries for managed resources.
      ProductInformationList:
        $ref: '#/definitions/ProductInformationList'
        description: Product information.
      AutomatedDiscoveryInformation:
        $ref: '#/definitions/AutomatedDiscoveryInformation'
        description: Automated discovery information.
    description: 'A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.'
  LicenseConfigurationAssociation:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the resource.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: Type of server resource.
      ResourceOwnerId:
        $ref: '#/definitions/String'
        description: ID of the AWS account that owns the resource consuming licenses.
      AssociationTime:
        $ref: '#/definitions/DateTime'
        description: Time when the license configuration was associated with the resource.
    description: Describes an association with a license configuration.
  LicenseConfigurationAssociations:
    type: array
    items:
      $ref: '#/definitions/LicenseConfigurationAssociation'
  LicenseConfigurationStatus:
    type: string
    enum:
      - AVAILABLE
      - DISABLED
  LicenseConfigurationUsage:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the resource.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: Type of resource.
      ResourceStatus:
        $ref: '#/definitions/String'
        description: Status of the resource.
      ResourceOwnerId:
        $ref: '#/definitions/String'
        description: ID of the account that owns the resource.
      AssociationTime:
        $ref: '#/definitions/DateTime'
        description: Time when the license configuration was initially associated with the resource.
      ConsumedLicenses:
        $ref: '#/definitions/BoxLong'
        description: Number of licenses consumed by the resource.
    description: Details about the usage of a resource associated with a license configuration.
  LicenseConfigurationUsageList:
    type: array
    items:
      $ref: '#/definitions/LicenseConfigurationUsage'
  LicenseConfigurations:
    type: array
    items:
      $ref: '#/definitions/LicenseConfiguration'
  MetadataList:
    type: array
    items:
      $ref: '#/definitions/Metadata'
  LicenseOperationFailure:
    type: object
    properties:
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the resource.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: Resource type.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: Error message.
      FailureTime:
        $ref: '#/definitions/DateTime'
        description: Failure time.
      OperationName:
        $ref: '#/definitions/String'
        description: Name of the operation.
      ResourceOwnerId:
        $ref: '#/definitions/String'
        description: ID of the AWS account that owns the resource.
      OperationRequestedBy:
        $ref: '#/definitions/String'
        description: The requester is "License Manager Automated Discovery".
      MetadataList:
        $ref: '#/definitions/MetadataList'
        description: Reserved.
    description: Describes the failure of a license operation.
  LicenseOperationFailureList:
    type: array
    items:
      $ref: '#/definitions/LicenseOperationFailure'
  LicenseSpecification:
    type: object
    required:
      - LicenseConfigurationArn
    properties:
      LicenseConfigurationArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the license configuration.
    description: Details for associating a license configuration with a resource.
  LicenseSpecifications:
    type: array
    items:
      $ref: '#/definitions/LicenseSpecification'
  ResourceInventoryList:
    type: array
    items:
      $ref: '#/definitions/ResourceInventory'
  ManagedResourceSummary:
    type: object
    properties:
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: Type of resource associated with a license.
      AssociationCount:
        $ref: '#/definitions/BoxLong'
        description: Number of resources associated with licenses.
    description: Summary information about a managed resource.
  Metadata:
    type: object
    properties:
      Name:
        $ref: '#/definitions/String'
        description: Reserved.
      Value:
        $ref: '#/definitions/String'
        description: Reserved.
    description: Reserved.
  ProductInformationFilterList:
    type: array
    items:
      $ref: '#/definitions/ProductInformationFilter'
  ProductInformation:
    type: object
    required:
      - ResourceType
      - ProductInformationFilterList
    properties:
      ResourceType:
        $ref: '#/definitions/String'
        description: Resource type. The value is <code>SSM_MANAGED</code>.
      ProductInformationFilterList:
        $ref: '#/definitions/ProductInformationFilterList'
        description: '<p>Product information filters. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>Application Name</code> - The name of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Publisher</code> - The publisher of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Version</code> - The version of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Type</code> - The platform type. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>License Included</code> - The type of license included. Logical operators are <code>EQUALS</code> and <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> </ul>'
    description: Describes product information for a license configuration.
  ProductInformationFilter:
    type: object
    required:
      - ProductInformationFilterName
      - ProductInformationFilterValue
      - ProductInformationFilterComparator
    properties:
      ProductInformationFilterName:
        $ref: '#/definitions/String'
        description: Filter name.
      ProductInformationFilterValue:
        $ref: '#/definitions/StringList'
        description: Filter value.
      ProductInformationFilterComparator:
        $ref: '#/definitions/String'
        description: Logical operator.
    description: Describes product information filters.
  ResourceInventory:
    type: object
    properties:
      ResourceId:
        $ref: '#/definitions/String'
        description: ID of the resource.
      ResourceType:
        $ref: '#/definitions/ResourceType'
        description: Type of resource.
      ResourceArn:
        $ref: '#/definitions/String'
        description: Amazon Resource Name (ARN) of the resource.
      Platform:
        $ref: '#/definitions/String'
        description: Platform of the resource.
      PlatformVersion:
        $ref: '#/definitions/String'
        description: Platform version of the resource in the inventory.
      ResourceOwningAccountId:
        $ref: '#/definitions/String'
        description: ID of the account that owns the resource.
    description: Details about a resource.
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/String'
        description: Tag key.
      Value:
        $ref: '#/definitions/String'
        description: Tag value.
    description: Details about a tag for a license configuration.
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/String'
