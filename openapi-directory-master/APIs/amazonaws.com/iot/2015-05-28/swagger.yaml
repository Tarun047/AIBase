swagger: '2.0'
info:
  version: '2015-05-28'
  x-release: v4
  title: AWS IoT
  description: '<fullname>AWS IoT</fullname> <p>AWS IoT provides secure, bi-directional communication between Internet-connected devices (such as sensors, actuators, embedded devices, or smart appliances) and the AWS cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each device (Registry), configure logging, and create and manage policies and credentials to authenticate devices.</p> <p>For more information about how AWS IoT works, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html">Developer Guide</a>.</p> <p>For information about how to use the credentials provider for AWS IoT, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html">Authorizing Direct Calls to AWS Services</a>.</p>'
  x-logo:
    url: 'https://twitter.com/awscloud/profile_image?size=original'
    backgroundColor: '#FFFFFF'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  x-providerName: amazonaws.com
  x-serviceName: iot
  x-origin:
    - contentType: application/json
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iot-2015-05-28.normal.json'
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://docs.aws.amazon.com/iot/'
host: iot.amazonaws.com
basePath: /
schemes:
  - https
  - http
x-servers:
  - url: 'http://iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT multi-region endpoint
  - url: 'https://iot.{region}.amazonaws.com'
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS IoT multi-region endpoint
  - url: 'http://iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT endpoint for China (Beijing) and China (Ningxia)
  - url: 'https://iot.{region}.amazonaws.com.cn'
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
consumes:
  - application/json
produces:
  - application/json
parameters:
  X-Amz-Content-Sha256:
    name: X-Amz-Content-Sha256
    in: header
    type: string
    required: false
  X-Amz-Date:
    name: X-Amz-Date
    in: header
    type: string
    required: false
  X-Amz-Algorithm:
    name: X-Amz-Algorithm
    in: header
    type: string
    required: false
  X-Amz-Credential:
    name: X-Amz-Credential
    in: header
    type: string
    required: false
  X-Amz-Security-Token:
    name: X-Amz-Security-Token
    in: header
    type: string
    required: false
  X-Amz-Signature:
    name: X-Amz-Signature
    in: header
    type: string
    required: false
  X-Amz-SignedHeaders:
    name: X-Amz-SignedHeaders
    in: header
    type: string
    required: false
securityDefinitions:
  hmac:
    type: apiKey
    name: Authorization
    in: header
    description: Amazon Signature authorization v4
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
paths:
  '/accept-certificate-transfer/{certificateId}':
    patch:
      operationId: AcceptCertificateTransfer
      description: '<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          schema:
            $ref: '#/definitions/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
        - name: setAsActive
          in: query
          required: false
          description: Specifies whether the certificate is active.
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /billing-groups/addThingToBillingGroup:
    put:
      operationId: AddThingToBillingGroup
      description: Adds a thing to a billing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddThingToBillingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              billingGroupName:
                description: The name of the billing group.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              billingGroupArn:
                description: The ARN of the billing group.
                type: string
              thingName:
                description: The name of the thing to be added to the billing group.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingArn:
                description: The ARN of the thing to be added to the billing group.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups/addThingToThingGroup:
    put:
      operationId: AddThingToThingGroup
      description: Adds a thing to a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AddThingToThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              thingGroupName:
                description: The name of the group to which you are adding a thing.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingGroupArn:
                description: The ARN of the group to which you are adding a thing.
                type: string
              thingName:
                description: The name of the thing to add to a group.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingArn:
                description: The ARN of the thing to add to a group.
                type: string
              overrideDynamicGroups:
                description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
                type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/targets':
    post:
      operationId: AssociateTargetsWithJob
      description: '<p>Associates a group with a continuous job. The following criteria must be met: </p> <ul> <li> <p>The job must have been created with the <code>targetSelection</code> field set to "CONTINUOUS".</p> </li> <li> <p>The job status must currently be "IN_PROGRESS".</p> </li> <li> <p>The total number of targets associated with a job must not exceed 100.</p> </li> </ul>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateTargetsWithJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - targets
            properties:
              targets:
                description: A list of thing group ARNs that define the targets of the job.
                type: array
                items:
                  $ref: '#/definitions/TargetArn'
                minItems: 1
              comment:
                description: An optional comment string describing why the job was associated with the targets.
                type: string
                pattern: '[^\p{C}]+'
                maxLength: 2028
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/target-policies/{policyName}':
    put:
      operationId: AttachPolicy
      description: Attaches a policy to the specified target.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy to attach.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - target
            properties:
              target:
                description: 'The <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-security-identity.html">identity</a> to which the policy is attached.'
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DetachPolicy
      description: Detaches a policy from the specified target.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy to detach.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - target
            properties:
              target:
                description: The target from which the policy will be detached.
                type: string
  '/principal-policies/{policyName}#x-amzn-iot-principal':
    put:
      deprecated: true
      operationId: AttachPrincipalPolicy
      description: '<p>Attaches the specified policy to the specified principal (certificate or other credential).</p> <p> <b>Note:</b> This API is deprecated. Please use <a>AttachPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: x-amzn-iot-principal
          in: header
          required: true
          description: 'The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.'
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      deprecated: true
      operationId: DetachPrincipalPolicy
      description: '<p>Removes the specified policy from the specified certificate.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>DetachPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy to detach.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: x-amzn-iot-principal
          in: header
          required: true
          description: '<p>The principal.</p> <p>If the principal is a certificate, specify the certificate ARN. If the principal is an Amazon Cognito identity, specify the identity ID.</p>'
          type: string
  '/security-profiles/{securityProfileName}/targets#securityProfileTargetArn':
    put:
      operationId: AttachSecurityProfile
      description: Associates a Device Defender security profile with a thing group or this account. Each thing group or account can have up to five security profiles associated with it.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The security profile that is attached.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: securityProfileTargetArn
          in: query
          required: true
          description: The ARN of the target (thing group) to which the security profile is attached.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DetachSecurityProfile
      description: Disassociates a Device Defender security profile from a thing group or from this account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The security profile that is detached.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: securityProfileTargetArn
          in: query
          required: true
          description: The ARN of the thing group from which the security profile is detached.
          type: string
  '/things/{thingName}/principals#x-amzn-principal':
    put:
      operationId: AttachThingPrincipal
      description: 'Attaches the specified principal to the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AttachThingPrincipalResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: x-amzn-principal
          in: header
          required: true
          description: 'The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.'
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DetachThingPrincipal
      description: '<p>Detaches the specified principal from the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.</p> <note> <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DetachThingPrincipalResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: x-amzn-principal
          in: header
          required: true
          description: 'If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.'
          type: string
  '/audit/mitigationactions/tasks/{taskId}/cancel':
    put:
      operationId: CancelAuditMitigationActionsTask
      description: 'Cancels a mitigation action task that is in progress. If the task is not in progress, an InvalidRequestException occurs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelAuditMitigationActionsTaskResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: 'The unique identifier for the task that you want to cancel. '
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/audit/tasks/{taskId}/cancel':
    put:
      operationId: CancelAuditTask
      description: 'Cancels an audit that is in progress. The audit can be either scheduled or on-demand. If the audit is not in progress, an "InvalidRequestException" occurs.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelAuditTaskResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the audit you want to cancel. You can only cancel an audit that is "IN_PROGRESS".
          type: string
          pattern: '[a-zA-Z0-9\-]+'
          minLength: 1
          maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/cancel-certificate-transfer/{certificateId}':
    patch:
      operationId: CancelCertificateTransfer
      description: '<p>Cancels a pending transfer for the specified certificate.</p> <p> <b>Note</b> Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer, AWS IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          schema:
            $ref: '#/definitions/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/cancel':
    put:
      operationId: CancelJob
      description: Cancels a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CancelJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: force
          in: query
          required: false
          description: '<p>(Optional) If <code>true</code> job executions with status "IN_PROGRESS" and "QUEUED" are canceled, otherwise only job executions with status "QUEUED" are canceled. The default is <code>false</code>.</p> <p>Canceling a job which is "IN_PROGRESS", will cause a device which is executing the job to be unable to update the job execution status. Use caution and ensure that each device executing a job which is canceled is able to recover to a valid state.</p>'
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              reasonCode:
                description: (Optional)A reason code string that explains why the job was canceled.
                type: string
                pattern: '[\p{Upper}\p{Digit}_]+'
                maxLength: 128
              comment:
                description: An optional comment string describing why the job was canceled.
                type: string
                pattern: '[^\p{C}]+'
                maxLength: 2028
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs/{jobId}/cancel':
    put:
      operationId: CancelJobExecution
      description: Cancels the execution of a job for a given thing.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          schema:
            $ref: '#/definitions/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job to be canceled.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: thingName
          in: path
          required: true
          description: The name of the thing whose execution of the job will be canceled.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: force
          in: query
          required: false
          description: '<p>(Optional) If <code>true</code> the job execution will be canceled if it has status IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has status QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you do not set <code>force</code> to <code>true</code>, then an <code>InvalidStateTransitionException</code> will be thrown. The default is <code>false</code>.</p> <p>Canceling a job execution which is "IN_PROGRESS", will cause the device to be unable to update the job execution status. Use caution and ensure that the device is able to recover to a valid state.</p>'
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              expectedVersion:
                description: '(Optional) The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'
                type: integer
              statusDetails:
                description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.'
                type: object
                additionalProperties:
                  $ref: '#/definitions/DetailsValue'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /default-authorizer:
    delete:
      operationId: ClearDefaultAuthorizer
      description: Clears the default authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ClearDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters: []
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeDefaultAuthorizer
      description: Describes the default authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters: []
    post:
      operationId: SetDefaultAuthorizer
      description: Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SetDefaultAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - authorizerName
            properties:
              authorizerName:
                description: The authorizer name.
                type: string
                pattern: '[\w=,@-]+'
                minLength: 1
                maxLength: 128
  '/confirmdestination/{confirmationToken}':
    get:
      operationId: ConfirmTopicRuleDestination
      description: 'Confirms a topic rule destination. When you create a rule requiring a destination, AWS IoT sends a confirmation message to the endpoint or base address you specify. The message includes a token which you pass back when calling <code>ConfirmTopicRuleDestination</code> to confirm that you own or have access to the endpoint.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ConfirmTopicRuleDestinationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: confirmationToken
          in: path
          required: true
          description: The token used to confirm ownership or access to the topic rule confirmation URL.
          type: string
          minLength: 1
          maxLength: 2048
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/authorizer/{authorizerName}':
    post:
      operationId: CreateAuthorizer
      description: Creates an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAuthorizerResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The authorizer name.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - authorizerFunctionArn
            properties:
              authorizerFunctionArn:
                description: The ARN of the authorizer's Lambda function.
                type: string
              tokenKeyName:
                description: The name of the token key used to extract the token from the HTTP headers.
                type: string
                pattern: '[a-zA-Z0-9_-]+'
                minLength: 1
                maxLength: 128
              tokenSigningPublicKeys:
                description: The public keys used to verify the digital signature returned by your custom authentication service.
                type: object
                additionalProperties:
                  $ref: '#/definitions/KeyValue'
              status:
                description: The status of the create authorizer request.
                type: string
                enum:
                  - ACTIVE
                  - INACTIVE
              signingDisabled:
                description: Specifies whether AWS IoT validates the token signature in an authorization request.
                type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteAuthorizer
      description: Deletes an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAuthorizerResponse'
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The name of the authorizer to delete.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
    get:
      operationId: DescribeAuthorizer
      description: Describes an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The name of the authorizer to describe.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
    put:
      operationId: UpdateAuthorizer
      description: Updates an authorizer.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The authorizer name.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              authorizerFunctionArn:
                description: The ARN of the authorizer's Lambda function.
                type: string
              tokenKeyName:
                description: 'The key used to extract the token from the HTTP headers. '
                type: string
                pattern: '[a-zA-Z0-9_-]+'
                minLength: 1
                maxLength: 128
              tokenSigningPublicKeys:
                description: The public keys used to verify the token signature.
                type: object
                additionalProperties:
                  $ref: '#/definitions/KeyValue'
              status:
                description: The status of the update authorizer request.
                type: string
                enum:
                  - ACTIVE
                  - INACTIVE
  '/billing-groups/{billingGroupName}':
    post:
      operationId: CreateBillingGroup
      description: Creates a billing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateBillingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name you wish to give to the billing group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              billingGroupProperties:
                description: The properties of a billing group.
                type: object
                properties:
                  billingGroupDescription:
                    $ref: '#/definitions/BillingGroupDescription'
                    description: The description of the billing group.
              tags:
                description: Metadata which can be used to manage the billing group.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteBillingGroup
      description: Deletes the billing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteBillingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>DeleteBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.'
          type: integer
    get:
      operationId: DescribeBillingGroup
      description: Returns information about a billing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeBillingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    patch:
      operationId: UpdateBillingGroup
      description: Updates information about the billing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateBillingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - billingGroupProperties
            properties:
              billingGroupProperties:
                description: The properties of a billing group.
                type: object
                properties:
                  billingGroupDescription:
                    $ref: '#/definitions/BillingGroupDescription'
                    description: The description of the billing group.
              expectedVersion:
                description: 'The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>UpdateBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.'
                type: integer
  /certificates:
    post:
      operationId: CreateCertificateFromCsr
      description: '<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p> <b>Note:</b> The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256 or NIST P-384 curves. </p> <p> <b>Note:</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p> <p>You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.</p> <p>Assuming a set of CSRs are located inside of the directory my-csr-directory:</p> <p>On Linux and OS X, the command is:</p> <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot create-certificate-from-csr AWS CLI command to create a certificate for the corresponding CSR.</p> <p>The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the certificate creation process:</p> <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_}</p> <p>On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; forfiles /p my-csr-directory /c "cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path"</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateCertificateFromCsrResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: Specifies whether the certificate is active.
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - certificateSigningRequest
            properties:
              certificateSigningRequest:
                description: The certificate signing request (CSR).
                type: string
                minLength: 1
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListCertificates
      description: <p>Lists the certificates registered in your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCertificatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.'
          type: boolean
  '/domainConfigurations/{domainConfigurationName}':
    post:
      operationId: CreateDomainConfiguration
      description: <p>Creates a domain configuration.</p> <note> <p>The domain configuration feature is in public preview and is subject to change.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDomainConfigurationResponse'
        '480':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '481':
          description: CertificateValidationException
          schema:
            $ref: '#/definitions/CertificateValidationException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '487':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration. This value must be unique to a region.
          type: string
          pattern: '[\w.-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              domainName:
                description: The name of the domain.
                type: string
                minLength: 1
                maxLength: 253
              serverCertificateArns:
                description: The ARNs of the certificates that AWS IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for AWS-managed domains.
                type: array
                items:
                  $ref: '#/definitions/AcmCertificateArn'
                minItems: 0
                maxItems: 1
              validationCertificateArn:
                description: The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for AWS-managed domains.
                type: string
                pattern: 'arn:aws:acm:[a-z]{2}-(gov-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/?[a-zA-Z0-9/-]+'
                minLength: 1
                maxLength: 2048
              authorizerConfig:
                description: An object that specifies the authorization service for a domain.
                type: object
                properties:
                  defaultAuthorizerName:
                    $ref: '#/definitions/AuthorizerName'
                    description: The name of the authorization service for a domain configuration.
                  allowAuthorizerOverride:
                    $ref: '#/definitions/AllowAuthorizerOverride'
                    description: A Boolean that specifies whether the domain configuration's authorization service can be overridden.
              serviceType:
                description: The type of service delivered by the endpoint.
                type: string
                enum:
                  - DATA
                  - CREDENTIAL_PROVIDER
                  - JOBS
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDomainConfiguration
      description: <p>Deletes the specified domain configuration.</p> <note> <p>The domain configuration feature is in public preview and is subject to change.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDomainConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration to be deleted.
          type: string
          pattern: '[\w.-]+'
          minLength: 1
          maxLength: 128
    get:
      operationId: DescribeDomainConfiguration
      description: <p>Gets summary information about a domain configuration.</p> <note> <p>The domain configuration feature is in public preview and is subject to change.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeDomainConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration.
          type: string
          pattern: '[\w.:-]+'
          minLength: 1
          maxLength: 128
    put:
      operationId: UpdateDomainConfiguration
      description: <p>Updates values stored in the domain configuration. Domain configurations for default endpoints can't be updated.</p> <note> <p>The domain configuration feature is in public preview and is subject to change.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDomainConfigurationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: CertificateValidationException
          schema:
            $ref: '#/definitions/CertificateValidationException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: domainConfigurationName
          in: path
          required: true
          description: The name of the domain configuration to be updated.
          type: string
          pattern: '[\w.:-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              authorizerConfig:
                description: An object that specifies the authorization service for a domain.
                type: object
                properties:
                  defaultAuthorizerName:
                    $ref: '#/definitions/AuthorizerName'
                    description: The name of the authorization service for a domain configuration.
                  allowAuthorizerOverride:
                    $ref: '#/definitions/AllowAuthorizerOverride'
                    description: A Boolean that specifies whether the domain configuration's authorization service can be overridden.
              domainConfigurationStatus:
                description: The status to which the domain configuration should be updated.
                type: string
                enum:
                  - ENABLED
                  - DISABLED
              removeAuthorizerConfig:
                description: Removes the authorization configuration from a domain.
                type: boolean
  '/dynamic-thing-groups/{thingGroupName}':
    post:
      operationId: CreateDynamicThingGroup
      description: Creates a dynamic thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateDynamicThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: InvalidQueryException
          schema:
            $ref: '#/definitions/InvalidQueryException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The dynamic thing group name to create.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - queryString
            properties:
              thingGroupProperties:
                description: Thing group properties.
                type: object
                properties:
                  thingGroupDescription:
                    $ref: '#/definitions/ThingGroupDescription'
                    description: The thing group description.
                  attributePayload:
                    $ref: '#/definitions/AttributePayload'
                    description: The thing group attributes in JSON format.
              indexName:
                description: '<p>The dynamic thing group index name.</p> <note> <p>Currently one index is supported: "AWS_Things".</p> </note>'
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              queryString:
                description: '<p>The dynamic thing group search query string.</p> <p>See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query Syntax</a> for information about query string syntax.</p>'
                type: string
                minLength: 1
              queryVersion:
                description: '<p>The dynamic thing group query version.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
                type: string
              tags:
                description: Metadata which can be used to manage the dynamic thing group.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteDynamicThingGroup
      description: Deletes a dynamic thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteDynamicThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the dynamic thing group to delete.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: The expected version of the dynamic thing group to delete.
          type: integer
    patch:
      operationId: UpdateDynamicThingGroup
      description: Updates a dynamic thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateDynamicThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: InvalidQueryException
          schema:
            $ref: '#/definitions/InvalidQueryException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the dynamic thing group to update.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - thingGroupProperties
            properties:
              thingGroupProperties:
                description: Thing group properties.
                type: object
                properties:
                  thingGroupDescription:
                    $ref: '#/definitions/ThingGroupDescription'
                    description: The thing group description.
                  attributePayload:
                    $ref: '#/definitions/AttributePayload'
                    description: The thing group attributes in JSON format.
              expectedVersion:
                description: The expected version of the dynamic thing group to update.
                type: integer
              indexName:
                description: '<p>The dynamic thing group index to update.</p> <note> <p>Currently one index is supported: ''AWS_Things''.</p> </note>'
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              queryString:
                description: The dynamic thing group search query string to update.
                type: string
                minLength: 1
              queryVersion:
                description: '<p>The dynamic thing group query version to update.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
                type: string
  '/jobs/{jobId}':
    put:
      operationId: CreateJob
      description: Creates a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: 'A job identifier which must be unique for your AWS account. We recommend using a UUID. Alpha-numeric characters, "-" and "_" are valid for use here.'
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - targets
              - abortConfig
            properties:
              targets:
                description: A list of things and thing groups to which the job should be sent.
                type: array
                items:
                  $ref: '#/definitions/TargetArn'
                minItems: 1
              documentSource:
                description: An S3 link to the job document.
                type: string
                minLength: 1
                maxLength: 1350
              document:
                description: '<p>The job document.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>'
                type: string
                maxLength: 32768
              description:
                description: A short text description of the job.
                type: string
                pattern: '[^\p{C}]+'
                maxLength: 2028
              presignedUrlConfig:
                description: Configuration for pre-signed S3 URLs.
                type: object
                properties:
                  roleArn:
                    $ref: '#/definitions/RoleArn'
                    description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
                  expiresInSec:
                    $ref: '#/definitions/ExpiresInSec'
                    description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
              targetSelection:
                description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
                type: string
                enum:
                  - CONTINUOUS
                  - SNAPSHOT
              jobExecutionsRolloutConfig:
                description: Allows you to create a staged rollout of a job.
                type: object
                properties:
                  maximumPerMinute:
                    $ref: '#/definitions/MaxJobExecutionsPerMin'
                    description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
                  exponentialRate:
                    $ref: '#/definitions/ExponentialRolloutRate'
                    description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
              abortConfig:
                description: Details of abort criteria to abort the job.
                type: object
                properties:
                  criteriaList:
                    $ref: '#/definitions/AbortCriteriaList'
                    description: The list of abort criteria to define rules to abort the job.
              timeoutConfig:
                description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
                type: object
                properties:
                  inProgressTimeoutInMinutes:
                    $ref: '#/definitions/InProgressTimeoutInMinutes'
                    description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
              tags:
                description: Metadata which can be used to manage the job.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteJob
      description: '<p>Deletes a job and its related job executions.</p> <p>Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as "DELETION_IN_PROGRESS". Attempting to delete or cancel a job whose status is already "DELETION_IN_PROGRESS" will result in an error.</p> <p>Only 10 jobs may have status "DELETION_IN_PROGRESS" at the same time, or a LimitExceededException will occur.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          schema:
            $ref: '#/definitions/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: '<p>The ID of the job to be deleted.</p> <p>After a job deletion is completed, you may reuse this jobId when you create a new job. However, this is not recommended, and you must ensure that your devices are not using the jobId to refer to the deleted job.</p>'
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: force
          in: query
          required: false
          description: '<p>(Optional) When true, you can delete a job which is "IN_PROGRESS". Otherwise, you can only delete a job which is in a terminal state ("COMPLETED" or "CANCELED") or an exception will occur. The default is false.</p> <note> <p>Deleting a job which is "IN_PROGRESS", will cause a device which is executing the job to be unable to access job information or update the job execution status. Use caution and ensure that each device executing a job which is deleted is able to recover to a valid state.</p> </note>'
          type: boolean
    get:
      operationId: DescribeJob
      description: Describes a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
    patch:
      operationId: UpdateJob
      description: Updates supported fields of the specified job.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job to be updated.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - abortConfig
            properties:
              description:
                description: A short text description of the job.
                type: string
                pattern: '[^\p{C}]+'
                maxLength: 2028
              presignedUrlConfig:
                description: Configuration for pre-signed S3 URLs.
                type: object
                properties:
                  roleArn:
                    $ref: '#/definitions/RoleArn'
                    description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
                  expiresInSec:
                    $ref: '#/definitions/ExpiresInSec'
                    description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
              jobExecutionsRolloutConfig:
                description: Allows you to create a staged rollout of a job.
                type: object
                properties:
                  maximumPerMinute:
                    $ref: '#/definitions/MaxJobExecutionsPerMin'
                    description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
                  exponentialRate:
                    $ref: '#/definitions/ExponentialRolloutRate'
                    description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
              abortConfig:
                description: Details of abort criteria to abort the job.
                type: object
                properties:
                  criteriaList:
                    $ref: '#/definitions/AbortCriteriaList'
                    description: The list of abort criteria to define rules to abort the job.
              timeoutConfig:
                description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
                type: object
                properties:
                  inProgressTimeoutInMinutes:
                    $ref: '#/definitions/InProgressTimeoutInMinutes'
                    description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
  /keys-and-certificate:
    post:
      operationId: CreateKeysAndCertificate
      description: '<p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key. You can also call <code>CreateKeysAndCertificate</code> over MQTT from a device, for more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html#provision-mqtt-api">Provisioning MQTT API</a>.</p> <p> <b>Note</b> This is the only time AWS IoT issues the private key for this certificate, so it is important to keep it in a secure location.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateKeysAndCertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: Specifies whether the certificate is active.
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/mitigationactions/actions/{actionName}':
    post:
      operationId: CreateMitigationAction
      description: Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Each mitigation action can apply only one type of change.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateMitigationActionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: 'A friendly name for the action. Choose a friendly name that accurately describes the action (for example, <code>EnableLoggingAction</code>).'
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - roleArn
              - actionParams
            properties:
              roleArn:
                description: The ARN of the IAM role that is used to apply the mitigation action.
                type: string
                minLength: 20
                maxLength: 2048
              actionParams:
                description: 'The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).'
                type: object
                properties:
                  updateDeviceCertificateParams:
                    $ref: '#/definitions/UpdateDeviceCertificateParams'
                    description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
                  updateCACertificateParams:
                    $ref: '#/definitions/UpdateCACertificateParams'
                    description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
                  addThingsToThingGroupParams:
                    $ref: '#/definitions/AddThingsToThingGroupParams'
                    description: 'Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.'
                  replaceDefaultPolicyVersionParams:
                    $ref: '#/definitions/ReplaceDefaultPolicyVersionParams'
                    description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
                  enableIoTLoggingParams:
                    $ref: '#/definitions/EnableIoTLoggingParams'
                    description: Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
                  publishFindingToSnsParams:
                    $ref: '#/definitions/PublishFindingToSnsParams'
                    description: Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
              tags:
                description: Metadata that can be used to manage the mitigation action.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteMitigationAction
      description: Deletes a defined mitigation action from your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteMitigationActionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: The name of the mitigation action that you want to delete.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          maxLength: 128
    get:
      operationId: DescribeMitigationAction
      description: Gets information about a mitigation action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeMitigationActionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: The friendly name that uniquely identifies the mitigation action.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          maxLength: 128
    patch:
      operationId: UpdateMitigationAction
      description: Updates the definition for the specified mitigation action.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateMitigationActionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: actionName
          in: path
          required: true
          description: 'The friendly name for the mitigation action. You can''t change the name by using <code>UpdateMitigationAction</code>. Instead, you must delete and re-create the mitigation action with the new name.'
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              roleArn:
                description: The ARN of the IAM role that is used to apply the mitigation action.
                type: string
                minLength: 20
                maxLength: 2048
              actionParams:
                description: 'The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).'
                type: object
                properties:
                  updateDeviceCertificateParams:
                    $ref: '#/definitions/UpdateDeviceCertificateParams'
                    description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
                  updateCACertificateParams:
                    $ref: '#/definitions/UpdateCACertificateParams'
                    description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
                  addThingsToThingGroupParams:
                    $ref: '#/definitions/AddThingsToThingGroupParams'
                    description: 'Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.'
                  replaceDefaultPolicyVersionParams:
                    $ref: '#/definitions/ReplaceDefaultPolicyVersionParams'
                    description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
                  enableIoTLoggingParams:
                    $ref: '#/definitions/EnableIoTLoggingParams'
                    description: Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
                  publishFindingToSnsParams:
                    $ref: '#/definitions/PublishFindingToSnsParams'
                    description: Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
  '/otaUpdates/{otaUpdateId}':
    post:
      operationId: CreateOTAUpdate
      description: Creates an AWS IoT OTAUpdate on a target group of things or groups.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '487':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: otaUpdateId
          in: path
          required: true
          description: The ID of the OTA update to be created.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - targets
              - files
              - roleArn
            properties:
              description:
                description: The description of the OTA update.
                type: string
                pattern: '[^\p{C}]+'
                maxLength: 2028
              targets:
                description: The targeted devices to receive OTA updates.
                type: array
                items:
                  $ref: '#/definitions/Target'
                minItems: 1
              protocols:
                description: 'The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.'
                type: array
                items:
                  $ref: '#/definitions/Protocol'
                minItems: 1
                maxItems: 2
              targetSelection:
                description: 'Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.'
                type: string
                enum:
                  - CONTINUOUS
                  - SNAPSHOT
              awsJobExecutionsRolloutConfig:
                description: Configuration for the rollout of OTA updates.
                type: object
                properties:
                  maximumPerMinute:
                    $ref: '#/definitions/MaximumPerMinute'
                    description: The maximum number of OTA update job executions started per minute.
              awsJobPresignedUrlConfig:
                description: Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.
                type: object
                properties:
                  expiresInSec:
                    $ref: '#/definitions/ExpiresInSeconds'
                    description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 1800 seconds. Pre-signed URLs are generated when a request for the job document is received.'
              files:
                description: The files to be streamed by the OTA update.
                type: array
                items:
                  $ref: '#/definitions/OTAUpdateFile'
                minItems: 1
                maxItems: 50
              roleArn:
                description: The IAM role that allows access to the AWS IoT Jobs service.
                type: string
                minLength: 20
                maxLength: 2048
              additionalParameters:
                description: A list of additional OTA update parameters which are name-value pairs.
                type: object
                additionalProperties:
                  $ref: '#/definitions/Value'
              tags:
                description: Metadata which can be used to manage updates.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteOTAUpdate
      description: Delete an OTA update.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
      parameters:
        - name: otaUpdateId
          in: path
          required: true
          description: The OTA update ID to delete.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: deleteStream
          in: query
          required: false
          description: Specifies if the stream associated with an OTA update should be deleted when the OTA update is deleted.
          type: boolean
        - name: forceDeleteAWSJob
          in: query
          required: false
          description: Specifies if the AWS Job associated with the OTA update should be deleted with the OTA update is deleted.
          type: boolean
    get:
      operationId: GetOTAUpdate
      description: Gets an OTA update.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetOTAUpdateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: otaUpdateId
          in: path
          required: true
          description: The OTA update ID.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
  '/policies/{policyName}':
    post:
      operationId: CreatePolicy
      description: <p>Creates an AWS IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePolicyResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: MalformedPolicyException
          schema:
            $ref: '#/definitions/MalformedPolicyException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - policyDocument
            properties:
              policyDocument:
                description: 'The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.'
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeletePolicy
      description: '<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if it has non-default versions or it is attached to any certificate.</p> <p>To delete a policy, use the DeletePolicyVersion API to delete all non-default versions of the policy; use the DetachPrincipalPolicy API to detach the policy from any certificate; and then use the DeletePolicy API to delete the policy.</p> <p>When a policy is deleted using DeletePolicy, its default version is deleted with it.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy to delete.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
    get:
      operationId: GetPolicy
      description: Gets information about the specified policy with the policy document of the default version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
  '/policies/{policyName}/version':
    post:
      operationId: CreatePolicyVersion
      description: '<p>Creates a new version of the specified AWS IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version before you create a new one.</p> <p>Optionally, you can set the new version as the policy''s default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreatePolicyVersionResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: MalformedPolicyException
          schema:
            $ref: '#/definitions/MalformedPolicyException'
        '482':
          description: VersionsLimitExceededException
          schema:
            $ref: '#/definitions/VersionsLimitExceededException'
        '483':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: setAsDefault
          in: query
          required: false
          description: 'Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).'
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - policyDocument
            properties:
              policyDocument:
                description: 'The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespace.'
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListPolicyVersions
      description: Lists the versions of the specified policy and identifies the default version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPolicyVersionsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
  '/provisioning-templates/{templateName}/provisioning-claim':
    post:
      operationId: CreateProvisioningClaim
      description: Creates a provisioning claim.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisioningClaimResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the provisioning template to use.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /provisioning-templates:
    post:
      operationId: CreateProvisioningTemplate
      description: Creates a fleet provisioning template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - templateName
              - templateBody
              - provisioningRoleArn
            properties:
              templateName:
                description: The name of the fleet provisioning template.
                type: string
                pattern: '^[0-9A-Za-z_-]+$'
                minLength: 1
                maxLength: 36
              description:
                description: The description of the fleet provisioning template.
                type: string
                pattern: '[^\p{C}]*'
                minLength: 0
                maxLength: 500
              templateBody:
                description: The JSON formatted contents of the fleet provisioning template.
                type: string
              enabled:
                description: 'True to enable the fleet provisioning template, otherwise false.'
                type: boolean
              provisioningRoleArn:
                description: The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
                type: string
                minLength: 20
                maxLength: 2048
              tags:
                description: '<p>Metadata which can be used to manage the fleet provisioning template.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListProvisioningTemplates
      description: Lists the fleet provisioning templates in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisioningTemplatesResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token to retrieve the next set of results.
          type: string
  '/provisioning-templates/{templateName}/versions':
    post:
      operationId: CreateProvisioningTemplateVersion
      description: Creates a new version of a fleet provisioning template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateProvisioningTemplateVersionResponse'
        '480':
          description: VersionsLimitExceededException
          schema:
            $ref: '#/definitions/VersionsLimitExceededException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
        - name: setAsDefault
          in: query
          required: false
          description: Sets a fleet provision template version as the default version.
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - templateBody
            properties:
              templateBody:
                description: The JSON formatted contents of the fleet provisioning template.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListProvisioningTemplateVersions
      description: A list of fleet provisioning template versions.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListProvisioningTemplateVersionsResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token to retrieve the next set of results.
          type: string
  '/role-aliases/{roleAlias}':
    post:
      operationId: CreateRoleAlias
      description: Creates a role alias.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateRoleAliasResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias that points to a role ARN. This allows you to change the role without having to update the device.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - roleArn
            properties:
              roleArn:
                description: The role ARN.
                type: string
                minLength: 20
                maxLength: 2048
              credentialDurationSeconds:
                description: How long (in seconds) the credentials will be valid.
                type: integer
                minimum: 900
                maximum: 3600
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteRoleAlias
      description: Deletes a role alias
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRoleAliasResponse'
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias to delete.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
    get:
      operationId: DescribeRoleAlias
      description: Describes a role alias.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeRoleAliasResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias to describe.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
    put:
      operationId: UpdateRoleAlias
      description: Updates a role alias.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateRoleAliasResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: roleAlias
          in: path
          required: true
          description: The role alias to update.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              roleArn:
                description: The role ARN.
                type: string
                minLength: 20
                maxLength: 2048
              credentialDurationSeconds:
                description: The number of seconds the credential will be valid.
                type: integer
                minimum: 900
                maximum: 3600
  '/audit/scheduledaudits/{scheduledAuditName}':
    post:
      operationId: CreateScheduledAudit
      description: Creates a scheduled audit that is run at a specified time interval.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name you want to give to the scheduled audit. (Max. 128 chars)
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - frequency
              - targetCheckNames
            properties:
              frequency:
                description: 'How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is determined by the system.'
                type: string
                enum:
                  - DAILY
                  - WEEKLY
                  - BIWEEKLY
                  - MONTHLY
              dayOfMonth:
                description: 'The day of the month on which the scheduled audit takes place. Can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
                type: string
                pattern: '^([1-9]|[12][0-9]|3[01])$|^LAST$'
              dayOfWeek:
                description: 'The day of the week on which the scheduled audit takes place. Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".'
                type: string
                enum:
                  - SUN
                  - MON
                  - TUE
                  - WED
                  - THU
                  - FRI
                  - SAT
              targetCheckNames:
                description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                type: array
                items:
                  $ref: '#/definitions/AuditCheckName'
              tags:
                description: Metadata that can be used to manage the scheduled audit.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteScheduledAudit
      description: Deletes a scheduled audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name of the scheduled audit you want to delete.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
    get:
      operationId: DescribeScheduledAudit
      description: Gets information about a scheduled audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name of the scheduled audit whose information you want to get.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
    patch:
      operationId: UpdateScheduledAudit
      description: 'Updates a scheduled audit, including which checks are performed and how often the audit takes place.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateScheduledAuditResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: scheduledAuditName
          in: path
          required: true
          description: The name of the scheduled audit. (Max. 128 chars)
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              frequency:
                description: 'How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by the system.'
                type: string
                enum:
                  - DAILY
                  - WEEKLY
                  - BIWEEKLY
                  - MONTHLY
              dayOfMonth:
                description: 'The day of the month on which the scheduled audit takes place. Can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
                type: string
                pattern: '^([1-9]|[12][0-9]|3[01])$|^LAST$'
              dayOfWeek:
                description: 'The day of the week on which the scheduled audit takes place. Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".'
                type: string
                enum:
                  - SUN
                  - MON
                  - TUE
                  - WED
                  - THU
                  - FRI
                  - SAT
              targetCheckNames:
                description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                type: array
                items:
                  $ref: '#/definitions/AuditCheckName'
  '/security-profiles/{securityProfileName}':
    post:
      operationId: CreateSecurityProfile
      description: Creates a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name you are giving to the security profile.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              securityProfileDescription:
                description: A description of the security profile.
                type: string
                pattern: '[\p{Graph}\x20]*'
                maxLength: 1000
              behaviors:
                description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
                type: array
                items:
                  $ref: '#/definitions/Behavior'
                maxItems: 100
              alertTargets:
                description: Specifies the destinations to which alerts are sent. (Alerts are always sent to the console.) Alerts are generated when a device (thing) violates a behavior.
                type: object
                additionalProperties:
                  $ref: '#/definitions/AlertTarget'
              additionalMetricsToRetain:
                description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here.'
                type: array
                items:
                  $ref: '#/definitions/BehaviorMetric'
              tags:
                description: Metadata that can be used to manage the security profile.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteSecurityProfile
      description: Deletes a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name of the security profile to be deleted.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the security profile. A new version is generated whenever the security profile is updated. If you specify a value that is different from the actual version, a <code>VersionConflictException</code> is thrown.'
          type: integer
    get:
      operationId: DescribeSecurityProfile
      description: Gets information about a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name of the security profile whose information you want to get.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    patch:
      operationId: UpdateSecurityProfile
      description: Updates a Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The name of the security profile you want to update.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the security profile. A new version is generated whenever the security profile is updated. If you specify a value that is different from the actual version, a <code>VersionConflictException</code> is thrown.'
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              securityProfileDescription:
                description: A description of the security profile.
                type: string
                pattern: '[\p{Graph}\x20]*'
                maxLength: 1000
              behaviors:
                description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
                type: array
                items:
                  $ref: '#/definitions/Behavior'
                maxItems: 100
              alertTargets:
                description: Where the alerts are sent. (Alerts are always sent to the console.)
                type: object
                additionalProperties:
                  $ref: '#/definitions/AlertTarget'
              additionalMetricsToRetain:
                description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here.'
                type: array
                items:
                  $ref: '#/definitions/BehaviorMetric'
              deleteBehaviors:
                description: 'If true, delete all <code>behaviors</code> defined for this security profile. If any <code>behaviors</code> are defined in the current invocation, an exception occurs.'
                type: boolean
              deleteAlertTargets:
                description: 'If true, delete all <code>alertTargets</code> defined for this security profile. If any <code>alertTargets</code> are defined in the current invocation, an exception occurs.'
                type: boolean
              deleteAdditionalMetricsToRetain:
                description: 'If true, delete all <code>additionalMetricsToRetain</code> defined for this security profile. If any <code>additionalMetricsToRetain</code> are defined in the current invocation, an exception occurs.'
                type: boolean
  '/streams/{streamId}':
    post:
      operationId: CreateStream
      description: Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateStreamResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - files
              - roleArn
            properties:
              description:
                description: A description of the stream.
                type: string
                pattern: '[^\p{C}]+'
                maxLength: 2028
              files:
                description: The files to stream.
                type: array
                items:
                  $ref: '#/definitions/StreamFile'
                minItems: 1
                maxItems: 50
              roleArn:
                description: An IAM role that allows the IoT service principal assumes to access your S3 files.
                type: string
                minLength: 20
                maxLength: 2048
              tags:
                description: Metadata which can be used to manage streams.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteStream
      description: Deletes a stream.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteStreamResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
    get:
      operationId: DescribeStream
      description: Gets information about a stream.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeStreamResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
    put:
      operationId: UpdateStream
      description: Updates an existing stream. The stream version will be incremented by one.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateStreamResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: streamId
          in: path
          required: true
          description: The stream ID.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              description:
                description: The description of the stream.
                type: string
                pattern: '[^\p{C}]+'
                maxLength: 2028
              files:
                description: The files associated with the stream.
                type: array
                items:
                  $ref: '#/definitions/StreamFile'
                minItems: 1
                maxItems: 50
              roleArn:
                description: An IAM role that allows the IoT service principal assumes to access your S3 files.
                type: string
                minLength: 20
                maxLength: 2048
  '/things/{thingName}':
    post:
      operationId: CreateThing
      description: '<p>Creates a thing record in the registry. If this call is made multiple times using the same thing name and configuration, the call will succeed. If this call is made with the same thing name but different configuration a <code>ResourceAlreadyExistsException</code> is thrown.</p> <note> <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/authorization.html">Authorization</a> for information about authorizing control plane actions.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing to create.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              thingTypeName:
                description: The name of the thing type associated with the new thing.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              attributePayload:
                description: The attribute payload.
                type: object
                properties:
                  attributes:
                    $ref: '#/definitions/Attributes'
                    description: '<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
                  merge:
                    $ref: '#/definitions/Flag'
                    description: '<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p> </note>'
              billingGroupName:
                description: The name of the billing group the thing will be added to.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThing
      description: Deletes the specified thing. Returns successfully with no error if the deletion is successful or you specify a thing that doesn't exist.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing to delete.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: 'The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.'
          type: integer
    get:
      operationId: DescribeThing
      description: Gets information about the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    patch:
      operationId: UpdateThing
      description: Updates the data for a thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing to update.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              thingTypeName:
                description: The name of the thing type.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              attributePayload:
                description: The attribute payload.
                type: object
                properties:
                  attributes:
                    $ref: '#/definitions/Attributes'
                    description: '<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
                  merge:
                    $ref: '#/definitions/Flag'
                    description: '<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p> </note>'
              expectedVersion:
                description: 'The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.'
                type: integer
              removeThingType:
                description: 'Remove a thing type association. If <b>true</b>, the association is removed.'
                type: boolean
  '/thing-groups/{thingGroupName}':
    post:
      operationId: CreateThingGroup
      description: '<p>Create a thing group.</p> <note> <p>This is a control plane operation. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/authorization.html">Authorization</a> for information about authorizing control plane actions.</p> </note>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The thing group name to create.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              parentGroupName:
                description: The name of the parent thing group.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingGroupProperties:
                description: Thing group properties.
                type: object
                properties:
                  thingGroupDescription:
                    $ref: '#/definitions/ThingGroupDescription'
                    description: The thing group description.
                  attributePayload:
                    $ref: '#/definitions/AttributePayload'
                    description: The thing group attributes in JSON format.
              tags:
                description: Metadata which can be used to manage the thing group.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThingGroup
      description: Deletes a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the thing group to delete.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: expectedVersion
          in: query
          required: false
          description: The expected version of the thing group to delete.
          type: integer
    get:
      operationId: DescribeThingGroup
      description: Describe a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The name of the thing group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    patch:
      operationId: UpdateThingGroup
      description: Update a thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: VersionConflictException
          schema:
            $ref: '#/definitions/VersionConflictException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The thing group to update.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - thingGroupProperties
            properties:
              thingGroupProperties:
                description: Thing group properties.
                type: object
                properties:
                  thingGroupDescription:
                    $ref: '#/definitions/ThingGroupDescription'
                    description: The thing group description.
                  attributePayload:
                    $ref: '#/definitions/AttributePayload'
                    description: The thing group attributes in JSON format.
              expectedVersion:
                description: 'The expected version of the thing group. If this does not match the version of the thing group being updated, the update will fail.'
                type: integer
  '/thing-types/{thingTypeName}':
    post:
      operationId: CreateThingType
      description: Creates a new thing type.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateThingTypeResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              thingTypeProperties:
                description: 'The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.'
                type: object
                properties:
                  thingTypeDescription:
                    $ref: '#/definitions/ThingTypeDescription'
                    description: The description of the thing type.
                  searchableAttributes:
                    $ref: '#/definitions/SearchableAttributes'
                    description: A list of searchable thing attribute names.
              tags:
                description: Metadata which can be used to manage the thing type.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteThingType
      description: 'Deletes the specified thing type. You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a> to change the thing type on any associated thing, and finally use <a>DeleteThingType</a> to delete the thing type.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    get:
      operationId: DescribeThingType
      description: Gets information about the specified thing type.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
  '/rules/{ruleName}':
    post:
      operationId: CreateTopicRule
      description: Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
      responses:
        '200':
          description: Success
        '480':
          description: SqlParseException
          schema:
            $ref: '#/definitions/SqlParseException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          type: string
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 1
          maxLength: 128
        - name: x-amz-tagging
          in: header
          required: false
          description: '<p>Metadata which can be used to manage the topic rule.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: --tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - topicRulePayload
            properties:
              topicRulePayload:
                description: Describes a rule.
                type: object
                properties:
                  sql:
                    $ref: '#/definitions/SQL'
                    description: 'The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.'
                  description:
                    $ref: '#/definitions/Description'
                    description: The description of the rule.
                  actions:
                    $ref: '#/definitions/ActionList'
                    description: The actions associated with the rule.
                  ruleDisabled:
                    $ref: '#/definitions/IsDisabled'
                    description: Specifies whether the rule is disabled.
                  awsIotSqlVersion:
                    $ref: '#/definitions/AwsIotSqlVersion'
                    description: The version of the SQL rules engine to use when evaluating the rule.
                  errorAction:
                    $ref: '#/definitions/Action'
                    description: The action to take when an error occurs.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    delete:
      operationId: DeleteTopicRule
      description: Deletes the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          type: string
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 1
          maxLength: 128
    get:
      operationId: GetTopicRule
      description: Gets information about the rule.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTopicRuleResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          type: string
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 1
          maxLength: 128
    patch:
      operationId: ReplaceTopicRule
      description: Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.
      responses:
        '200':
          description: Success
        '480':
          description: SqlParseException
          schema:
            $ref: '#/definitions/SqlParseException'
        '481':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule.
          type: string
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - topicRulePayload
            properties:
              topicRulePayload:
                description: Describes a rule.
                type: object
                properties:
                  sql:
                    $ref: '#/definitions/SQL'
                    description: 'The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.'
                  description:
                    $ref: '#/definitions/Description'
                    description: The description of the rule.
                  actions:
                    $ref: '#/definitions/ActionList'
                    description: The actions associated with the rule.
                  ruleDisabled:
                    $ref: '#/definitions/IsDisabled'
                    description: Specifies whether the rule is disabled.
                  awsIotSqlVersion:
                    $ref: '#/definitions/AwsIotSqlVersion'
                    description: The version of the SQL rules engine to use when evaluating the rule.
                  errorAction:
                    $ref: '#/definitions/Action'
                    description: The action to take when an error occurs.
  /destinations:
    post:
      operationId: CreateTopicRuleDestination
      description: Creates a topic rule destination. The destination must be confirmed prior to use.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTopicRuleDestinationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - destinationConfiguration
            properties:
              destinationConfiguration:
                description: Configuration of the topic rule destination.
                type: object
                properties:
                  httpUrlConfiguration:
                    $ref: '#/definitions/HttpUrlDestinationConfiguration'
                    description: Configuration of the HTTP URL.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: ListTopicRuleDestinations
      description: Lists all the topic rule destinations in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTopicRuleDestinationsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 1000
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
    patch:
      operationId: UpdateTopicRuleDestination
      description: 'Updates a topic rule destination. You use this to change the status, endpoint URL, or confirmation URL of the destination.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateTopicRuleDestinationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - arn
              - status
            properties:
              arn:
                description: The ARN of the topic rule destination.
                type: string
              status:
                description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
                type: string
                enum:
                  - ENABLED
                  - IN_PROGRESS
                  - DISABLED
                  - ERROR
  /audit/configuration:
    delete:
      operationId: DeleteAccountAuditConfiguration
      description: 'Restores the default settings for Device Defender audits for this account. Any configuration data you entered is deleted and all audit checks are reset to disabled. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAccountAuditConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: deleteScheduledAudits
          in: query
          required: false
          description: 'If true, all scheduled audits are deleted.'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeAccountAuditConfiguration
      description: Gets information about the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAccountAuditConfigurationResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters: []
    patch:
      operationId: UpdateAccountAuditConfiguration
      description: Configures or reconfigures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateAccountAuditConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              roleArn:
                description: 'The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.'
                type: string
                minLength: 20
                maxLength: 2048
              auditNotificationTargetConfigurations:
                description: Information about the targets to which audit notifications are sent.
                type: object
                additionalProperties:
                  $ref: '#/definitions/AuditNotificationTarget'
              auditCheckConfigurations:
                description: '<p>Specifies which audit checks are enabled and disabled for this account. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are currently enabled.</p> <p>Some data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted.</p> <p>You cannot disable a check if it is used by any scheduled audit. You must first delete the check from the scheduled audit or delete the scheduled audit itself.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required and must specify at least one enabled check.</p>'
                type: object
                additionalProperties:
                  $ref: '#/definitions/AuditCheckConfiguration'
  '/cacertificate/{caCertificateId}':
    delete:
      operationId: DeleteCACertificate
      description: Deletes a registered CA certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteCACertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The ID of the certificate to delete. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCACertificate
      description: Describes a registered CA certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCACertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The CA certificate identifier.
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
    put:
      operationId: UpdateCACertificate
      description: Updates a registered CA certificate.
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The CA certificate identifier.
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
        - name: newStatus
          in: query
          required: false
          description: '<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>'
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        - name: newAutoRegistrationStatus
          in: query
          required: false
          description: 'The new value for the auto registration status. Valid values are: "ENABLE" or "DISABLE".'
          type: string
          enum:
            - ENABLE
            - DISABLE
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              registrationConfig:
                description: The registration configuration.
                type: object
                properties:
                  templateBody:
                    $ref: '#/definitions/TemplateBody'
                    description: The template body.
                  roleArn:
                    $ref: '#/definitions/RoleArn'
                    description: The ARN of the role.
              removeAutoRegistration:
                description: 'If true, removes auto registration.'
                type: boolean
  '/certificates/{certificateId}':
    delete:
      operationId: DeleteCertificate
      description: '<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy or IoT thing attached to it or if its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPrincipalPolicy</a> API to detach all policies. Next, use the <a>UpdateCertificate</a> API to set the certificate to the INACTIVE status.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '481':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '487':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
        - name: forceDelete
          in: query
          required: false
          description: Forces the deletion of a certificate if it is inactive and is not attached to an IoT thing.
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeCertificate
      description: Gets information about the specified certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeCertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
  '/things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}':
    delete:
      operationId: DeleteJobExecution
      description: Deletes a job execution.
      responses:
        '200':
          description: Success
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InvalidStateTransitionException
          schema:
            $ref: '#/definitions/InvalidStateTransitionException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The ID of the job whose execution on a particular device will be deleted.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: thingName
          in: path
          required: true
          description: The name of the thing whose job execution will be deleted.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: executionNumber
          in: path
          required: true
          description: '<p>The ID of the job execution to be deleted. The <code>executionNumber</code> refers to the execution of a particular job on a particular device.</p> <p>Note that once a job execution is deleted, the <code>executionNumber</code> may be reused by IoT, so be sure you get and use the correct value here.</p>'
          type: integer
        - name: force
          in: query
          required: false
          description: '<p>(Optional) When true, you can delete a job execution which is "IN_PROGRESS". Otherwise, you can only delete a job execution which is in a terminal state ("SUCCEEDED", "FAILED", "REJECTED", "REMOVED" or "CANCELED") or an exception will occur. The default is false.</p> <note> <p>Deleting a job execution which is "IN_PROGRESS", will cause the device to be unable to access job information or update the job execution status. Use caution and ensure that the device is able to recover to a valid state.</p> </note>'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/policies/{policyName}/version/{policyVersionId}':
    delete:
      operationId: DeletePolicyVersion
      description: 'Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this API. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use ListPolicyVersions.'
      responses:
        '200':
          description: Success
        '480':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: policyVersionId
          in: path
          required: true
          description: The policy version ID.
          type: string
          pattern: '[0-9]+'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetPolicyVersion
      description: Gets information about the specified policy version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPolicyVersionResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The name of the policy.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: policyVersionId
          in: path
          required: true
          description: The policy version ID.
          type: string
          pattern: '[0-9]+'
    patch:
      operationId: SetDefaultPolicyVersion
      description: 'Sets the specified version of the specified policy as the policy''s default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the ListPrincipalPolicy API.'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: policyVersionId
          in: path
          required: true
          description: The policy version ID.
          type: string
          pattern: '[0-9]+'
  '/provisioning-templates/{templateName}':
    delete:
      operationId: DeleteProvisioningTemplate
      description: Deletes a fleet provisioning template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provision template to delete.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeProvisioningTemplate
      description: Returns information about a fleet provisioning template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
    patch:
      operationId: UpdateProvisioningTemplate
      description: Updates a fleet provisioning template.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateProvisioningTemplateResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              description:
                description: The description of the fleet provisioning template.
                type: string
                pattern: '[^\p{C}]*'
                minLength: 0
                maxLength: 500
              enabled:
                description: 'True to enable the fleet provisioning template, otherwise false.'
                type: boolean
              defaultVersionId:
                description: The ID of the default provisioning template version.
                type: integer
              provisioningRoleArn:
                description: The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.
                type: string
                minLength: 20
                maxLength: 2048
  '/provisioning-templates/{templateName}/versions/{versionId}':
    delete:
      operationId: DeleteProvisioningTemplateVersion
      description: Deletes a fleet provisioning template version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteProvisioningTemplateVersionResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: DeleteConflictException
          schema:
            $ref: '#/definitions/DeleteConflictException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The name of the fleet provisioning template version to delete.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
        - name: versionId
          in: path
          required: true
          description: The fleet provisioning template version ID to delete.
          type: integer
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: DescribeProvisioningTemplateVersion
      description: Returns information about a fleet provisioning template version.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeProvisioningTemplateVersionResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: templateName
          in: path
          required: true
          description: The template name.
          type: string
          pattern: '^[0-9A-Za-z_-]+$'
          minLength: 1
          maxLength: 36
        - name: versionId
          in: path
          required: true
          description: The fleet provisioning template version ID.
          type: integer
  /registrationcode:
    delete:
      operationId: DeleteRegistrationCode
      description: Deletes a CA certificate registration code.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteRegistrationCodeResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters: []
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetRegistrationCode
      description: Gets a registration code used to register a CA certificate with AWS IoT.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetRegistrationCodeResponse'
        '480':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '481':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
      parameters: []
  '/destinations/{arn}':
    delete:
      operationId: DeleteTopicRuleDestination
      description: Deletes a topic rule destination.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteTopicRuleDestinationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: arn
          in: path
          required: true
          description: The ARN of the topic rule destination to delete.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    get:
      operationId: GetTopicRuleDestination
      description: Gets information about a topic rule destination.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTopicRuleDestinationResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
      parameters:
        - name: arn
          in: path
          required: true
          description: The ARN of the topic rule destination.
          type: string
  '/v2LoggingLevel#targetType&targetName':
    delete:
      operationId: DeleteV2LoggingLevel
      description: Deletes a logging level.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: targetType
          in: query
          required: true
          description: The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.
          type: string
          enum:
            - DEFAULT
            - THING_GROUP
        - name: targetName
          in: query
          required: true
          description: The name of the resource for which you are configuring logging.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-types/{thingTypeName}/deprecate':
    post:
      operationId: DeprecateThingType
      description: Deprecates a thing type. You can not associate new things with deprecated thing type.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeprecateThingTypeResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingTypeName
          in: path
          required: true
          description: The name of the thing type to deprecate.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              undoDeprecate:
                description: 'Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.'
                type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/audit/findings/{findingId}':
    get:
      operationId: DescribeAuditFinding
      description: 'Gets information about a single audit finding. Properties include the reason for noncompliance, the severity of the issue, and when the audit that returned the finding was started.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAuditFindingResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: findingId
          in: path
          required: true
          description: A unique identifier for a single audit finding. You can use this identifier to apply mitigation actions to the finding.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/audit/mitigationactions/tasks/{taskId}':
    get:
      operationId: DescribeAuditMitigationActionsTask
      description: 'Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings. Properties include the actions being applied, the audit checks to which they''re being applied, the task status, and aggregated task statistics.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAuditMitigationActionsTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The unique identifier for the audit mitigation task.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartAuditMitigationActionsTask
      description: Starts a task that applies a set of mitigation actions to the specified target.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartAuditMitigationActionsTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: TaskAlreadyExistsException
          schema:
            $ref: '#/definitions/TaskAlreadyExistsException'
        '482':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: A unique identifier for the task. You can use this identifier to check the status of the task or to cancel it.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - target
              - auditCheckToActionsMapping
              - clientRequestToken
            properties:
              target:
                description: 'Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.'
                type: object
                properties:
                  auditTaskId:
                    $ref: '#/definitions/AuditTaskId'
                    description: 'If the task will apply a mitigation action to findings from a specific audit, this value uniquely identifies the audit.'
                  findingIds:
                    $ref: '#/definitions/FindingIds'
                    description: 'If the task will apply a mitigation action to one or more listed findings, this value uniquely identifies those findings.'
                  auditCheckToReasonCodeFilter:
                    $ref: '#/definitions/AuditCheckToReasonCodeFilter'
                    description: Specifies a filter in the form of an audit check and set of reason codes that identify the findings from the audit to which the audit mitigation actions task apply.
              auditCheckToActionsMapping:
                description: 'For an audit check, specifies which mitigation actions to apply. Those actions must be defined in your AWS account.'
                type: object
                additionalProperties:
                  $ref: '#/definitions/MitigationActionNameList'
              clientRequestToken:
                description: 'Each audit mitigation task must have a unique client request token. If you try to start a new task with the same token as a task that already exists, an exception occurs. If you omit this value, a unique client request token is generated automatically.'
                type: string
                pattern: '^[a-zA-Z0-9-_]+$'
                minLength: 1
                maxLength: 64
  '/audit/tasks/{taskId}':
    get:
      operationId: DescribeAuditTask
      description: Gets information about a Device Defender audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeAuditTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The ID of the audit whose information you want to get.
          type: string
          pattern: '[a-zA-Z0-9\-]+'
          minLength: 1
          maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /endpoint:
    get:
      operationId: DescribeEndpoint
      description: Returns a unique endpoint specific to the AWS account making the call.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEndpointResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: endpointType
          in: query
          required: false
          description: '<p>The endpoint type. Valid endpoint types include:</p> <ul> <li> <p> <code>iot:Data</code> - Returns a VeriSign signed data endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:Data-ATS</code> - Returns an ATS signed data endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:CredentialProvider</code> - Returns an AWS IoT credentials provider API endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:Jobs</code> - Returns an AWS IoT device management Jobs API endpoint.</p> </li> </ul>'
          type: string
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /event-configurations:
    get:
      operationId: DescribeEventConfigurations
      description: Describes event configurations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeEventConfigurationsResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters: []
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    patch:
      operationId: UpdateEventConfigurations
      description: Updates the event configurations.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateEventConfigurationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              eventConfigurations:
                description: The new event configuration values.
                type: object
                additionalProperties:
                  $ref: '#/definitions/Configuration'
  '/indices/{indexName}':
    get:
      operationId: DescribeIndex
      description: Describes a search index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeIndexResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: indexName
          in: path
          required: true
          description: The index name.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs/{jobId}':
    get:
      operationId: DescribeJobExecution
      description: Describes a job execution.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeJobExecutionResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: thingName
          in: path
          required: true
          description: The name of the thing on which the job execution is running.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: executionNumber
          in: query
          required: false
          description: A string (consisting of the digits "0" through "9" which is used to specify a particular job execution on a particular device.
          type: integer
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}':
    get:
      operationId: DescribeThingRegistrationTask
      description: Describes a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The task ID.
          type: string
          maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/rules/{ruleName}/disable':
    post:
      operationId: DisableTopicRule
      description: Disables the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the rule to disable.
          type: string
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/rules/{ruleName}/enable':
    post:
      operationId: EnableTopicRule
      description: Enables the rule.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
      parameters:
        - name: ruleName
          in: path
          required: true
          description: The name of the topic rule to enable.
          type: string
          pattern: '^[a-zA-Z0-9_]+$'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indices/cardinality:
    post:
      operationId: GetCardinality
      description: Returns the approximate count of unique values that match the query.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetCardinalityResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          schema:
            $ref: '#/definitions/InvalidQueryException'
        '487':
          description: InvalidAggregationException
          schema:
            $ref: '#/definitions/InvalidAggregationException'
        '488':
          description: IndexNotReadyException
          schema:
            $ref: '#/definitions/IndexNotReadyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - queryString
            properties:
              indexName:
                description: The name of the index to search.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              queryString:
                description: The search query.
                type: string
                minLength: 1
              aggregationField:
                description: The field to aggregate.
                type: string
                minLength: 1
              queryVersion:
                description: The query version.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /effective-policies:
    post:
      operationId: GetEffectivePolicies
      description: Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetEffectivePoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: thingName
          in: query
          required: false
          description: The thing name.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              principal:
                description: The principal.
                type: string
              cognitoIdentityPoolId:
                description: The Cognito identity pool ID.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indexing/config:
    get:
      operationId: GetIndexingConfiguration
      description: Gets the indexing configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetIndexingConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters: []
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateIndexingConfiguration
      description: Updates the search configuration.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateIndexingConfigurationResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - thingIndexingConfiguration
              - thingGroupIndexingConfiguration
            properties:
              thingIndexingConfiguration:
                description: 'The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing Thing Indexing</a>.'
                type: object
                properties:
                  thingIndexingMode:
                    $ref: '#/definitions/ThingIndexingMode'
                    description: '<p>Thing indexing mode. Valid values are:</p> <ul> <li> <p>REGISTRY – Your thing index contains registry data only.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry and shadow data.</p> </li> <li> <p>OFF - Thing indexing is disabled.</p> </li> </ul>'
                  thingConnectivityIndexingMode:
                    $ref: '#/definitions/ThingConnectivityIndexingMode'
                    description: '<p>Thing connectivity indexing mode. Valid values are: </p> <ul> <li> <p>STATUS – Your thing index contains connectivity status. To enable thing connectivity indexing, thingIndexMode must not be set to OFF.</p> </li> <li> <p>OFF - Thing connectivity status indexing is disabled.</p> </li> </ul>'
                  managedFields:
                    $ref: '#/definitions/Fields'
                    description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
                  customFields:
                    $ref: '#/definitions/Fields'
                    description: Contains custom field names and their data type.
              thingGroupIndexingConfiguration:
                description: Thing group indexing configuration.
                type: object
                properties:
                  thingGroupIndexingMode:
                    $ref: '#/definitions/ThingGroupIndexingMode'
                    description: Thing group indexing mode.
                  managedFields:
                    $ref: '#/definitions/Fields'
                    description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
                  customFields:
                    $ref: '#/definitions/Fields'
                    description: <p>A list of thing group fields to index. This list cannot contain any managed fields. Use the GetIndexingConfiguration API to get a list of managed fields.</p> <p>Contains custom field names and their data type.</p>
  '/jobs/{jobId}/job-document':
    get:
      operationId: GetJobDocument
      description: Gets a job document.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetJobDocumentResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /loggingOptions:
    get:
      operationId: GetLoggingOptions
      description: '<p>Gets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code> instead.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetLoggingOptionsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters: []
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetLoggingOptions
      description: '<p>Sets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code> instead.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - loggingOptionsPayload
            properties:
              loggingOptionsPayload:
                description: Describes the logging options payload.
                type: object
                properties:
                  roleArn:
                    $ref: '#/definitions/AwsArn'
                    description: The ARN of the IAM role that grants access.
                  logLevel:
                    $ref: '#/definitions/LogLevel'
                    description: The log level.
  /indices/percentiles:
    post:
      operationId: GetPercentiles
      description: 'Groups the aggregated values that match the query into percentile groupings. The default percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own when you call <code>GetPercentiles</code>. This function returns a value for each percentile group specified (or the default percentile groupings). The percentile group "1" contains the aggregated field value that occurs in approximately one percent of the values that match the query. The percentile group "5" contains the aggregated field value that occurs in approximately five percent of the values that match the query, and so on. The result is an approximation, the more values that match the query, the more accurate the percentile values.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetPercentilesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          schema:
            $ref: '#/definitions/InvalidQueryException'
        '487':
          description: InvalidAggregationException
          schema:
            $ref: '#/definitions/InvalidAggregationException'
        '488':
          description: IndexNotReadyException
          schema:
            $ref: '#/definitions/IndexNotReadyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - queryString
            properties:
              indexName:
                description: The name of the index to search.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              queryString:
                description: The query string.
                type: string
                minLength: 1
              aggregationField:
                description: The field to aggregate.
                type: string
                minLength: 1
              queryVersion:
                description: The query version.
                type: string
              percents:
                description: The percentile groups returned.
                type: array
                items:
                  $ref: '#/definitions/Percent'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indices/statistics:
    post:
      operationId: GetStatistics
      description: 'Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard deviation for the specified aggregated field. If the aggregation field is of type <code>String</code>, only the count statistic is returned.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetStatisticsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          schema:
            $ref: '#/definitions/InvalidQueryException'
        '487':
          description: InvalidAggregationException
          schema:
            $ref: '#/definitions/InvalidAggregationException'
        '488':
          description: IndexNotReadyException
          schema:
            $ref: '#/definitions/IndexNotReadyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - queryString
            properties:
              indexName:
                description: The name of the index to search. The default value is <code>AWS_Things</code>.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              queryString:
                description: The query used to search. You can specify "*" for the query string to get the count of all indexed things in your AWS account.
                type: string
                minLength: 1
              aggregationField:
                description: The aggregation field name.
                type: string
                minLength: 1
              queryVersion:
                description: The version of the query used to search.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v2LoggingOptions:
    get:
      operationId: GetV2LoggingOptions
      description: Gets the fine grained logging options.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetV2LoggingOptionsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: NotConfiguredException
          schema:
            $ref: '#/definitions/NotConfiguredException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters: []
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetV2LoggingOptions
      description: Sets the logging options for the V2 logging service.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              roleArn:
                description: The ARN of the role that allows IoT to write to Cloudwatch logs.
                type: string
              defaultLogLevel:
                description: The default logging level.
                type: string
                enum:
                  - DEBUG
                  - INFO
                  - ERROR
                  - WARN
                  - DISABLED
              disableAllLogs:
                description: If true all logs are disabled. The default is false.
                type: boolean
  /active-violations:
    get:
      operationId: ListActiveViolations
      description: Lists the active violations for a given Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListActiveViolationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: thingName
          in: query
          required: false
          description: The name of the thing whose active violations are listed.
          type: string
          minLength: 1
          maxLength: 128
        - name: securityProfileName
          in: query
          required: false
          description: The name of the Device Defender security profile for which violations are listed.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/attached-policies/{target}':
    post:
      operationId: ListAttachedPolicies
      description: Lists the policies attached to the specified thing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAttachedPoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: target
          in: path
          required: true
          description: The group or principal for which the policies will be listed.
          type: string
        - name: recursive
          in: query
          required: false
          description: 'When true, recursively list attached policies.'
          type: boolean
        - name: marker
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /audit/findings:
    post:
      operationId: ListAuditFindings
      description: Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period. (Findings are retained for 180 days.)
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuditFindingsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              taskId:
                description: 'A filter to limit results to the audit with the specified ID. You must specify either the taskId or the startTime and endTime, but not both.'
                type: string
                pattern: '[a-zA-Z0-9\-]+'
                minLength: 1
                maxLength: 40
              checkName:
                description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
                type: string
              resourceIdentifier:
                description: Information that identifies the noncompliant resource.
                type: object
                properties:
                  deviceCertificateId:
                    $ref: '#/definitions/CertificateId'
                    description: The ID of the certificate attached to the resource.
                  caCertificateId:
                    $ref: '#/definitions/CertificateId'
                    description: The ID of the CA certificate used to authorize the certificate.
                  cognitoIdentityPoolId:
                    $ref: '#/definitions/CognitoIdentityPoolId'
                    description: The ID of the Amazon Cognito identity pool.
                  clientId:
                    $ref: '#/definitions/ClientId'
                    description: The client ID.
                  policyVersionIdentifier:
                    $ref: '#/definitions/PolicyVersionIdentifier'
                    description: The version of the policy associated with the resource.
                  account:
                    $ref: '#/definitions/AwsAccountId'
                    description: The account with which the resource is associated.
                  iamRoleArn:
                    $ref: '#/definitions/RoleArn'
                    description: The ARN of the IAM role that has overly permissive actions.
                  roleAliasArn:
                    $ref: '#/definitions/RoleAliasArn'
                    description: The ARN of the role alias that has overly permissive actions.
              maxResults:
                description: The maximum number of results to return at one time. The default is 25.
                type: integer
                minimum: 1
                maximum: 250
              nextToken:
                description: The token for the next set of results.
                type: string
              startTime:
                description: 'A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
                type: string
                format: date-time
              endTime:
                description: 'A filter to limit results to those found before the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
                type: string
                format: date-time
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/audit/mitigationactions/executions#taskId&findingId':
    get:
      operationId: ListAuditMitigationActionsExecutions
      description: Gets the status of audit mitigation action tasks that were executed.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuditMitigationActionsExecutionsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: taskId
          in: query
          required: true
          description: Specify this filter to limit results to actions for a specific audit mitigation actions task.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: actionStatus
          in: query
          required: false
          description: Specify this filter to limit results to those with a specific status.
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
            - SKIPPED
            - PENDING
        - name: findingId
          in: query
          required: true
          description: Specify this filter to limit results to those that were applied to a specific audit finding.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/audit/mitigationactions/tasks#startTime&endTime':
    get:
      operationId: ListAuditMitigationActionsTasks
      description: Gets a list of audit mitigation action tasks that match the specified filters.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuditMitigationActionsTasksResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: auditTaskId
          in: query
          required: false
          description: Specify this filter to limit results to tasks that were applied to results for a specific audit.
          type: string
          pattern: '[a-zA-Z0-9\-]+'
          minLength: 1
          maxLength: 40
        - name: findingId
          in: query
          required: false
          description: Specify this filter to limit results to tasks that were applied to a specific audit finding.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 128
        - name: taskStatus
          in: query
          required: false
          description: Specify this filter to limit results to tasks that are in a specific state.
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: startTime
          in: query
          required: true
          description: Specify this filter to limit results to tasks that began on or after a specific date and time.
          type: string
          format: date-time
        - name: endTime
          in: query
          required: true
          description: Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.
          type: string
          format: date-time
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/audit/tasks#startTime&endTime':
    get:
      operationId: ListAuditTasks
      description: Lists the Device Defender audits that have been performed during a given time period.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuditTasksResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: startTime
          in: query
          required: true
          description: The beginning of the time period. Audit information is retained for a limited time (180 days). Requesting a start time prior to what is retained results in an "InvalidRequestException".
          type: string
          format: date-time
        - name: endTime
          in: query
          required: true
          description: The end of the time period.
          type: string
          format: date-time
        - name: taskType
          in: query
          required: false
          description: 'A filter to limit the output to the specified type of audit: can be one of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED__AUDIT_TASK".'
          type: string
          enum:
            - ON_DEMAND_AUDIT_TASK
            - SCHEDULED_AUDIT_TASK
        - name: taskStatus
          in: query
          required: false
          description: 'A filter to limit the output to audits with the specified completion status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".'
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - CANCELED
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /authorizers/:
    get:
      operationId: ListAuthorizers
      description: Lists the authorizers registered in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAuthorizersResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: marker
          in: query
          required: false
          description: A marker used to get the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: isAscendingOrder
          in: query
          required: false
          description: Return the list of authorizers in ascending alphabetical order.
          type: boolean
        - name: status
          in: query
          required: false
          description: The status of the list authorizers request.
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /billing-groups:
    get:
      operationId: ListBillingGroups
      description: Lists the billing groups you have created.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListBillingGroupsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          type: integer
          minimum: 1
          maximum: 250
        - name: namePrefixFilter
          in: query
          required: false
          description: Limit the results to billing groups whose names have the given prefix.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /cacertificates:
    get:
      operationId: ListCACertificates
      description: <p>Lists the CA certificates registered for your AWS account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCACertificatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: isAscendingOrder
          in: query
          required: false
          description: Determines the order of the results.
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/certificates-by-ca/{caCertificateId}':
    get:
      operationId: ListCertificatesByCA
      description: List the device certificates signed by the specified CA certificate.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListCertificatesByCAResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: caCertificateId
          in: path
          required: true
          description: The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /domainConfigurations:
    get:
      operationId: ListDomainConfigurations
      description: <p>Gets a list of domain configurations for the user. This list is sorted alphabetically by domain configuration name.</p> <note> <p>The domain configuration feature is in public preview and is subject to change.</p> </note>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListDomainConfigurationsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: serviceType
          in: query
          required: false
          description: The type of service delivered by the endpoint.
          type: string
          enum:
            - DATA
            - CREDENTIAL_PROVIDER
            - JOBS
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indices:
    get:
      operationId: ListIndices
      description: Lists the search indices.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListIndicesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 500
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/jobs/{jobId}/things':
    get:
      operationId: ListJobExecutionsForJob
      description: Lists the job executions for a job.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobExecutionsForJobResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: jobId
          in: path
          required: true
          description: The unique identifier you assigned to this job when it was created.
          type: string
          pattern: '[a-zA-Z0-9_-]+'
          minLength: 1
          maxLength: 64
        - name: status
          in: query
          required: false
          description: The status of the job.
          type: string
          enum:
            - QUEUED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - TIMED_OUT
            - REJECTED
            - REMOVED
            - CANCELED
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/jobs':
    get:
      operationId: ListJobExecutionsForThing
      description: Lists the job executions for the specified thing.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobExecutionsForThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The thing name.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: status
          in: query
          required: false
          description: An optional filter that lets you search for jobs that have the specified status.
          type: string
          enum:
            - QUEUED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - TIMED_OUT
            - REJECTED
            - REMOVED
            - CANCELED
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /jobs:
    get:
      operationId: ListJobs
      description: Lists jobs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListJobsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: status
          in: query
          required: false
          description: An optional filter that lets you search for jobs that have the specified status.
          type: string
          enum:
            - IN_PROGRESS
            - CANCELED
            - COMPLETED
            - DELETION_IN_PROGRESS
        - name: targetSelection
          in: query
          required: false
          description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group. '
          type: string
          enum:
            - CONTINUOUS
            - SNAPSHOT
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: thingGroupName
          in: query
          required: false
          description: A filter that limits the returned jobs to those for the specified group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: thingGroupId
          in: query
          required: false
          description: A filter that limits the returned jobs to those for the specified group.
          type: string
          pattern: '[a-zA-Z0-9\-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /mitigationactions/actions:
    get:
      operationId: ListMitigationActions
      description: Gets a list of all mitigation actions that match the specified filter criteria.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListMitigationActionsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: actionType
          in: query
          required: false
          description: Specify a value to limit the result to mitigation actions with a specific action type.
          type: string
          enum:
            - UPDATE_DEVICE_CERTIFICATE
            - UPDATE_CA_CERTIFICATE
            - ADD_THINGS_TO_THING_GROUP
            - REPLACE_DEFAULT_POLICY_VERSION
            - ENABLE_IOT_LOGGING
            - PUBLISH_FINDING_TO_SNS
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /otaUpdates:
    get:
      operationId: ListOTAUpdates
      description: Lists OTA updates.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOTAUpdatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token used to retrieve the next set of results.
          type: string
        - name: otaUpdateStatus
          in: query
          required: false
          description: The OTA update job status.
          type: string
          enum:
            - CREATE_PENDING
            - CREATE_IN_PROGRESS
            - CREATE_COMPLETE
            - CREATE_FAILED
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /certificates-out-going:
    get:
      operationId: ListOutgoingCertificates
      description: Lists certificates that are being transferred but not yet accepted.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOutgoingCertificatesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /policies:
    get:
      operationId: ListPolicies
      description: Lists your policies.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPoliciesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If true, the results are returned in ascending creation order.'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/policy-principals#x-amzn-iot-policy':
    get:
      deprecated: true
      operationId: ListPolicyPrincipals
      description: '<p>Lists the principals associated with the specified policy.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>ListTargetsForPolicy</a> instead.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPolicyPrincipalsResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: x-amzn-iot-policy
          in: header
          required: true
          description: The policy name.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If true, the results are returned in ascending creation order.'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/principal-policies#x-amzn-iot-principal':
    get:
      deprecated: true
      operationId: ListPrincipalPolicies
      description: '<p>Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in <a href="https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax">AmazonCognito Identity format</a>.</p> <p> <b>Note:</b> This API is deprecated. Please use <a>ListAttachedPolicies</a> instead.</p>'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalPoliciesResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: x-amzn-iot-principal
          in: header
          required: true
          description: The principal.
          type: string
        - name: marker
          in: query
          required: false
          description: The marker for the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: pageSize
          in: query
          required: false
          description: The result page size.
          type: integer
          minimum: 1
          maximum: 250
        - name: isAscendingOrder
          in: query
          required: false
          description: 'Specifies the order for results. If true, results are returned in ascending creation order.'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/principals/things#x-amzn-principal':
    get:
      operationId: ListPrincipalThings
      description: 'Lists the things associated with the specified principal. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListPrincipalThingsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          type: integer
          minimum: 1
          maximum: 250
        - name: x-amzn-principal
          in: header
          required: true
          description: The principal.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /role-aliases:
    get:
      operationId: ListRoleAliases
      description: Lists the role aliases registered in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListRoleAliasesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: marker
          in: query
          required: false
          description: A marker used to get the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: isAscendingOrder
          in: query
          required: false
          description: Return the list of role aliases in ascending alphabetical order.
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /audit/scheduledaudits:
    get:
      operationId: ListScheduledAudits
      description: Lists all of your scheduled audits.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListScheduledAuditsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time. The default is 25.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /security-profiles:
    get:
      operationId: ListSecurityProfiles
      description: Lists the Device Defender security profiles you have created. You can use filters to list only those security profiles associated with a thing group or only those associated with your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSecurityProfilesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/security-profiles-for-target#securityProfileTargetArn':
    get:
      operationId: ListSecurityProfilesForTarget
      description: Lists the Device Defender security profiles attached to a target (thing group).
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListSecurityProfilesForTargetResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: recursive
          in: query
          required: false
          description: 'If true, return child groups too.'
          type: boolean
        - name: securityProfileTargetArn
          in: query
          required: true
          description: The ARN of the target (thing group) whose attached security profiles you want to get.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /streams:
    get:
      operationId: ListStreams
      description: Lists all of the streams in your AWS account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListStreamsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at a time.
          type: integer
          minimum: 1
          maximum: 250
        - name: nextToken
          in: query
          required: false
          description: A token used to get the next set of results.
          type: string
        - name: isAscendingOrder
          in: query
          required: false
          description: Set to true to return the list of streams in ascending order.
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/tags#resourceArn':
    get:
      operationId: ListTagsForResource
      description: Lists the tags (metadata) you have assigned to the resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTagsForResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource.
          type: string
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/policy-targets/{policyName}':
    post:
      operationId: ListTargetsForPolicy
      description: List targets for the specified policy.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTargetsForPolicyResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: policyName
          in: path
          required: true
          description: The policy name.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        - name: marker
          in: query
          required: false
          description: A marker used to get the next set of results.
          type: string
          pattern: '[A-Za-z0-9+/]+={0,2}'
        - name: pageSize
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/security-profiles/{securityProfileName}/targets':
    get:
      operationId: ListTargetsForSecurityProfile
      description: Lists the targets (thing groups) associated with a given Device Defender security profile.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTargetsForSecurityProfileResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: securityProfileName
          in: path
          required: true
          description: The security profile.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups:
    get:
      operationId: ListThingGroups
      description: List the thing groups in your account.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingGroupsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: parentGroup
          in: query
          required: false
          description: A filter that limits the results to those with the specified parent group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: namePrefixFilter
          in: query
          required: false
          description: A filter that limits the results to those with the specified name prefix.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: recursive
          in: query
          required: false
          description: 'If true, return child groups as well.'
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/thing-groups':
    get:
      operationId: ListThingGroupsForThing
      description: List the thing groups to which the specified thing belongs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingGroupsForThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The thing name.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/things/{thingName}/principals':
    get:
      operationId: ListThingPrincipals
      description: 'Lists the principals associated with the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingPrincipalsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: thingName
          in: path
          required: true
          description: The name of the thing.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}/reports#reportType':
    get:
      operationId: ListThingRegistrationTaskReports
      description: Information about the thing registration tasks.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingRegistrationTaskReportsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The id of the task.
          type: string
          maxLength: 40
        - name: reportType
          in: query
          required: true
          description: The type of task report.
          type: string
          enum:
            - ERRORS
            - RESULTS
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-registration-tasks:
    get:
      operationId: ListThingRegistrationTasks
      description: List bulk thing provisioning tasks.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingRegistrationTasksResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
        - name: status
          in: query
          required: false
          description: The status of the bulk thing provisioning task.
          type: string
          enum:
            - InProgress
            - Completed
            - Failed
            - Cancelled
            - Cancelling
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: StartThingRegistrationTask
      description: Creates a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - templateBody
              - inputFileBucket
              - inputFileKey
              - roleArn
            properties:
              templateBody:
                description: The provisioning template.
                type: string
              inputFileBucket:
                description: The S3 bucket that contains the input file.
                type: string
                pattern: '[a-zA-Z0-9._-]+'
                minLength: 3
                maxLength: 256
              inputFileKey:
                description: The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each line contains the parameter values to provision one device (thing).
                type: string
                pattern: '[a-zA-Z0-9!_.*''()-\/]+'
                minLength: 1
                maxLength: 1024
              roleArn:
                description: The IAM role ARN that grants permission the input file.
                type: string
                minLength: 20
                maxLength: 2048
  /thing-types:
    get:
      operationId: ListThingTypes
      description: Lists the existing thing types.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingTypesResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          type: integer
          minimum: 1
          maximum: 250
        - name: thingTypeName
          in: query
          required: false
          description: The name of the thing type.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /things:
    get:
      operationId: ListThings
      description: 'Lists your things. Use the <b>attributeName</b> and <b>attributeValue</b> parameters to filter your things. For example, calling <code>ListThings</code> with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute <b>Color</b> with the value <b>Red</b>. '
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          type: integer
          minimum: 1
          maximum: 250
        - name: attributeName
          in: query
          required: false
          description: The attribute name used to search for things.
          type: string
          pattern: '[a-zA-Z0-9_.,@/:#-]+'
          maxLength: 128
        - name: attributeValue
          in: query
          required: false
          description: The attribute value used to search for things.
          type: string
          pattern: '[a-zA-Z0-9_.,@/:#-]*'
          maxLength: 800
        - name: thingTypeName
          in: query
          required: false
          description: The name of the thing type used to search for things.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: RegisterThing
      description: 'Provisions a thing in the device registry. RegisterThing calls other AWS IoT control plane APIs. These calls might exceed your account level <a href="https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_iot"> AWS IoT Throttling Limits</a> and cause throttle errors. Please contact <a href="https://console.aws.amazon.com/support/home">AWS Customer Support</a> to raise your throttling limits if necessary.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterThingResponse'
        '480':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '481':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: ConflictingResourceUpdateException
          schema:
            $ref: '#/definitions/ConflictingResourceUpdateException'
        '486':
          description: ResourceRegistrationFailureException
          schema:
            $ref: '#/definitions/ResourceRegistrationFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - templateBody
            properties:
              templateBody:
                description: 'The provisioning template. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html">Programmatic Provisioning</a> for more information.'
                type: string
              parameters:
                description: 'The parameters for provisioning a thing. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html">Programmatic Provisioning</a> for more information.'
                type: object
                additionalProperties:
                  $ref: '#/definitions/Value'
  '/billing-groups/{billingGroupName}/things':
    get:
      operationId: ListThingsInBillingGroup
      description: Lists the things you have added to the given billing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingsInBillingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: billingGroupName
          in: path
          required: true
          description: The name of the billing group.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return per request.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-groups/{thingGroupName}/things':
    get:
      operationId: ListThingsInThingGroup
      description: Lists the things in the specified group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListThingsInThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: thingGroupName
          in: path
          required: true
          description: The thing group name.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: recursive
          in: query
          required: false
          description: 'When true, list things in this thing group and in all child groups as well.'
          type: boolean
        - name: nextToken
          in: query
          required: false
          description: The token to retrieve the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /rules:
    get:
      operationId: ListTopicRules
      description: Lists the rules for the specific topic.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListTopicRulesResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: topic
          in: query
          required: false
          description: The topic.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          type: integer
          minimum: 1
          maximum: 10000
        - name: nextToken
          in: query
          required: false
          description: A token used to retrieve the next value.
          type: string
        - name: ruleDisabled
          in: query
          required: false
          description: Specifies whether the rule is disabled.
          type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /v2LoggingLevel:
    get:
      operationId: ListV2LoggingLevels
      description: Lists logging levels.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListV2LoggingLevelsResponse'
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: NotConfiguredException
          schema:
            $ref: '#/definitions/NotConfiguredException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: targetType
          in: query
          required: false
          description: The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.
          type: string
          enum:
            - DEFAULT
            - THING_GROUP
        - name: nextToken
          in: query
          required: false
          description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      operationId: SetV2LoggingLevel
      description: Sets the logging level.
      responses:
        '200':
          description: Success
        '480':
          description: InternalException
          schema:
            $ref: '#/definitions/InternalException'
        '481':
          description: NotConfiguredException
          schema:
            $ref: '#/definitions/NotConfiguredException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - logTarget
              - logLevel
            properties:
              logTarget:
                description: A log target.
                type: object
                properties:
                  targetType:
                    $ref: '#/definitions/LogTargetType'
                    description: The target type.
                  targetName:
                    $ref: '#/definitions/LogTargetName'
                    description: The target name.
              logLevel:
                description: The log level.
                type: string
                enum:
                  - DEBUG
                  - INFO
                  - ERROR
                  - WARN
                  - DISABLED
  '/violation-events#startTime&endTime':
    get:
      operationId: ListViolationEvents
      description: 'Lists the Device Defender security profile violations discovered during the given time period. You can use filters to limit the results to those alerts issued for a particular security profile, behavior, or thing (device).'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListViolationEventsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: startTime
          in: query
          required: true
          description: The start time for the alerts to be listed.
          type: string
          format: date-time
        - name: endTime
          in: query
          required: true
          description: The end time for the alerts to be listed.
          type: string
          format: date-time
        - name: thingName
          in: query
          required: false
          description: A filter to limit results to those alerts caused by the specified thing.
          type: string
          minLength: 1
          maxLength: 128
        - name: securityProfileName
          in: query
          required: false
          description: A filter to limit results to those alerts generated by the specified security profile.
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          minLength: 1
          maxLength: 128
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results.
          type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return at one time.
          type: integer
          minimum: 1
          maximum: 250
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /cacertificate:
    post:
      operationId: RegisterCACertificate
      description: 'Registers a CA certificate with AWS IoT. This CA certificate can then be used to sign device certificates, which can be then registered with AWS IoT. You can register up to 10 CA certificates per AWS account that have the same subject field. This enables you to have up to 10 certificate authorities sign your device certificates. If you have more than one CA certificate registered, make sure you pass the CA certificate when you register your device certificates with the RegisterCertificate API.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterCACertificateResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: RegistrationCodeValidationException
          schema:
            $ref: '#/definitions/RegistrationCodeValidationException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: CertificateValidationException
          schema:
            $ref: '#/definitions/CertificateValidationException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '487':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '488':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: A boolean value that specifies if the CA certificate is set to active.
          type: boolean
        - name: allowAutoRegistration
          in: query
          required: false
          description: Allows this CA certificate to be used for auto registration of device certificates.
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - caCertificate
              - verificationCertificate
            properties:
              caCertificate:
                description: The PEM of a certificate.
                type: string
                minLength: 1
                maxLength: 65536
              verificationCertificate:
                description: The PEM of a certificate.
                type: string
                minLength: 1
                maxLength: 65536
              registrationConfig:
                description: The registration configuration.
                type: object
                properties:
                  templateBody:
                    $ref: '#/definitions/TemplateBody'
                    description: The template body.
                  roleArn:
                    $ref: '#/definitions/RoleArn'
                    description: The ARN of the role.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /certificate/register:
    post:
      operationId: RegisterCertificate
      description: 'Registers a device certificate with AWS IoT. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterCertificateResponse'
        '480':
          description: ResourceAlreadyExistsException
          schema:
            $ref: '#/definitions/ResourceAlreadyExistsException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: CertificateValidationException
          schema:
            $ref: '#/definitions/CertificateValidationException'
        '483':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '484':
          description: CertificateConflictException
          schema:
            $ref: '#/definitions/CertificateConflictException'
        '485':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '486':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '487':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '488':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: setAsActive
          in: query
          required: false
          description: A boolean value that specifies if the certificate is set to active.
          type: boolean
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - certificatePem
            properties:
              certificatePem:
                description: The PEM of a certificate.
                type: string
                minLength: 1
                maxLength: 65536
              caCertificatePem:
                description: The PEM of a certificate.
                type: string
                minLength: 1
                maxLength: 65536
              status:
                description: The status of the register certificate request.
                type: string
                enum:
                  - ACTIVE
                  - INACTIVE
                  - REVOKED
                  - PENDING_TRANSFER
                  - REGISTER_INACTIVE
                  - PENDING_ACTIVATION
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/reject-certificate-transfer/{certificateId}':
    patch:
      operationId: RejectCertificateTransfer
      description: '<p>Rejects a pending certificate transfer. After AWS IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANSFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source''s account in the INACTIVE state.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: TransferAlreadyCompletedException
          schema:
            $ref: '#/definitions/TransferAlreadyCompletedException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              rejectReason:
                description: The reason the certificate transfer was rejected.
                type: string
                maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /billing-groups/removeThingFromBillingGroup:
    put:
      operationId: RemoveThingFromBillingGroup
      description: Removes the given thing from the billing group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveThingFromBillingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              billingGroupName:
                description: The name of the billing group.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              billingGroupArn:
                description: The ARN of the billing group.
                type: string
              thingName:
                description: The name of the thing to be removed from the billing group.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingArn:
                description: The ARN of the thing to be removed from the billing group.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups/removeThingFromThingGroup:
    put:
      operationId: RemoveThingFromThingGroup
      description: Remove the specified thing from the specified group.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RemoveThingFromThingGroupResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              thingGroupName:
                description: The group name.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingGroupArn:
                description: The group ARN.
                type: string
              thingName:
                description: The name of the thing to remove from the group.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingArn:
                description: The ARN of the thing to remove from the group.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /indices/search:
    post:
      operationId: SearchIndex
      description: The query search index.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SearchIndexResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '484':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '485':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '486':
          description: InvalidQueryException
          schema:
            $ref: '#/definitions/InvalidQueryException'
        '487':
          description: IndexNotReadyException
          schema:
            $ref: '#/definitions/IndexNotReadyException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - queryString
            properties:
              indexName:
                description: The search index name.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              queryString:
                description: The search query string.
                type: string
                minLength: 1
              nextToken:
                description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
                type: string
              maxResults:
                description: The maximum number of results to return at one time.
                type: integer
                minimum: 1
                maximum: 500
              queryVersion:
                description: The query version.
                type: string
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /audit/tasks:
    post:
      operationId: StartOnDemandAuditTask
      description: Starts an on-demand Device Defender audit.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StartOnDemandAuditTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - targetCheckNames
            properties:
              targetCheckNames:
                description: 'Which checks are performed during the audit. The checks you specify must be enabled for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.'
                type: array
                items:
                  $ref: '#/definitions/AuditCheckName'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/thing-registration-tasks/{taskId}/cancel':
    put:
      operationId: StopThingRegistrationTask
      description: Cancels a bulk thing provisioning task.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/StopThingRegistrationTaskResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '483':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '484':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: taskId
          in: path
          required: true
          description: The bulk thing provisioning task ID.
          type: string
          maxLength: 40
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /tags:
    post:
      operationId: TagResource
      description: Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TagResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - resourceArn
              - tags
            properties:
              resourceArn:
                description: The ARN of the resource.
                type: string
              tags:
                description: The new or modified tags for the resource.
                type: array
                items:
                  $ref: '#/definitions/Tag'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /test-authorization:
    post:
      operationId: TestAuthorization
      description: Tests if a specified principal is authorized to perform an AWS IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestAuthorizationResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: LimitExceededException
          schema:
            $ref: '#/definitions/LimitExceededException'
      parameters:
        - name: clientId
          in: query
          required: false
          description: The MQTT client ID.
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - authInfos
            properties:
              principal:
                description: The principal.
                type: string
              cognitoIdentityPoolId:
                description: The Cognito identity pool ID.
                type: string
              authInfos:
                description: A list of authorization info objects. Simulating authorization will create a response for each <code>authInfo</code> object in the list.
                type: array
                items:
                  $ref: '#/definitions/AuthInfo'
                minItems: 1
                maxItems: 10
              policyNamesToAdd:
                description: 'When testing custom authorization, the policies specified here are treated as if they are attached to the principal being authorized.'
                type: array
                items:
                  $ref: '#/definitions/PolicyName'
              policyNamesToSkip:
                description: 'When testing custom authorization, the policies specified here are treated as if they are not attached to the principal being authorized.'
                type: array
                items:
                  $ref: '#/definitions/PolicyName'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/authorizer/{authorizerName}/test':
    post:
      operationId: TestInvokeAuthorizer
      description: Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the AWS IoT device gateway.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TestInvokeAuthorizerResponse'
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '482':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '483':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '484':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '485':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '486':
          description: InvalidResponseException
          schema:
            $ref: '#/definitions/InvalidResponseException'
      parameters:
        - name: authorizerName
          in: path
          required: true
          description: The custom authorizer name.
          type: string
          pattern: '[\w=,@-]+'
          minLength: 1
          maxLength: 128
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              token:
                description: The token returned by your custom authentication service.
                type: string
                minLength: 1
                maxLength: 6144
              tokenSignature:
                description: The signature made with the token and your custom authentication service's private key.
                type: string
                pattern: '[A-Za-z0-9+/]+={0,2}'
                minLength: 1
                maxLength: 2560
              httpContext:
                description: Specifies the HTTP context to use for the test authorizer request.
                type: object
                properties:
                  headers:
                    $ref: '#/definitions/HttpHeaders'
                    description: The header keys and values in an HTTP authorization request.
                  queryString:
                    $ref: '#/definitions/HttpQueryString'
                    description: The query string keys and values in an HTTP authorization request.
              mqttContext:
                description: Specifies the MQTT context to use for the test authorizer request
                type: object
                properties:
                  username:
                    $ref: '#/definitions/MqttUsername'
                    description: The value of the <code>username</code> key in an MQTT authorization request.
                  password:
                    $ref: '#/definitions/MqttPassword'
                    description: The value of the <code>password</code> key in an MQTT authorization request.
                  clientId:
                    $ref: '#/definitions/MqttClientId'
                    description: The value of the <code>clientId</code> key in an MQTT authorization request.
              tlsContext:
                description: Specifies the TLS context to use for the test authorizer request.
                type: object
                properties:
                  serverName:
                    $ref: '#/definitions/ServerName'
                    description: The value of the <code>serverName</code> key in a TLS authorization request.
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/transfer-certificate/{certificateId}#targetAwsAccount':
    patch:
      operationId: TransferCertificate
      description: <p>Transfers the specified certificate to the specified AWS account.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account. It is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. You can use the UpdateCertificate API to deactivate it.</p> <p>The certificate must not have any policies attached to it. You can use the DetachPrincipalPolicy API to detach them.</p>
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransferCertificateResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '482':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '483':
          description: TransferConflictException
          schema:
            $ref: '#/definitions/TransferConflictException'
        '484':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '485':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '486':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '487':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
        - name: targetAwsAccount
          in: query
          required: true
          description: The AWS account.
          type: string
          pattern: '[0-9]+'
          minLength: 12
          maxLength: 12
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              transferMessage:
                description: The transfer message.
                type: string
                maxLength: 128
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /untag:
    post:
      operationId: UntagResource
      description: Removes the given tags (metadata) from the resource.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UntagResourceResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '482':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - resourceArn
              - tagKeys
            properties:
              resourceArn:
                description: The ARN of the resource.
                type: string
              tagKeys:
                description: A list of the keys of the tags to be removed from the resource.
                type: array
                items:
                  $ref: '#/definitions/TagKey'
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  '/certificates/{certificateId}#newStatus':
    put:
      operationId: UpdateCertificate
      description: '<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Moving a certificate from the ACTIVE state (including REVOKED) will not disconnect currently connected devices, but these devices will be unable to reconnect.</p> <p>The ACTIVE state is required to authenticate devices connecting to AWS IoT using a certificate.</p>'
      responses:
        '200':
          description: Success
        '480':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
        '481':
          description: CertificateStateException
          schema:
            $ref: '#/definitions/CertificateStateException'
        '482':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '483':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '484':
          description: UnauthorizedException
          schema:
            $ref: '#/definitions/UnauthorizedException'
        '485':
          description: ServiceUnavailableException
          schema:
            $ref: '#/definitions/ServiceUnavailableException'
        '486':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
          type: string
          pattern: '(0x)?[a-fA-F0-9]+'
          minLength: 64
          maxLength: 64
        - name: newStatus
          in: query
          required: true
          description: '<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER will result in an exception being thrown. PENDING_TRANSFER is a status used internally by AWS IoT. It is not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>'
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - REVOKED
            - PENDING_TRANSFER
            - REGISTER_INACTIVE
            - PENDING_ACTIVATION
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /thing-groups/updateThingGroupsForThing:
    put:
      operationId: UpdateThingGroupsForThing
      description: Updates the groups to which the thing belongs.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateThingGroupsForThingResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
        '483':
          description: ResourceNotFoundException
          schema:
            $ref: '#/definitions/ResourceNotFoundException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              thingName:
                description: The thing whose group memberships will be updated.
                type: string
                pattern: '[a-zA-Z0-9:_-]+'
                minLength: 1
                maxLength: 128
              thingGroupsToAdd:
                description: The groups to which the thing will be added.
                type: array
                items:
                  $ref: '#/definitions/ThingGroupName'
              thingGroupsToRemove:
                description: The groups from which the thing will be removed.
                type: array
                items:
                  $ref: '#/definitions/ThingGroupName'
              overrideDynamicGroups:
                description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
                type: boolean
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
  /security-profile-behaviors/validate:
    post:
      operationId: ValidateSecurityProfileBehaviors
      description: Validates a Device Defender security profile behaviors specification.
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ValidateSecurityProfileBehaviorsResponse'
        '480':
          description: InvalidRequestException
          schema:
            $ref: '#/definitions/InvalidRequestException'
        '481':
          description: ThrottlingException
          schema:
            $ref: '#/definitions/ThrottlingException'
        '482':
          description: InternalFailureException
          schema:
            $ref: '#/definitions/InternalFailureException'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - behaviors
            properties:
              behaviors:
                description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
                type: array
                items:
                  $ref: '#/definitions/Behavior'
                maxItems: 100
    parameters:
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
definitions:
  ResourceNotFoundException: {}
  TransferAlreadyCompletedException: {}
  InvalidRequestException: {}
  ThrottlingException: {}
  UnauthorizedException: {}
  ServiceUnavailableException: {}
  InternalFailureException: {}
  AddThingToBillingGroupResponse:
    type: object
    properties: {}
  AddThingToThingGroupResponse:
    type: object
    properties: {}
  AssociateTargetsWithJobResponse:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: An ARN identifying the job.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
  TargetArn:
    type: string
  LimitExceededException: {}
  AttachSecurityProfileResponse:
    type: object
    properties: {}
  VersionConflictException: {}
  AttachThingPrincipalResponse:
    type: object
    properties: {}
    description: The output from the AttachThingPrincipal operation.
  CancelAuditMitigationActionsTaskResponse:
    type: object
    properties: {}
  CancelAuditTaskResponse:
    type: object
    properties: {}
  CancelJobResponse:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: The job ARN.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
  DetailsValue:
    type: string
    pattern: '[^\p\{C\}]*\+'
    minLength: 1
    maxLength: 1024
  InvalidStateTransitionException: {}
  ClearDefaultAuthorizerResponse:
    type: object
    properties: {}
  ConfirmTopicRuleDestinationResponse:
    type: object
    properties: {}
  InternalException: {}
  ConflictingResourceUpdateException: {}
  CreateAuthorizerResponse:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer's name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
  KeyValue:
    type: string
    maxLength: 5120
  ResourceAlreadyExistsException: {}
  CreateBillingGroupResponse:
    type: object
    properties:
      billingGroupName:
        $ref: '#/definitions/BillingGroupName'
        description: The name you gave to the billing group.
      billingGroupArn:
        $ref: '#/definitions/BillingGroupArn'
        description: The ARN of the billing group.
      billingGroupId:
        $ref: '#/definitions/BillingGroupId'
        description: The ID of the billing group.
  BillingGroupDescription:
    type: string
    pattern: '[\p{Graph}\x20]*'
    maxLength: 2028
  Tag:
    type: object
    properties:
      Key:
        $ref: '#/definitions/TagKey'
        description: The tag's key.
      Value:
        $ref: '#/definitions/TagValue'
        description: The tag's value.
    description: A set of key/value pairs that are used to manage the resource.
  CreateCertificateFromCsrResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate. Certificate management operations only take a certificateId.
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
    description: The output from the CreateCertificateFromCsr operation.
  CreateDomainConfigurationResponse:
    type: object
    properties:
      domainConfigurationName:
        $ref: '#/definitions/DomainConfigurationName'
        description: The name of the domain configuration.
      domainConfigurationArn:
        $ref: '#/definitions/DomainConfigurationArn'
        description: The ARN of the domain configuration.
  AcmCertificateArn:
    type: string
    pattern: 'arn:aws:acm:[a-z]{2}-(gov-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/?[a-zA-Z0-9/-]+'
    minLength: 1
    maxLength: 2048
  AuthorizerName:
    type: string
    pattern: '[\w=,@-]+'
    minLength: 1
    maxLength: 128
  AllowAuthorizerOverride:
    type: boolean
  CertificateValidationException: {}
  CreateDynamicThingGroupResponse:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The dynamic thing group name.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The dynamic thing group ARN.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The dynamic thing group ID.
      indexName:
        $ref: '#/definitions/IndexName'
        description: The dynamic thing group index name.
      queryString:
        $ref: '#/definitions/QueryString'
        description: The dynamic thing group search query string.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: The dynamic thing group query version.
  ThingGroupDescription:
    type: string
    pattern: '[\p{Graph}\x20]*'
    maxLength: 2028
  AttributePayload:
    type: object
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
        description: '<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
      merge:
        $ref: '#/definitions/Flag'
        description: '<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p> </note>'
    description: The attribute payload.
  InvalidQueryException: {}
  CreateJobResponse:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: The job ARN.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job.
      description:
        $ref: '#/definitions/JobDescription'
        description: The job description.
  RoleArn:
    type: string
    minLength: 20
    maxLength: 2048
  ExpiresInSec:
    type: integer
    minimum: 60
    maximum: 3600
  MaxJobExecutionsPerMin:
    type: integer
    minimum: 1
  ExponentialRolloutRate:
    type: object
    required:
      - baseRatePerMinute
      - incrementFactor
      - rateIncreaseCriteria
    properties:
      baseRatePerMinute:
        $ref: '#/definitions/RolloutRatePerMinute'
        description: 'The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.'
      incrementFactor:
        $ref: '#/definitions/IncrementFactor'
        description: The exponential factor to increase the rate of rollout for a job.
      rateIncreaseCriteria:
        $ref: '#/definitions/RateIncreaseCriteria'
        description: '<p>The criteria to initiate the increase in rate of rollout for a job.</p> <p>AWS IoT supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>'
    description: Allows you to create an exponential rate of rollout for a job.
  AbortCriteriaList:
    type: array
    items:
      $ref: '#/definitions/AbortCriteria'
    minItems: 1
  InProgressTimeoutInMinutes:
    type: integer
  CreateKeysAndCertificateResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: 'The ID of the certificate. AWS IoT issues a default subject name for the certificate (for example, AWS IoT Certificate).'
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
      keyPair:
        $ref: '#/definitions/KeyPair'
        description: The generated key pair.
    description: The output of the CreateKeysAndCertificate operation.
  CreateMitigationActionResponse:
    type: object
    properties:
      actionArn:
        $ref: '#/definitions/MitigationActionArn'
        description: The ARN for the new mitigation action.
      actionId:
        $ref: '#/definitions/MitigationActionId'
        description: A unique identifier for the new mitigation action.
  UpdateDeviceCertificateParams:
    type: object
    required:
      - action
    properties:
      action:
        $ref: '#/definitions/DeviceCertificateUpdateAction'
        description: The action that you want to apply to the device cerrtificate. The only supported value is <code>DEACTIVATE</code>.
    description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
  UpdateCACertificateParams:
    type: object
    required:
      - action
    properties:
      action:
        $ref: '#/definitions/CACertificateUpdateAction'
        description: The action that you want to apply to the CA cerrtificate. The only supported value is <code>DEACTIVATE</code>.
    description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
  AddThingsToThingGroupParams:
    type: object
    required:
      - thingGroupNames
    properties:
      thingGroupNames:
        $ref: '#/definitions/ThingGroupNames'
        description: 'The list of groups to which you want to add the things that triggered the mitigation action. You can add a thing to a maximum of 10 groups, but you cannot add a thing to more than one group in the same hierarchy.'
      overrideDynamicGroups:
        $ref: '#/definitions/OverrideDynamicGroups'
        description: Specifies if this mitigation action can move the things that triggered the mitigation action even if they are part of one or more dynamic things groups.
    description: Parameters used when defining a mitigation action that move a set of things to a thing group.
  ReplaceDefaultPolicyVersionParams:
    type: object
    required:
      - templateName
    properties:
      templateName:
        $ref: '#/definitions/PolicyTemplateName'
        description: The name of the template to be applied. The only supported value is <code>BLANK_POLICY</code>.
    description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
  EnableIoTLoggingParams:
    type: object
    required:
      - roleArnForLogging
      - logLevel
    properties:
      roleArnForLogging:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role used for logging.
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: Specifies the types of information to be logged.
    description: Parameters used when defining a mitigation action that enable AWS IoT logging.
  PublishFindingToSnsParams:
    type: object
    required:
      - topicArn
    properties:
      topicArn:
        $ref: '#/definitions/SnsTopicArn'
        description: The ARN of the topic to which you want to publish the findings.
    description: Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
  CreateOTAUpdateResponse:
    type: object
    properties:
      otaUpdateId:
        $ref: '#/definitions/OTAUpdateId'
        description: The OTA update ID.
      awsIotJobId:
        $ref: '#/definitions/AwsIotJobId'
        description: The AWS IoT job ID associated with the OTA update.
      otaUpdateArn:
        $ref: '#/definitions/OTAUpdateArn'
        description: The OTA update ARN.
      awsIotJobArn:
        $ref: '#/definitions/AwsIotJobArn'
        description: The AWS IoT job ARN associated with the OTA update.
      otaUpdateStatus:
        $ref: '#/definitions/OTAUpdateStatus'
        description: The OTA update status.
  Target:
    type: string
  Protocol:
    type: string
    enum:
      - MQTT
      - HTTP
  MaximumPerMinute:
    type: integer
    minimum: 1
    maximum: 1000
  ExpiresInSeconds:
    type: integer
  OTAUpdateFile:
    type: object
    properties:
      fileName:
        $ref: '#/definitions/FileName'
        description: The name of the file.
      fileVersion:
        $ref: '#/definitions/OTAUpdateFileVersion'
        description: The file version.
      fileLocation:
        $ref: '#/definitions/FileLocation'
        description: The location of the updated firmware.
      codeSigning:
        $ref: '#/definitions/CodeSigning'
        description: The code signing method of the file.
      attributes:
        $ref: '#/definitions/AttributesMap'
        description: A list of name/attribute pairs.
    description: Describes a file to be associated with an OTA update.
  Value:
    type: string
  CreatePolicyResponse:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
    description: The output from the CreatePolicy operation.
  MalformedPolicyException: {}
  CreatePolicyVersionResponse:
    type: object
    properties:
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: Specifies whether the policy version is the default.
    description: The output of the CreatePolicyVersion operation.
  VersionsLimitExceededException: {}
  CreateProvisioningClaimResponse:
    type: object
    properties:
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate.
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: The provisioning claim certificate.
      keyPair:
        $ref: '#/definitions/KeyPair'
        description: The provisioning claim key pair.
      expiration:
        $ref: '#/definitions/DateType'
        description: The provisioning claim expiration time.
  CreateProvisioningTemplateResponse:
    type: object
    properties:
      templateArn:
        $ref: '#/definitions/TemplateArn'
        description: The ARN that identifies the provisioning template.
      templateName:
        $ref: '#/definitions/TemplateName'
        description: The name of the fleet provisioning template.
      defaultVersionId:
        $ref: '#/definitions/TemplateVersionId'
        description: The default version of the fleet provisioning template.
  CreateProvisioningTemplateVersionResponse:
    type: object
    properties:
      templateArn:
        $ref: '#/definitions/TemplateArn'
        description: The ARN that identifies the provisioning template.
      templateName:
        $ref: '#/definitions/TemplateName'
        description: The name of the fleet provisioning template.
      versionId:
        $ref: '#/definitions/TemplateVersionId'
        description: The version of the fleet provisioning template.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: 'True if the fleet provisioning template version is the default version, otherwise false.'
  CreateRoleAliasResponse:
    type: object
    properties:
      roleAlias:
        $ref: '#/definitions/RoleAlias'
        description: The role alias.
      roleAliasArn:
        $ref: '#/definitions/RoleAliasArn'
        description: The role alias ARN.
  CreateScheduledAuditResponse:
    type: object
    properties:
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
  AuditCheckName:
    type: string
    description: 'An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
  CreateSecurityProfileResponse:
    type: object
    properties:
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name you gave to the security profile.
      securityProfileArn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile.
  Behavior:
    type: object
    required:
      - name
    properties:
      name:
        $ref: '#/definitions/BehaviorName'
        description: The name you have given to the behavior.
      metric:
        $ref: '#/definitions/BehaviorMetric'
        description: What is measured by the behavior.
      criteria:
        $ref: '#/definitions/BehaviorCriteria'
        description: The criteria that determine if a device is behaving normally in regard to the <code>metric</code>.
    description: A Device Defender security profile behavior.
  AlertTarget:
    type: object
    required:
      - alertTargetArn
      - roleArn
    properties:
      alertTargetArn:
        $ref: '#/definitions/AlertTargetArn'
        description: The ARN of the notification target to which alerts are sent.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role that grants permission to send alerts to the notification target.
    description: A structure containing the alert target ARN and the role ARN.
  BehaviorMetric:
    type: string
  CreateStreamResponse:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The version of the stream.
  StreamFile:
    type: object
    properties:
      fileId:
        $ref: '#/definitions/FileId'
        description: The file ID.
      s3Location:
        $ref: '#/definitions/S3Location'
        description: The location of the file in S3.
    description: Represents a file to stream.
  CreateThingResponse:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the new thing.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the new thing.
      thingId:
        $ref: '#/definitions/ThingId'
        description: The thing ID.
    description: The output of the CreateThing operation.
  Attributes:
    type: object
    additionalProperties:
      $ref: '#/definitions/AttributeValue'
  Flag:
    type: boolean
  CreateThingGroupResponse:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The thing group name.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The thing group ARN.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The thing group ID.
  CreateThingTypeResponse:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      thingTypeArn:
        $ref: '#/definitions/ThingTypeArn'
        description: The Amazon Resource Name (ARN) of the thing type.
      thingTypeId:
        $ref: '#/definitions/ThingTypeId'
        description: The thing type ID.
    description: The output of the CreateThingType operation.
  ThingTypeDescription:
    type: string
    pattern: '[\p{Graph}\x20]*'
    maxLength: 2028
  SearchableAttributes:
    type: array
    items:
      $ref: '#/definitions/AttributeName'
  SQL:
    type: string
  Description:
    type: string
  ActionList:
    type: array
    items:
      $ref: '#/definitions/Action'
    minItems: 0
    maxItems: 10
  IsDisabled:
    type: boolean
  AwsIotSqlVersion:
    type: string
  Action:
    type: object
    properties:
      dynamoDB:
        $ref: '#/definitions/DynamoDBAction'
        description: Write to a DynamoDB table.
      dynamoDBv2:
        $ref: '#/definitions/DynamoDBv2Action'
        description: Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.
      lambda:
        $ref: '#/definitions/LambdaAction'
        description: Invoke a Lambda function.
      sns:
        $ref: '#/definitions/SnsAction'
        description: Publish to an Amazon SNS topic.
      sqs:
        $ref: '#/definitions/SqsAction'
        description: Publish to an Amazon SQS queue.
      kinesis:
        $ref: '#/definitions/KinesisAction'
        description: Write data to an Amazon Kinesis stream.
      republish:
        $ref: '#/definitions/RepublishAction'
        description: Publish to another MQTT topic.
      s3:
        $ref: '#/definitions/S3Action'
        description: Write to an Amazon S3 bucket.
      firehose:
        $ref: '#/definitions/FirehoseAction'
        description: Write to an Amazon Kinesis Firehose stream.
      cloudwatchMetric:
        $ref: '#/definitions/CloudwatchMetricAction'
        description: Capture a CloudWatch metric.
      cloudwatchAlarm:
        $ref: '#/definitions/CloudwatchAlarmAction'
        description: Change the state of a CloudWatch alarm.
      elasticsearch:
        $ref: '#/definitions/ElasticsearchAction'
        description: Write data to an Amazon Elasticsearch Service domain.
      salesforce:
        $ref: '#/definitions/SalesforceAction'
        description: Send a message to a Salesforce IoT Cloud Input Stream.
      iotAnalytics:
        $ref: '#/definitions/IotAnalyticsAction'
        description: Sends message data to an AWS IoT Analytics channel.
      iotEvents:
        $ref: '#/definitions/IotEventsAction'
        description: Sends an input to an AWS IoT Events detector.
      iotSiteWise:
        $ref: '#/definitions/IotSiteWiseAction'
        description: Sends data from the MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
      stepFunctions:
        $ref: '#/definitions/StepFunctionsAction'
        description: Starts execution of a Step Functions state machine.
      http:
        $ref: '#/definitions/HttpAction'
        description: Send data to an HTTPS endpoint.
    description: Describes the actions associated with a rule.
  SqlParseException: {}
  CreateTopicRuleDestinationResponse:
    type: object
    properties:
      topicRuleDestination:
        $ref: '#/definitions/TopicRuleDestination'
        description: The topic rule destination.
  HttpUrlDestinationConfiguration:
    type: object
    required:
      - confirmationUrl
    properties:
      confirmationUrl:
        $ref: '#/definitions/Url'
        description: The URL AWS IoT uses to confirm ownership of or access to the topic rule destination URL.
    description: HTTP URL destination configuration used by the topic rule's HTTP action.
  DeleteAccountAuditConfigurationResponse:
    type: object
    properties: {}
  DeleteAuthorizerResponse:
    type: object
    properties: {}
  DeleteConflictException: {}
  DeleteBillingGroupResponse:
    type: object
    properties: {}
  DeleteCACertificateResponse:
    type: object
    properties: {}
    description: The output for the DeleteCACertificate operation.
  CertificateStateException: {}
  DeleteDomainConfigurationResponse:
    type: object
    properties: {}
  DeleteDynamicThingGroupResponse:
    type: object
    properties: {}
  DeleteMitigationActionResponse:
    type: object
    properties: {}
  DeleteOTAUpdateResponse:
    type: object
    properties: {}
  DeleteProvisioningTemplateResponse:
    type: object
    properties: {}
  DeleteProvisioningTemplateVersionResponse:
    type: object
    properties: {}
  DeleteRegistrationCodeResponse:
    type: object
    properties: {}
    description: The output for the DeleteRegistrationCode operation.
  DeleteRoleAliasResponse:
    type: object
    properties: {}
  DeleteScheduledAuditResponse:
    type: object
    properties: {}
  DeleteSecurityProfileResponse:
    type: object
    properties: {}
  DeleteStreamResponse:
    type: object
    properties: {}
  DeleteThingResponse:
    type: object
    properties: {}
    description: The output of the DeleteThing operation.
  DeleteThingGroupResponse:
    type: object
    properties: {}
  DeleteThingTypeResponse:
    type: object
    properties: {}
    description: The output for the DeleteThingType operation.
  DeleteTopicRuleDestinationResponse:
    type: object
    properties: {}
  DeprecateThingTypeResponse:
    type: object
    properties: {}
    description: The output for the DeprecateThingType operation.
  DescribeAccountAuditConfigurationResponse:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: '<p>The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates, and other items as required when performing an audit.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required.</p>'
      auditNotificationTargetConfigurations:
        $ref: '#/definitions/AuditNotificationTargetConfigurations'
        description: Information about the targets to which audit notifications are sent for this account.
      auditCheckConfigurations:
        $ref: '#/definitions/AuditCheckConfigurations'
        description: Which audit checks are enabled and disabled for this account.
  DescribeAuditFindingResponse:
    type: object
    properties:
      finding:
        $ref: '#/definitions/AuditFinding'
  DescribeAuditMitigationActionsTaskResponse:
    type: object
    properties:
      taskStatus:
        $ref: '#/definitions/AuditMitigationActionsTaskStatus'
        description: The current status of the task.
      startTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the task was started.
      endTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the task was completed or canceled.
      taskStatistics:
        $ref: '#/definitions/AuditMitigationActionsTaskStatistics'
        description: Aggregate counts of the results when the mitigation tasks were applied to the findings for this audit mitigation actions task.
      target:
        $ref: '#/definitions/AuditMitigationActionsTaskTarget'
        description: 'Identifies the findings to which the mitigation actions are applied. This can be by audit checks, by audit task, or a set of findings.'
      auditCheckToActionsMapping:
        $ref: '#/definitions/AuditCheckToActionsMapping'
        description: Specifies the mitigation actions that should be applied to specific audit checks.
      actionsDefinition:
        $ref: '#/definitions/MitigationActionList'
        description: Specifies the mitigation actions and their parameters that are applied as part of this task.
  DescribeAuditTaskResponse:
    type: object
    properties:
      taskStatus:
        $ref: '#/definitions/AuditTaskStatus'
        description: 'The status of the audit: one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".'
      taskType:
        $ref: '#/definitions/AuditTaskType'
        description: 'The type of audit: "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".'
      taskStartTime:
        $ref: '#/definitions/Timestamp'
        description: The time the audit started.
      taskStatistics:
        $ref: '#/definitions/TaskStatistics'
        description: Statistical information about the audit.
      scheduledAuditName:
        $ref: '#/definitions/ScheduledAuditName'
        description: The name of the scheduled audit (only if the audit was a scheduled audit).
      auditDetails:
        $ref: '#/definitions/AuditDetails'
        description: Detailed information about each check performed during this audit.
  DescribeAuthorizerResponse:
    type: object
    properties:
      authorizerDescription:
        $ref: '#/definitions/AuthorizerDescription'
        description: The authorizer description.
  DescribeBillingGroupResponse:
    type: object
    properties:
      billingGroupName:
        $ref: '#/definitions/BillingGroupName'
        description: The name of the billing group.
      billingGroupId:
        $ref: '#/definitions/BillingGroupId'
        description: The ID of the billing group.
      billingGroupArn:
        $ref: '#/definitions/BillingGroupArn'
        description: The ARN of the billing group.
      version:
        $ref: '#/definitions/Version'
        description: The version of the billing group.
      billingGroupProperties:
        $ref: '#/definitions/BillingGroupProperties'
        description: The properties of the billing group.
      billingGroupMetadata:
        $ref: '#/definitions/BillingGroupMetadata'
        description: Additional information about the billing group.
  DescribeCACertificateResponse:
    type: object
    properties:
      certificateDescription:
        $ref: '#/definitions/CACertificateDescription'
        description: The CA certificate description.
      registrationConfig:
        $ref: '#/definitions/RegistrationConfig'
        description: Information about the registration configuration.
    description: The output from the DescribeCACertificate operation.
  DescribeCertificateResponse:
    type: object
    properties:
      certificateDescription:
        $ref: '#/definitions/CertificateDescription'
        description: The description of the certificate.
    description: The output of the DescribeCertificate operation.
  DescribeDefaultAuthorizerResponse:
    type: object
    properties:
      authorizerDescription:
        $ref: '#/definitions/AuthorizerDescription'
        description: The default authorizer's description.
  DescribeDomainConfigurationResponse:
    type: object
    properties:
      domainConfigurationName:
        $ref: '#/definitions/ReservedDomainConfigurationName'
        description: The name of the domain configuration.
      domainConfigurationArn:
        $ref: '#/definitions/DomainConfigurationArn'
        description: The ARN of the domain configuration.
      domainName:
        $ref: '#/definitions/DomainName'
        description: The name of the domain.
      serverCertificates:
        $ref: '#/definitions/ServerCertificates'
        description: A list containing summary information about the server certificate included in the domain configuration.
      authorizerConfig:
        $ref: '#/definitions/AuthorizerConfig'
        description: An object that specifies the authorization service for a domain.
      domainConfigurationStatus:
        $ref: '#/definitions/DomainConfigurationStatus'
        description: A Boolean value that specifies the current state of the domain configuration.
      serviceType:
        $ref: '#/definitions/ServiceType'
        description: The type of service delivered by the endpoint.
      domainType:
        $ref: '#/definitions/DomainType'
        description: The type of the domain.
  DescribeEndpointResponse:
    type: object
    properties:
      endpointAddress:
        $ref: '#/definitions/EndpointAddress'
        description: 'The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.'
    description: The output from the DescribeEndpoint operation.
  DescribeEventConfigurationsResponse:
    type: object
    properties:
      eventConfigurations:
        $ref: '#/definitions/EventConfigurations'
        description: The event configurations.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The creation date of the event configuration.
      lastModifiedDate:
        $ref: '#/definitions/LastModifiedDate'
        description: The date the event configurations were last modified.
  DescribeIndexResponse:
    type: object
    properties:
      indexName:
        $ref: '#/definitions/IndexName'
        description: The index name.
      indexStatus:
        $ref: '#/definitions/IndexStatus'
        description: The index status.
      schema:
        $ref: '#/definitions/IndexSchema'
        description: '<p>Contains a value that specifies the type of indexing performed. Valid values are:</p> <ul> <li> <p>REGISTRY – Your thing index contains only registry data.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry data and shadow data.</p> </li> <li> <p>REGISTRY_AND_CONNECTIVITY_STATUS - Your thing index contains registry data and thing connectivity status data.</p> </li> <li> <p>REGISTRY_AND_SHADOW_AND_CONNECTIVITY_STATUS - Your thing index contains registry data, shadow data, and thing connectivity status data.</p> </li> </ul>'
  DescribeJobResponse:
    type: object
    properties:
      documentSource:
        $ref: '#/definitions/JobDocumentSource'
        description: An S3 link to the job document.
      job:
        $ref: '#/definitions/Job'
        description: Information about the job.
  DescribeJobExecutionResponse:
    type: object
    properties:
      execution:
        $ref: '#/definitions/JobExecution'
        description: Information about the job execution.
  DescribeMitigationActionResponse:
    type: object
    properties:
      actionName:
        $ref: '#/definitions/MitigationActionName'
        description: The friendly name that uniquely identifies the mitigation action.
      actionType:
        $ref: '#/definitions/MitigationActionType'
        description: The type of mitigation action.
      actionArn:
        $ref: '#/definitions/MitigationActionArn'
        description: The ARN that identifies this migration action.
      actionId:
        $ref: '#/definitions/MitigationActionId'
        description: A unique identifier for this action.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role used to apply this action.
      actionParams:
        $ref: '#/definitions/MitigationActionParams'
        description: 'Parameters that control how the mitigation action is applied, specific to the type of mitigation action.'
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the mitigation action was added to your AWS account.
      lastModifiedDate:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the mitigation action was last changed.
  DescribeProvisioningTemplateResponse:
    type: object
    properties:
      templateArn:
        $ref: '#/definitions/TemplateArn'
        description: The ARN of the fleet provisioning template.
      templateName:
        $ref: '#/definitions/TemplateName'
        description: The name of the fleet provisioning template.
      description:
        $ref: '#/definitions/TemplateDescription'
        description: The description of the fleet provisioning template.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the fleet provisioning template was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date when the fleet provisioning template was last modified.
      defaultVersionId:
        $ref: '#/definitions/TemplateVersionId'
        description: The default fleet template version ID.
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The JSON formatted contents of the fleet provisioning template.
      enabled:
        $ref: '#/definitions/Enabled'
        description: 'True if the fleet provisioning template is enabled, otherwise false.'
      provisioningRoleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.
  DescribeProvisioningTemplateVersionResponse:
    type: object
    properties:
      versionId:
        $ref: '#/definitions/TemplateVersionId'
        description: The fleet provisioning template version ID.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the fleet provisioning template version was created.
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The JSON formatted contents of the fleet provisioning template version.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: True if the fleet provisioning template version is the default version.
  DescribeRoleAliasResponse:
    type: object
    properties:
      roleAliasDescription:
        $ref: '#/definitions/RoleAliasDescription'
        description: The role alias description.
  DescribeScheduledAuditResponse:
    type: object
    properties:
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: 'How often the scheduled audit takes place. One of "DAILY", "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by the system.'
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit takes place. Will be "1" through "31" or "LAST". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: 'The day of the week on which the scheduled audit takes place. One of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT".'
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
      scheduledAuditName:
        $ref: '#/definitions/ScheduledAuditName'
        description: The name of the scheduled audit.
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
  DescribeSecurityProfileResponse:
    type: object
    properties:
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name of the security profile.
      securityProfileArn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile.
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: A description of the security profile (associated with the security profile when it was created or updated).
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Where the alerts are sent. (Alerts are always sent to the console.)
      additionalMetricsToRetain:
        $ref: '#/definitions/AdditionalMetricsToRetainList'
        description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here.'
      version:
        $ref: '#/definitions/Version'
        description: The version of the security profile. A new version is generated whenever the security profile is updated.
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was created.
      lastModifiedDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was last modified.
  DescribeStreamResponse:
    type: object
    properties:
      streamInfo:
        $ref: '#/definitions/StreamInfo'
        description: Information about the stream.
  DescribeThingResponse:
    type: object
    properties:
      defaultClientId:
        $ref: '#/definitions/ClientId'
        description: The default client ID.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing.
      thingId:
        $ref: '#/definitions/ThingId'
        description: The ID of the thing to describe.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to describe.
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The thing type name.
      attributes:
        $ref: '#/definitions/Attributes'
        description: The thing attributes.
      version:
        $ref: '#/definitions/Version'
        description: '<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>'
      billingGroupName:
        $ref: '#/definitions/BillingGroupName'
        description: The name of the billing group the thing belongs to.
    description: The output from the DescribeThing operation.
  DescribeThingGroupResponse:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The name of the thing group.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The thing group ID.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The thing group ARN.
      version:
        $ref: '#/definitions/Version'
        description: The version of the thing group.
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The thing group properties.
      thingGroupMetadata:
        $ref: '#/definitions/ThingGroupMetadata'
        description: Thing group metadata.
      indexName:
        $ref: '#/definitions/IndexName'
        description: The dynamic thing group index name.
      queryString:
        $ref: '#/definitions/QueryString'
        description: The dynamic thing group search query string.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: The dynamic thing group query version.
      status:
        $ref: '#/definitions/DynamicGroupStatus'
        description: The dynamic thing group status.
  DescribeThingRegistrationTaskResponse:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/TaskId'
        description: The task ID.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The task creation date.
      lastModifiedDate:
        $ref: '#/definitions/LastModifiedDate'
        description: The date when the task was last modified.
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The task's template.
      inputFileBucket:
        $ref: '#/definitions/RegistryS3BucketName'
        description: The S3 bucket that contains the input file.
      inputFileKey:
        $ref: '#/definitions/RegistryS3KeyName'
        description: The input file key.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN that grants access to the input file bucket.
      status:
        $ref: '#/definitions/Status'
        description: The status of the bulk thing provisioning task.
      message:
        $ref: '#/definitions/ErrorMessage'
        description: The message.
      successCount:
        $ref: '#/definitions/Count'
        description: The number of things successfully provisioned.
      failureCount:
        $ref: '#/definitions/Count'
        description: The number of things that failed to be provisioned.
      percentageProgress:
        $ref: '#/definitions/Percentage'
        description: The progress of the bulk provisioning task expressed as a percentage.
  DescribeThingTypeResponse:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      thingTypeId:
        $ref: '#/definitions/ThingTypeId'
        description: The thing type ID.
      thingTypeArn:
        $ref: '#/definitions/ThingTypeArn'
        description: The thing type ARN.
      thingTypeProperties:
        $ref: '#/definitions/ThingTypeProperties'
        description: 'The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.'
      thingTypeMetadata:
        $ref: '#/definitions/ThingTypeMetadata'
        description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.'
    description: The output for the DescribeThingType operation.
  DetachSecurityProfileResponse:
    type: object
    properties: {}
  DetachThingPrincipalResponse:
    type: object
    properties: {}
    description: The output from the DetachThingPrincipal operation.
  GetCardinalityResponse:
    type: object
    properties:
      cardinality:
        $ref: '#/definitions/Count'
        description: The approximate count of unique values that match the query.
  InvalidAggregationException: {}
  IndexNotReadyException: {}
  GetEffectivePoliciesResponse:
    type: object
    properties:
      effectivePolicies:
        $ref: '#/definitions/EffectivePolicies'
        description: The effective policies.
  GetIndexingConfigurationResponse:
    type: object
    properties:
      thingIndexingConfiguration:
        $ref: '#/definitions/ThingIndexingConfiguration'
        description: Thing indexing configuration.
      thingGroupIndexingConfiguration:
        $ref: '#/definitions/ThingGroupIndexingConfiguration'
        description: The index configuration.
  GetJobDocumentResponse:
    type: object
    properties:
      document:
        $ref: '#/definitions/JobDocument'
        description: The job document content.
  GetLoggingOptionsResponse:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The logging level.
    description: The output from the GetLoggingOptions operation.
  GetOTAUpdateResponse:
    type: object
    properties:
      otaUpdateInfo:
        $ref: '#/definitions/OTAUpdateInfo'
        description: The OTA update info.
  GetPercentilesResponse:
    type: object
    properties:
      percentiles:
        $ref: '#/definitions/Percentiles'
        description: The percentile values of the aggregated fields.
  Percent:
    type: number
    format: double
    minimum: 0
    maximum: 100
  GetPolicyResponse:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      defaultVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The default policy version ID.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the policy was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date the policy was last modified.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the policy.
    description: The output from the GetPolicy operation.
  GetPolicyVersionResponse:
    type: object
    properties:
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The JSON document that describes the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: Specifies whether the policy version is the default.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the policy was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date the policy was last modified.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the policy version.
    description: The output from the GetPolicyVersion operation.
  GetRegistrationCodeResponse:
    type: object
    properties:
      registrationCode:
        $ref: '#/definitions/RegistrationCode'
        description: The CA certificate registration code.
    description: The output from the GetRegistrationCode operation.
  GetStatisticsResponse:
    type: object
    properties:
      statistics:
        $ref: '#/definitions/Statistics'
        description: The statistics returned by the Fleet Indexing service based on the query and aggregation field.
  GetTopicRuleResponse:
    type: object
    properties:
      ruleArn:
        $ref: '#/definitions/RuleArn'
        description: The rule ARN.
      rule:
        $ref: '#/definitions/TopicRule'
        description: The rule.
    description: The output from the GetTopicRule operation.
  GetTopicRuleDestinationResponse:
    type: object
    properties:
      topicRuleDestination:
        $ref: '#/definitions/TopicRuleDestination'
        description: The topic rule destination.
  GetV2LoggingOptionsResponse:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role ARN AWS IoT uses to write to your CloudWatch logs.
      defaultLogLevel:
        $ref: '#/definitions/LogLevel'
        description: The default log level.
      disableAllLogs:
        $ref: '#/definitions/DisableAllLogs'
        description: Disables all logs.
  NotConfiguredException: {}
  ListActiveViolationsResponse:
    type: object
    properties:
      activeViolations:
        $ref: '#/definitions/ActiveViolations'
        description: The list of active violations.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListAttachedPoliciesResponse:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The policies.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The token to retrieve the next set of results, or ``null`` if there are no more results.'
  ListAuditFindingsResponse:
    type: object
    properties:
      findings:
        $ref: '#/definitions/AuditFindings'
        description: The findings (results) of the audit.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  CertificateId:
    type: string
    pattern: '(0x)?[a-fA-F0-9]+'
    minLength: 64
    maxLength: 64
  CognitoIdentityPoolId:
    type: string
  ClientId:
    type: string
  PolicyVersionIdentifier:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The name of the policy.
      policyVersionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The ID of the version of the policy associated with the resource.
    description: Information about the version of the policy associated with the resource.
  AwsAccountId:
    type: string
    pattern: '[0-9]+'
    minLength: 12
    maxLength: 12
  RoleAliasArn:
    type: string
    minLength: 1
    maxLength: 2048
  ListAuditMitigationActionsExecutionsResponse:
    type: object
    properties:
      actionsExecutions:
        $ref: '#/definitions/AuditMitigationActionExecutionMetadataList'
        description: 'A set of task execution results based on the input parameters. Details include the mitigation action applied, start time, and task status.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of results.
  ListAuditMitigationActionsTasksResponse:
    type: object
    properties:
      tasks:
        $ref: '#/definitions/AuditMitigationActionsTaskMetadataList'
        description: The collection of audit mitigation tasks that matched the filter criteria.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of results.
  ListAuditTasksResponse:
    type: object
    properties:
      tasks:
        $ref: '#/definitions/AuditTaskMetadataList'
        description: The audits that were performed during the specified time period.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListAuthorizersResponse:
    type: object
    properties:
      authorizers:
        $ref: '#/definitions/Authorizers'
        description: The authorizers.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: A marker used to get the next set of results.
  ListBillingGroupsResponse:
    type: object
    properties:
      billingGroups:
        $ref: '#/definitions/BillingGroupNameAndArnList'
        description: The list of billing groups.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListCACertificatesResponse:
    type: object
    properties:
      certificates:
        $ref: '#/definitions/CACertificates'
        description: The CA certificates registered in your AWS account.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: The current position within the list of CA certificates.
    description: The output from the ListCACertificates operation.
  ListCertificatesResponse:
    type: object
    properties:
      certificates:
        $ref: '#/definitions/Certificates'
        description: The descriptions of the certificates.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output of the ListCertificates operation.
  ListCertificatesByCAResponse:
    type: object
    properties:
      certificates:
        $ref: '#/definitions/Certificates'
        description: The device certificates signed by the specified CA certificate.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output of the ListCertificatesByCA operation.
  ListDomainConfigurationsResponse:
    type: object
    properties:
      domainConfigurations:
        $ref: '#/definitions/DomainConfigurations'
        description: A list of objects that contain summary information about the user's domain configurations.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results.
  ListIndicesResponse:
    type: object
    properties:
      indexNames:
        $ref: '#/definitions/IndexNamesList'
        description: The index names.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
  ListJobExecutionsForJobResponse:
    type: object
    properties:
      executionSummaries:
        $ref: '#/definitions/JobExecutionSummaryForJobList'
        description: A list of job execution summaries.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
  ListJobExecutionsForThingResponse:
    type: object
    properties:
      executionSummaries:
        $ref: '#/definitions/JobExecutionSummaryForThingList'
        description: A list of job execution summaries.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
  ListJobsResponse:
    type: object
    properties:
      jobs:
        $ref: '#/definitions/JobSummaryList'
        description: A list of jobs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
  ListMitigationActionsResponse:
    type: object
    properties:
      actionIdentifiers:
        $ref: '#/definitions/MitigationActionIdentifierList'
        description: A set of actions that matched the specified filter criteria.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of results.
  ListOTAUpdatesResponse:
    type: object
    properties:
      otaUpdates:
        $ref: '#/definitions/OTAUpdatesSummary'
        description: A list of OTA update jobs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to use to get the next set of results.
  ListOutgoingCertificatesResponse:
    type: object
    properties:
      outgoingCertificates:
        $ref: '#/definitions/OutgoingCertificates'
        description: The certificates that are being transferred but not yet accepted.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: The marker for the next set of results.
    description: The output from the ListOutgoingCertificates operation.
  ListPoliciesResponse:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The descriptions of the policies.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output from the ListPolicies operation.
  ListPolicyPrincipalsResponse:
    type: object
    properties:
      principals:
        $ref: '#/definitions/Principals'
        description: The descriptions of the principals.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output from the ListPolicyPrincipals operation.
  ListPolicyVersionsResponse:
    type: object
    properties:
      policyVersions:
        $ref: '#/definitions/PolicyVersions'
        description: The policy versions.
    description: The output from the ListPolicyVersions operation.
  ListPrincipalPoliciesResponse:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The policies.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: 'The marker for the next set of results, or null if there are no additional results.'
    description: The output from the ListPrincipalPolicies operation.
  ListPrincipalThingsResponse:
    type: object
    properties:
      things:
        $ref: '#/definitions/ThingNameList'
        description: The things.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
    description: The output from the ListPrincipalThings operation.
  ListProvisioningTemplateVersionsResponse:
    type: object
    properties:
      versions:
        $ref: '#/definitions/ProvisioningTemplateVersionListing'
        description: The list of fleet provisioning template versions.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to retrieve the next set of results.
  ListProvisioningTemplatesResponse:
    type: object
    properties:
      templates:
        $ref: '#/definitions/ProvisioningTemplateListing'
        description: A list of fleet provisioning templates
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token to retrieve the next set of results.
  ListRoleAliasesResponse:
    type: object
    properties:
      roleAliases:
        $ref: '#/definitions/RoleAliases'
        description: The role aliases.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: A marker used to get the next set of results.
  ListScheduledAuditsResponse:
    type: object
    properties:
      scheduledAudits:
        $ref: '#/definitions/ScheduledAuditMetadataList'
        description: The list of scheduled audits.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListSecurityProfilesResponse:
    type: object
    properties:
      securityProfileIdentifiers:
        $ref: '#/definitions/SecurityProfileIdentifiers'
        description: A list of security profile identifiers (names and ARNs).
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListSecurityProfilesForTargetResponse:
    type: object
    properties:
      securityProfileTargetMappings:
        $ref: '#/definitions/SecurityProfileTargetMappings'
        description: A list of security profiles and their associated targets.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListStreamsResponse:
    type: object
    properties:
      streams:
        $ref: '#/definitions/StreamsSummary'
        description: A list of streams.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token used to get the next set of results.
  ListTagsForResourceResponse:
    type: object
    properties:
      tags:
        $ref: '#/definitions/TagList'
        description: The list of tags assigned to the resource.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListTargetsForPolicyResponse:
    type: object
    properties:
      targets:
        $ref: '#/definitions/PolicyTargets'
        description: The policy targets.
      nextMarker:
        $ref: '#/definitions/Marker'
        description: A marker used to get the next set of results.
  ListTargetsForSecurityProfileResponse:
    type: object
    properties:
      securityProfileTargets:
        $ref: '#/definitions/SecurityProfileTargets'
        description: The thing groups to which the security profile is attached.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  ListThingGroupsResponse:
    type: object
    properties:
      thingGroups:
        $ref: '#/definitions/ThingGroupNameAndArnList'
        description: The thing groups.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingGroupsForThingResponse:
    type: object
    properties:
      thingGroups:
        $ref: '#/definitions/ThingGroupNameAndArnList'
        description: The thing groups.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingPrincipalsResponse:
    type: object
    properties:
      principals:
        $ref: '#/definitions/Principals'
        description: The principals associated with the thing.
    description: The output from the ListThingPrincipals operation.
  ListThingRegistrationTaskReportsResponse:
    type: object
    properties:
      resourceLinks:
        $ref: '#/definitions/S3FileUrlList'
        description: Links to the task resources.
      reportType:
        $ref: '#/definitions/ReportType'
        description: The type of task report.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingRegistrationTasksResponse:
    type: object
    properties:
      taskIds:
        $ref: '#/definitions/TaskIdList'
        description: A list of bulk thing provisioning task IDs.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingTypesResponse:
    type: object
    properties:
      thingTypes:
        $ref: '#/definitions/ThingTypeList'
        description: The thing types.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token for the next set of results, or <b>null</b> if there are no additional results.'
    description: The output for the ListThingTypes operation.
  ListThingsResponse:
    type: object
    properties:
      things:
        $ref: '#/definitions/ThingAttributeList'
        description: The things.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
    description: The output from the ListThings operation.
  ListThingsInBillingGroupResponse:
    type: object
    properties:
      things:
        $ref: '#/definitions/ThingNameList'
        description: A list of things in the billing group.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListThingsInThingGroupResponse:
    type: object
    properties:
      things:
        $ref: '#/definitions/ThingNameList'
        description: The things in the specified thing group.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListTopicRuleDestinationsResponse:
    type: object
    properties:
      destinationSummaries:
        $ref: '#/definitions/TopicRuleDestinationSummaries'
        description: Information about a topic rule destination.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token to retrieve the next set of results.
  ListTopicRulesResponse:
    type: object
    properties:
      rules:
        $ref: '#/definitions/TopicRuleList'
        description: The rules.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: A token used to retrieve the next value.
    description: The output from the ListTopicRules operation.
  ListV2LoggingLevelsResponse:
    type: object
    properties:
      logTargetConfigurations:
        $ref: '#/definitions/LogTargetConfigurations'
        description: The logging configuration for a target.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <b>null</b> if there are no additional results.'
  ListViolationEventsResponse:
    type: object
    properties:
      violationEvents:
        $ref: '#/definitions/ViolationEvents'
        description: 'The security profile violation alerts issued for this account during the given time period, potentially filtered by security profile, behavior violated, or thing (device) violating.'
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.'
  RegisterCACertificateResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The CA certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The CA certificate identifier.
    description: The output from the RegisterCACertificateResponse operation.
  TemplateBody:
    type: string
  RegistrationCodeValidationException: {}
  RegisterCertificateResponse:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The certificate identifier.
    description: The output from the RegisterCertificate operation.
  CertificateConflictException: {}
  RegisterThingResponse:
    type: object
    properties:
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: .
      resourceArns:
        $ref: '#/definitions/ResourceArns'
        description: ARNs for the generated resources.
  ResourceRegistrationFailureException: {}
  RemoveThingFromBillingGroupResponse:
    type: object
    properties: {}
  RemoveThingFromThingGroupResponse:
    type: object
    properties: {}
  SearchIndexResponse:
    type: object
    properties:
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
      things:
        $ref: '#/definitions/ThingDocumentList'
        description: The things that match the search query.
      thingGroups:
        $ref: '#/definitions/ThingGroupDocumentList'
        description: The thing groups that match the search query.
  SetDefaultAuthorizerResponse:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
  AwsArn:
    type: string
  LogLevel:
    type: string
    enum:
      - DEBUG
      - INFO
      - ERROR
      - WARN
      - DISABLED
  LogTargetType:
    type: string
    enum:
      - DEFAULT
      - THING_GROUP
  LogTargetName:
    type: string
  StartAuditMitigationActionsTaskResponse:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditMitigationActionsTaskId'
        description: The unique identifier for the audit mitigation task. This matches the <code>taskId</code> that you specified in the request.
  AuditTaskId:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    minLength: 1
    maxLength: 40
  FindingIds:
    type: array
    items:
      $ref: '#/definitions/FindingId'
    minItems: 1
    maxItems: 25
  AuditCheckToReasonCodeFilter:
    type: object
    additionalProperties:
      $ref: '#/definitions/ReasonForNonComplianceCodes'
  MitigationActionNameList:
    type: array
    items:
      $ref: '#/definitions/MitigationActionName'
    minItems: 1
    maxItems: 5
  TaskAlreadyExistsException: {}
  StartOnDemandAuditTaskResponse:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: The ID of the on-demand audit you started.
  StartThingRegistrationTaskResponse:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/TaskId'
        description: The bulk thing provisioning task ID.
  StopThingRegistrationTaskResponse:
    type: object
    properties: {}
  TagResourceResponse:
    type: object
    properties: {}
  TestAuthorizationResponse:
    type: object
    properties:
      authResults:
        $ref: '#/definitions/AuthResults'
        description: The authentication results.
  AuthInfo:
    type: object
    properties:
      actionType:
        $ref: '#/definitions/ActionType'
        description: The type of action for which the principal is being authorized.
      resources:
        $ref: '#/definitions/Resources'
        description: The resources for which the principal is being authorized to perform the specified action.
    description: A collection of authorization information.
  PolicyName:
    type: string
    pattern: '[\w+=,.@-]+'
    minLength: 1
    maxLength: 128
  TestInvokeAuthorizerResponse:
    type: object
    properties:
      isAuthenticated:
        $ref: '#/definitions/IsAuthenticated'
        description: 'True if the token is authenticated, otherwise false.'
      principalId:
        $ref: '#/definitions/PrincipalId'
        description: The principal ID.
      policyDocuments:
        $ref: '#/definitions/PolicyDocuments'
        description: IAM policy documents.
      refreshAfterInSeconds:
        $ref: '#/definitions/Seconds'
        description: The number of seconds after which the temporary credentials are refreshed.
      disconnectAfterInSeconds:
        $ref: '#/definitions/Seconds'
        description: The number of seconds after which the connection is terminated.
  HttpHeaders:
    type: object
    additionalProperties:
      $ref: '#/definitions/HttpHeaderValue'
  HttpQueryString:
    type: string
    minLength: 1
    maxLength: 4096
  MqttUsername:
    type: string
    minLength: 1
    maxLength: 65535
  MqttPassword:
    type: string
    minLength: 1
    maxLength: 65535
  MqttClientId:
    type: string
    minLength: 1
    maxLength: 65535
  ServerName:
    type: string
    minLength: 1
    maxLength: 253
  InvalidResponseException: {}
  TransferCertificateResponse:
    type: object
    properties:
      transferredCertificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
    description: The output from the TransferCertificate operation.
  TransferConflictException: {}
  UntagResourceResponse:
    type: object
    properties: {}
  TagKey:
    type: string
  UpdateAccountAuditConfigurationResponse:
    type: object
    properties: {}
  AuditNotificationTarget:
    type: object
    properties:
      targetArn:
        $ref: '#/definitions/TargetArn'
        description: The ARN of the target (SNS topic) to which audit notifications are sent.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role that grants permission to send notifications to the target.
      enabled:
        $ref: '#/definitions/Enabled'
        description: True if notifications to the target are enabled.
    description: Information about the targets to which audit notifications are sent.
  AuditCheckConfiguration:
    type: object
    properties:
      enabled:
        $ref: '#/definitions/Enabled'
        description: True if this audit check is enabled for this account.
    description: Which audit checks are enabled and disabled for this account.
  UpdateAuthorizerResponse:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
  UpdateBillingGroupResponse:
    type: object
    properties:
      version:
        $ref: '#/definitions/Version'
        description: The latest version of the billing group.
  UpdateDomainConfigurationResponse:
    type: object
    properties:
      domainConfigurationName:
        $ref: '#/definitions/ReservedDomainConfigurationName'
        description: The name of the domain configuration that was updated.
      domainConfigurationArn:
        $ref: '#/definitions/DomainConfigurationArn'
        description: The ARN of the domain configuration that was updated.
  UpdateDynamicThingGroupResponse:
    type: object
    properties:
      version:
        $ref: '#/definitions/Version'
        description: The dynamic thing group version.
  UpdateEventConfigurationsResponse:
    type: object
    properties: {}
  Configuration:
    type: object
    properties:
      Enabled:
        $ref: '#/definitions/Enabled'
        description: True to enable the configuration.
    description: Configuration.
  UpdateIndexingConfigurationResponse:
    type: object
    properties: {}
  ThingIndexingMode:
    type: string
    enum:
      - 'OFF'
      - REGISTRY
      - REGISTRY_AND_SHADOW
  ThingConnectivityIndexingMode:
    type: string
    enum:
      - 'OFF'
      - STATUS
  Fields:
    type: array
    items:
      $ref: '#/definitions/Field'
  ThingGroupIndexingMode:
    type: string
    enum:
      - 'OFF'
      - 'ON'
  UpdateMitigationActionResponse:
    type: object
    properties:
      actionArn:
        $ref: '#/definitions/MitigationActionArn'
        description: The ARN for the new mitigation action.
      actionId:
        $ref: '#/definitions/MitigationActionId'
        description: A unique identifier for the mitigation action.
  UpdateProvisioningTemplateResponse:
    type: object
    properties: {}
  UpdateRoleAliasResponse:
    type: object
    properties:
      roleAlias:
        $ref: '#/definitions/RoleAlias'
        description: The role alias.
      roleAliasArn:
        $ref: '#/definitions/RoleAliasArn'
        description: The role alias ARN.
  UpdateScheduledAuditResponse:
    type: object
    properties:
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
  UpdateSecurityProfileResponse:
    type: object
    properties:
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name of the security profile that was updated.
      securityProfileArn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile that was updated.
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: The description of the security profile.
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Where the alerts are sent. (Alerts are always sent to the console.)
      additionalMetricsToRetain:
        $ref: '#/definitions/AdditionalMetricsToRetainList'
        description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the security profile''s <code>behaviors</code>, but it is also retained for any metric specified here.'
      version:
        $ref: '#/definitions/Version'
        description: The updated version of the security profile.
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was created.
      lastModifiedDate:
        $ref: '#/definitions/Timestamp'
        description: The time the security profile was last modified.
  UpdateStreamResponse:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The stream version.
  UpdateThingResponse:
    type: object
    properties: {}
    description: The output from the UpdateThing operation.
  UpdateThingGroupResponse:
    type: object
    properties:
      version:
        $ref: '#/definitions/Version'
        description: The version of the updated thing group.
  UpdateThingGroupsForThingResponse:
    type: object
    properties: {}
  ThingGroupName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  UpdateTopicRuleDestinationResponse:
    type: object
    properties: {}
  ValidateSecurityProfileBehaviorsResponse:
    type: object
    properties:
      valid:
        $ref: '#/definitions/Valid'
        description: True if the behaviors were valid.
      validationErrors:
        $ref: '#/definitions/ValidationErrors'
        description: The list of any errors found in the behaviors.
  AbortAction:
    type: string
    enum:
      - CANCEL
  AbortConfig:
    type: object
    required:
      - criteriaList
    properties:
      criteriaList:
        $ref: '#/definitions/AbortCriteriaList'
        description: The list of abort criteria to define rules to abort the job.
    description: Details of abort criteria to abort the job.
  JobExecutionFailureType:
    type: string
    enum:
      - FAILED
      - REJECTED
      - TIMED_OUT
      - ALL
  AbortThresholdPercentage:
    type: number
    format: double
    maximum: 100
  MinimumNumberOfExecutedThings:
    type: integer
    minimum: 1
  AbortCriteria:
    type: object
    required:
      - failureType
      - action
      - thresholdPercentage
      - minNumberOfExecutedThings
    properties:
      failureType:
        $ref: '#/definitions/JobExecutionFailureType'
        description: The type of job execution failure to define a rule to initiate a job abort.
      action:
        $ref: '#/definitions/AbortAction'
        description: The type of abort action to initiate a job abort.
      thresholdPercentage:
        $ref: '#/definitions/AbortThresholdPercentage'
        description: '<p>The threshold as a percentage of the total number of executed things that will initiate a job abort.</p> <p>AWS IoT supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>'
      minNumberOfExecutedThings:
        $ref: '#/definitions/MinimumNumberOfExecutedThings'
        description: Minimum number of executed things before evaluating an abort rule.
    description: Details of abort criteria to define rules to abort the job.
  SetAsActive:
    type: boolean
  AcceptCertificateTransferRequest:
    type: object
    properties: {}
    description: The input for the AcceptCertificateTransfer operation.
  DynamoDBAction:
    type: object
    required:
      - tableName
      - roleArn
      - hashKeyField
      - hashKeyValue
    properties:
      tableName:
        $ref: '#/definitions/TableName'
        description: The name of the DynamoDB table.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access to the DynamoDB table.
      operation:
        $ref: '#/definitions/DynamoOperation'
        description: 'The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.'
      hashKeyField:
        $ref: '#/definitions/HashKeyField'
        description: The hash key name.
      hashKeyValue:
        $ref: '#/definitions/HashKeyValue'
        description: The hash key value.
      hashKeyType:
        $ref: '#/definitions/DynamoKeyType'
        description: The hash key type. Valid values are "STRING" or "NUMBER"
      rangeKeyField:
        $ref: '#/definitions/RangeKeyField'
        description: The range key name.
      rangeKeyValue:
        $ref: '#/definitions/RangeKeyValue'
        description: The range key value.
      rangeKeyType:
        $ref: '#/definitions/DynamoKeyType'
        description: The range key type. Valid values are "STRING" or "NUMBER"
      payloadField:
        $ref: '#/definitions/PayloadField'
        description: The action payload. This name can be customized.
    description: '<p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>"hashKeyValue": "${topic(3)}"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>"rangeKeyValue": "${timestamp()}"</code> </p>'
  DynamoDBv2Action:
    type: object
    required:
      - roleArn
      - putItem
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access to the DynamoDB table.
      putItem:
        $ref: '#/definitions/PutItemInput'
        description: '<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ "dynamoDBv2": { "roleArn": "aws:iam:12341251:my-role" "putItem": { "tableName": "my-table" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>'
    description: <p>Describes an action to write to a DynamoDB table.</p> <p>This DynamoDB action writes each attribute in the message payload into it's own column in the DynamoDB table.</p>
  LambdaAction:
    type: object
    required:
      - functionArn
    properties:
      functionArn:
        $ref: '#/definitions/FunctionArn'
        description: The ARN of the Lambda function.
    description: Describes an action to invoke a Lambda function.
  SnsAction:
    type: object
    required:
      - targetArn
      - roleArn
    properties:
      targetArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the SNS topic.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      messageFormat:
        $ref: '#/definitions/MessageFormat'
        description: '(Optional) The message format of the message to publish. Accepted values are "JSON" and "RAW". The default value of the attribute is "RAW". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href="https://docs.aws.amazon.com/sns/latest/dg/json-formats.html">https://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.'
    description: Describes an action to publish to an Amazon SNS topic.
  SqsAction:
    type: object
    required:
      - roleArn
      - queueUrl
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      queueUrl:
        $ref: '#/definitions/QueueUrl'
        description: The URL of the Amazon SQS queue.
      useBase64:
        $ref: '#/definitions/UseBase64'
        description: Specifies whether to use Base64 encoding.
    description: Describes an action to publish data to an Amazon SQS queue.
  KinesisAction:
    type: object
    required:
      - roleArn
      - streamName
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access to the Amazon Kinesis stream.
      streamName:
        $ref: '#/definitions/StreamName'
        description: The name of the Amazon Kinesis stream.
      partitionKey:
        $ref: '#/definitions/PartitionKey'
        description: The partition key.
    description: Describes an action to write data to an Amazon Kinesis stream.
  RepublishAction:
    type: object
    required:
      - roleArn
      - topic
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      topic:
        $ref: '#/definitions/TopicPattern'
        description: The name of the MQTT topic.
      qos:
        $ref: '#/definitions/Qos'
        description: The Quality of Service (QoS) level to use when republishing messages. The default value is 0.
    description: Describes an action to republish to another topic.
  S3Action:
    type: object
    required:
      - roleArn
      - bucketName
      - key
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      bucketName:
        $ref: '#/definitions/BucketName'
        description: The Amazon S3 bucket.
      key:
        $ref: '#/definitions/Key'
        description: The object key.
      cannedAcl:
        $ref: '#/definitions/CannedAccessControlList'
        description: 'The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">S3 canned ACLs</a>.'
    description: Describes an action to write data to an Amazon S3 bucket.
  FirehoseAction:
    type: object
    required:
      - roleArn
      - deliveryStreamName
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role that grants access to the Amazon Kinesis Firehose stream.
      deliveryStreamName:
        $ref: '#/definitions/DeliveryStreamName'
        description: The delivery stream name.
      separator:
        $ref: '#/definitions/FirehoseSeparator'
        description: 'A character separator that will be used to separate records written to the Firehose stream. Valid values are: ''\n'' (newline), ''\t'' (tab), ''\r\n'' (Windows newline), '','' (comma).'
    description: Describes an action that writes data to an Amazon Kinesis Firehose stream.
  CloudwatchMetricAction:
    type: object
    required:
      - roleArn
      - metricNamespace
      - metricName
      - metricValue
      - metricUnit
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role that allows access to the CloudWatch metric.
      metricNamespace:
        $ref: '#/definitions/String'
        description: The CloudWatch metric namespace name.
      metricName:
        $ref: '#/definitions/String'
        description: The CloudWatch metric name.
      metricValue:
        $ref: '#/definitions/String'
        description: The CloudWatch metric value.
      metricUnit:
        $ref: '#/definitions/String'
        description: 'The <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit">metric unit</a> supported by CloudWatch.'
      metricTimestamp:
        $ref: '#/definitions/String'
        description: 'An optional <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp">Unix timestamp</a>.'
    description: Describes an action that captures a CloudWatch metric.
  CloudwatchAlarmAction:
    type: object
    required:
      - roleArn
      - alarmName
      - stateReason
      - stateValue
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role that allows access to the CloudWatch alarm.
      alarmName:
        $ref: '#/definitions/AlarmName'
        description: The CloudWatch alarm name.
      stateReason:
        $ref: '#/definitions/StateReason'
        description: The reason for the alarm change.
      stateValue:
        $ref: '#/definitions/StateValue'
        description: 'The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.'
    description: Describes an action that updates a CloudWatch alarm.
  ElasticsearchAction:
    type: object
    required:
      - roleArn
      - endpoint
      - index
      - type
      - id
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The IAM role ARN that has access to Elasticsearch.
      endpoint:
        $ref: '#/definitions/ElasticsearchEndpoint'
        description: The endpoint of your Elasticsearch domain.
      index:
        $ref: '#/definitions/ElasticsearchIndex'
        description: The Elasticsearch index where you want to store your data.
      type:
        $ref: '#/definitions/ElasticsearchType'
        description: The type of document you are storing.
      id:
        $ref: '#/definitions/ElasticsearchId'
        description: The unique identifier for the document you are storing.
    description: Describes an action that writes data to an Amazon Elasticsearch Service domain.
  SalesforceAction:
    type: object
    required:
      - token
      - url
    properties:
      token:
        $ref: '#/definitions/SalesforceToken'
        description: The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.
      url:
        $ref: '#/definitions/SalesforceEndpoint'
        description: The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.
    description: Describes an action to write a message to a Salesforce IoT Cloud Input Stream.
  IotAnalyticsAction:
    type: object
    properties:
      channelArn:
        $ref: '#/definitions/AwsArn'
        description: (deprecated) The ARN of the IoT Analytics channel to which message data will be sent.
      channelName:
        $ref: '#/definitions/ChannelName'
        description: The name of the IoT Analytics channel to which message data will be sent.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: 'The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).'
    description: Sends message data to an AWS IoT Analytics channel.
  IotEventsAction:
    type: object
    required:
      - inputName
      - roleArn
    properties:
      inputName:
        $ref: '#/definitions/InputName'
        description: The name of the AWS IoT Events input.
      messageId:
        $ref: '#/definitions/MessageId'
        description: '[Optional] Use this to ensure that only one input (message) with a given messageId will be processed by an AWS IoT Events detector.'
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: 'The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT Events detector. ("Action":"iotevents:BatchPutMessage").'
    description: Sends an input to an AWS IoT Events detector.
  IotSiteWiseAction:
    type: object
    required:
      - putAssetPropertyValueEntries
      - roleArn
    properties:
      putAssetPropertyValueEntries:
        $ref: '#/definitions/PutAssetPropertyValueEntryList'
        description: A list of asset property value entries.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: 'The ARN of the role that grants AWS IoT permission to send an asset property value to AWS IoTSiteWise. (<code>"Action": "iotsitewise:BatchPutAssetPropertyValue"</code>). The trust policy can restrict access to specific asset hierarchy paths.'
    description: Describes an action to send data from an MQTT message that triggered the rule to AWS IoT SiteWise asset properties.
  StepFunctionsAction:
    type: object
    required:
      - stateMachineName
      - roleArn
    properties:
      executionNamePrefix:
        $ref: '#/definitions/ExecutionNamePrefix'
        description: (Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.
      stateMachineName:
        $ref: '#/definitions/StateMachineName'
        description: The name of the Step Functions state machine whose execution will be started.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: 'The ARN of the role that grants IoT permission to start execution of a state machine ("Action":"states:StartExecution").'
    description: Starts execution of a Step Functions state machine.
  HttpAction:
    type: object
    required:
      - url
    properties:
      url:
        $ref: '#/definitions/Url'
        description: 'The endpoint URL. If substitution templates are used in the URL, you must also specify a <code>confirmationUrl</code>. If this is a new destination, a new <code>TopicRuleDestination</code> is created if possible.'
      confirmationUrl:
        $ref: '#/definitions/Url'
        description: 'The URL to which AWS IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL AWS IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substituion template before traffic is allowed to your endpoint URL.'
      headers:
        $ref: '#/definitions/HeaderList'
        description: The HTTP headers to send with the message data.
      auth:
        $ref: '#/definitions/HttpAuthorization'
        description: The authentication method to use when sending data to an HTTPS endpoint.
    description: Send data to an HTTPS endpoint.
  ActionType:
    type: string
    enum:
      - PUBLISH
      - SUBSCRIBE
      - RECEIVE
      - CONNECT
  ViolationId:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    minLength: 1
    maxLength: 128
  DeviceDefenderThingName:
    type: string
    minLength: 1
    maxLength: 128
  SecurityProfileName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  MetricValue:
    type: object
    properties:
      count:
        $ref: '#/definitions/UnsignedLong'
        description: 'If the <code>comparisonOperator</code> calls for a numeric value, use this to specify that numeric value to be compared with the <code>metric</code>.'
      cidrs:
        $ref: '#/definitions/Cidrs'
        description: 'If the <code>comparisonOperator</code> calls for a set of CIDRs, use this to specify that set to be compared with the <code>metric</code>.'
      ports:
        $ref: '#/definitions/Ports'
        description: 'If the <code>comparisonOperator</code> calls for a set of ports, use this to specify that set to be compared with the <code>metric</code>.'
    description: The value to be compared with the <code>metric</code>.
  Timestamp:
    type: string
    format: date-time
  ActiveViolation:
    type: object
    properties:
      violationId:
        $ref: '#/definitions/ViolationId'
        description: The ID of the active violation.
      thingName:
        $ref: '#/definitions/DeviceDefenderThingName'
        description: The name of the thing responsible for the active violation.
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The security profile whose behavior is in violation.
      behavior:
        $ref: '#/definitions/Behavior'
        description: The behavior which is being violated.
      lastViolationValue:
        $ref: '#/definitions/MetricValue'
        description: The value of the metric (the measurement) which caused the most recent violation.
      lastViolationTime:
        $ref: '#/definitions/Timestamp'
        description: The time the most recent violation occurred.
      violationStartTime:
        $ref: '#/definitions/Timestamp'
        description: The time the violation started.
    description: Information about an active Device Defender security profile behavior violation.
  ActiveViolations:
    type: array
    items:
      $ref: '#/definitions/ActiveViolation'
  BillingGroupName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  BillingGroupArn:
    type: string
  ThingName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  ThingArn:
    type: string
  AddThingToBillingGroupRequest:
    type: object
    properties:
      billingGroupName:
        $ref: '#/definitions/BillingGroupName'
        description: The name of the billing group.
      billingGroupArn:
        $ref: '#/definitions/BillingGroupArn'
        description: The ARN of the billing group.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing to be added to the billing group.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to be added to the billing group.
  ThingGroupArn:
    type: string
  OverrideDynamicGroups:
    type: boolean
  AddThingToThingGroupRequest:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The name of the group to which you are adding a thing.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The ARN of the group to which you are adding a thing.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing to add to a group.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to add to a group.
      overrideDynamicGroups:
        $ref: '#/definitions/OverrideDynamicGroups'
        description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
  ThingGroupNames:
    type: array
    items:
      $ref: '#/definitions/ThingGroupName'
    minItems: 1
    maxItems: 10
  AdditionalMetricsToRetainList:
    type: array
    items:
      $ref: '#/definitions/BehaviorMetric'
  AdditionalParameterMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/Value'
  AggregationField:
    type: string
    minLength: 1
  AlarmName:
    type: string
  AlertTargetArn:
    type: string
  AlertTargetType:
    type: string
    enum:
      - SNS
    description: 'The type of alert target: one of "SNS".'
  AlertTargets:
    type: object
    additionalProperties:
      $ref: '#/definitions/AlertTarget'
  AllowAutoRegistration:
    type: boolean
  Policies:
    type: array
    items:
      $ref: '#/definitions/Policy'
  Allowed:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: A list of policies that allowed the authentication.
    description: Contains information that allowed the authorization.
  ApproximateSecondsBeforeTimedOut:
    type: integer
  AscendingOrder:
    type: boolean
  AssetId:
    type: string
  AssetPropertyAlias:
    type: string
    minLength: 1
    maxLength: 2048
  AssetPropertyBooleanValue:
    type: string
  AssetPropertyDoubleValue:
    type: string
  AssetPropertyEntryId:
    type: string
  AssetPropertyId:
    type: string
  AssetPropertyIntegerValue:
    type: string
  AssetPropertyOffsetInNanos:
    type: string
  AssetPropertyQuality:
    type: string
  AssetPropertyStringValue:
    type: string
    minLength: 1
    maxLength: 1024
  AssetPropertyTimeInSeconds:
    type: string
  AssetPropertyTimestamp:
    type: object
    required:
      - timeInSeconds
    properties:
      timeInSeconds:
        $ref: '#/definitions/AssetPropertyTimeInSeconds'
        description: A string that contains the time in seconds since epoch. Accepts substitution templates.
      offsetInNanos:
        $ref: '#/definitions/AssetPropertyOffsetInNanos'
        description: Optional. A string that contains the nanosecond time offset. Accepts substitution templates.
    description: An asset property timestamp entry containing the following information.
  AssetPropertyVariant:
    type: object
    properties:
      stringValue:
        $ref: '#/definitions/AssetPropertyStringValue'
        description: Optional. The string value of the value entry. Accepts substitution templates.
      integerValue:
        $ref: '#/definitions/AssetPropertyIntegerValue'
        description: Optional. A string that contains the integer value of the value entry. Accepts substitution templates.
      doubleValue:
        $ref: '#/definitions/AssetPropertyDoubleValue'
        description: Optional. A string that contains the double value of the value entry. Accepts substitution templates.
      booleanValue:
        $ref: '#/definitions/AssetPropertyBooleanValue'
        description: Optional. A string that contains the boolean value (<code>true</code> or <code>false</code>) of the value entry. Accepts substitution templates.
    description: Contains an asset property value (of a single type).
  AssetPropertyValue:
    type: object
    required:
      - value
      - timestamp
    properties:
      value:
        $ref: '#/definitions/AssetPropertyVariant'
        description: The value of the asset property.
      timestamp:
        $ref: '#/definitions/AssetPropertyTimestamp'
        description: The asset property value timestamp.
      quality:
        $ref: '#/definitions/AssetPropertyQuality'
        description: 'Optional. A string that describes the quality of the value. Accepts substitution templates. Must be <code>GOOD</code>, <code>BAD</code>, or <code>UNCERTAIN</code>.'
    description: An asset property value entry containing the following information.
  AssetPropertyValueList:
    type: array
    items:
      $ref: '#/definitions/AssetPropertyValue'
    minItems: 1
  JobTargets:
    type: array
    items:
      $ref: '#/definitions/TargetArn'
    minItems: 1
  JobId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 64
  Comment:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  AssociateTargetsWithJobRequest:
    type: object
    required:
      - targets
    properties:
      targets:
        $ref: '#/definitions/JobTargets'
        description: A list of thing group ARNs that define the targets of the job.
      comment:
        $ref: '#/definitions/Comment'
        description: An optional comment string describing why the job was associated with the targets.
  JobArn:
    type: string
  JobDescription:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  PolicyTarget:
    type: string
  AttachPolicyRequest:
    type: object
    required:
      - target
    properties:
      target:
        $ref: '#/definitions/PolicyTarget'
        description: 'The <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-security-identity.html">identity</a> to which the policy is attached.'
  Principal:
    type: string
  AttachPrincipalPolicyRequest:
    type: object
    properties: {}
    description: The input for the AttachPrincipalPolicy operation.
  SecurityProfileTargetArn:
    type: string
  AttachSecurityProfileRequest:
    type: object
    properties: {}
  AttachThingPrincipalRequest:
    type: object
    properties: {}
    description: The input for the AttachThingPrincipal operation.
  AttributeKey:
    type: string
  AttributeName:
    type: string
    pattern: '[a-zA-Z0-9_.,@/:#-]+'
    maxLength: 128
  AttributeValue:
    type: string
    pattern: '[a-zA-Z0-9_.,@/:#-]*'
    maxLength: 800
  AttributesMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/Value'
  Enabled:
    type: boolean
  AuditCheckConfigurations:
    type: object
    additionalProperties:
      $ref: '#/definitions/AuditCheckConfiguration'
  AuditCheckRunStatus:
    type: string
    enum:
      - IN_PROGRESS
      - WAITING_FOR_DATA_COLLECTION
      - CANCELED
      - COMPLETED_COMPLIANT
      - COMPLETED_NON_COMPLIANT
      - FAILED
  CheckCompliant:
    type: boolean
  TotalResourcesCount:
    type: integer
  NonCompliantResourcesCount:
    type: integer
  ErrorCode:
    type: string
  ErrorMessage:
    type: string
    maxLength: 2048
  AuditCheckDetails:
    type: object
    properties:
      checkRunStatus:
        $ref: '#/definitions/AuditCheckRunStatus'
        description: 'The completion status of this check. One of "IN_PROGRESS", "WAITING_FOR_DATA_COLLECTION", "CANCELED", "COMPLETED_COMPLIANT", "COMPLETED_NON_COMPLIANT", or "FAILED".'
      checkCompliant:
        $ref: '#/definitions/CheckCompliant'
        description: True if the check is complete and found all resources compliant.
      totalResourcesCount:
        $ref: '#/definitions/TotalResourcesCount'
        description: The number of resources on which the check was performed.
      nonCompliantResourcesCount:
        $ref: '#/definitions/NonCompliantResourcesCount'
        description: The number of resources that were found noncompliant during the check.
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: The code of any error encountered when this check is performed during this audit. One of "INSUFFICIENT_PERMISSIONS" or "AUDIT_CHECK_DISABLED".
      message:
        $ref: '#/definitions/ErrorMessage'
        description: The message associated with any error encountered when this check is performed during this audit.
    description: Information about the audit check.
  AuditCheckToActionsMapping:
    type: object
    additionalProperties:
      $ref: '#/definitions/MitigationActionNameList'
  ReasonForNonComplianceCodes:
    type: array
    items:
      $ref: '#/definitions/ReasonForNonComplianceCode'
    minItems: 1
    maxItems: 25
  AuditDetails:
    type: object
    additionalProperties:
      $ref: '#/definitions/AuditCheckDetails'
  FindingId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  AuditFindingSeverity:
    type: string
    enum:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
  NonCompliantResource:
    type: object
    properties:
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The type of the noncompliant resource.
      resourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: Information that identifies the noncompliant resource.
      additionalInfo:
        $ref: '#/definitions/StringMap'
        description: Other information about the noncompliant resource.
    description: Information about the resource that was noncompliant with the audit check.
  RelatedResources:
    type: array
    items:
      $ref: '#/definitions/RelatedResource'
  ReasonForNonCompliance:
    type: string
  ReasonForNonComplianceCode:
    type: string
  AuditFinding:
    type: object
    properties:
      findingId:
        $ref: '#/definitions/FindingId'
        description: A unique identifier for this set of audit findings. This identifier is used to apply mitigation tasks to one or more sets of findings.
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: The ID of the audit that generated this result (finding).
      checkName:
        $ref: '#/definitions/AuditCheckName'
        description: The audit check that generated this result.
      taskStartTime:
        $ref: '#/definitions/Timestamp'
        description: The time the audit started.
      findingTime:
        $ref: '#/definitions/Timestamp'
        description: The time the result (finding) was discovered.
      severity:
        $ref: '#/definitions/AuditFindingSeverity'
        description: The severity of the result (finding).
      nonCompliantResource:
        $ref: '#/definitions/NonCompliantResource'
        description: The resource that was found to be noncompliant with the audit check.
      relatedResources:
        $ref: '#/definitions/RelatedResources'
        description: The list of related resources.
      reasonForNonCompliance:
        $ref: '#/definitions/ReasonForNonCompliance'
        description: The reason the resource was noncompliant.
      reasonForNonComplianceCode:
        $ref: '#/definitions/ReasonForNonComplianceCode'
        description: A code that indicates the reason that the resource was noncompliant.
    description: The findings (results) of the audit.
  AuditFindings:
    type: array
    items:
      $ref: '#/definitions/AuditFinding'
  AuditFrequency:
    type: string
    enum:
      - DAILY
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
  AuditMitigationActionsTaskId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  MitigationActionName:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    maxLength: 128
  MitigationActionId:
    type: string
  AuditMitigationActionsExecutionStatus:
    type: string
    enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELED
      - SKIPPED
      - PENDING
  AuditMitigationActionExecutionMetadata:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditMitigationActionsTaskId'
        description: The unique identifier for the task that applies the mitigation action.
      findingId:
        $ref: '#/definitions/FindingId'
        description: The unique identifier for the findings to which the task and associated mitigation action are applied.
      actionName:
        $ref: '#/definitions/MitigationActionName'
        description: The friendly name of the mitigation action being applied by the task.
      actionId:
        $ref: '#/definitions/MitigationActionId'
        description: The unique identifier for the mitigation action being applied by the task.
      status:
        $ref: '#/definitions/AuditMitigationActionsExecutionStatus'
        description: The current status of the task being executed.
      startTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the task was started.
      endTime:
        $ref: '#/definitions/Timestamp'
        description: The date and time when the task was completed or canceled. Blank if the task is still running.
      errorCode:
        $ref: '#/definitions/ErrorCode'
        description: 'If an error occurred, the code that indicates which type of error occurred.'
      message:
        $ref: '#/definitions/ErrorMessage'
        description: 'If an error occurred, a message that describes the error.'
    description: 'Returned by ListAuditMitigationActionsTask, this object contains information that describes a mitigation action that has been started.'
  AuditMitigationActionExecutionMetadataList:
    type: array
    items:
      $ref: '#/definitions/AuditMitigationActionExecutionMetadata'
  AuditMitigationActionsTaskStatus:
    type: string
    enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELED
  AuditMitigationActionsTaskMetadata:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditMitigationActionsTaskId'
        description: The unique identifier for the task.
      startTime:
        $ref: '#/definitions/Timestamp'
        description: The time at which the audit mitigation actions task was started.
      taskStatus:
        $ref: '#/definitions/AuditMitigationActionsTaskStatus'
        description: The current state of the audit mitigation actions task.
    description: Information about an audit mitigation actions task that is returned by <code>ListAuditMitigationActionsTasks</code>.
  AuditMitigationActionsTaskMetadataList:
    type: array
    items:
      $ref: '#/definitions/AuditMitigationActionsTaskMetadata'
  TaskStatisticsForAuditCheck:
    type: object
    properties:
      totalFindingsCount:
        $ref: '#/definitions/TotalFindingsCount'
        description: The total number of findings to which a task is being applied.
      failedFindingsCount:
        $ref: '#/definitions/FailedFindingsCount'
        description: The number of findings for which at least one of the actions failed when applied.
      succeededFindingsCount:
        $ref: '#/definitions/SucceededFindingsCount'
        description: The number of findings for which all mitigation actions succeeded when applied.
      skippedFindingsCount:
        $ref: '#/definitions/SkippedFindingsCount'
        description: The number of findings skipped because of filter conditions provided in the parameters to the command.
      canceledFindingsCount:
        $ref: '#/definitions/CanceledFindingsCount'
        description: The number of findings to which the mitigation action task was canceled when applied.
    description: Provides summary counts of how many tasks for findings are in a particular state. This information is included in the response from DescribeAuditMitigationActionsTask.
  AuditMitigationActionsTaskStatistics:
    type: object
    additionalProperties:
      $ref: '#/definitions/TaskStatisticsForAuditCheck'
  AuditMitigationActionsTaskTarget:
    type: object
    properties:
      auditTaskId:
        $ref: '#/definitions/AuditTaskId'
        description: 'If the task will apply a mitigation action to findings from a specific audit, this value uniquely identifies the audit.'
      findingIds:
        $ref: '#/definitions/FindingIds'
        description: 'If the task will apply a mitigation action to one or more listed findings, this value uniquely identifies those findings.'
      auditCheckToReasonCodeFilter:
        $ref: '#/definitions/AuditCheckToReasonCodeFilter'
        description: Specifies a filter in the form of an audit check and set of reason codes that identify the findings from the audit to which the audit mitigation actions task apply.
    description: 'Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.'
  AuditNotificationTargetConfigurations:
    type: object
    additionalProperties:
      $ref: '#/definitions/AuditNotificationTarget'
  AuditNotificationType:
    type: string
    enum:
      - SNS
  AuditTaskStatus:
    type: string
    enum:
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - CANCELED
  AuditTaskType:
    type: string
    enum:
      - ON_DEMAND_AUDIT_TASK
      - SCHEDULED_AUDIT_TASK
  AuditTaskMetadata:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: The ID of this audit.
      taskStatus:
        $ref: '#/definitions/AuditTaskStatus'
        description: 'The status of this audit. One of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".'
      taskType:
        $ref: '#/definitions/AuditTaskType'
        description: The type of this audit. One of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED_AUDIT_TASK".
    description: The audits that were performed.
  AuditTaskMetadataList:
    type: array
    items:
      $ref: '#/definitions/AuditTaskMetadata'
  AuthDecision:
    type: string
    enum:
      - ALLOWED
      - EXPLICIT_DENY
      - IMPLICIT_DENY
  Resources:
    type: array
    items:
      $ref: '#/definitions/Resource'
  AuthInfos:
    type: array
    items:
      $ref: '#/definitions/AuthInfo'
    minItems: 1
    maxItems: 10
  Denied:
    type: object
    properties:
      implicitDeny:
        $ref: '#/definitions/ImplicitDeny'
        description: Information that implicitly denies the authorization. When a policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.
      explicitDeny:
        $ref: '#/definitions/ExplicitDeny'
        description: 'Information that explicitly denies the authorization. '
    description: Contains information that denied the authorization.
  MissingContextValues:
    type: array
    items:
      $ref: '#/definitions/MissingContextValue'
  AuthResult:
    type: object
    properties:
      authInfo:
        $ref: '#/definitions/AuthInfo'
        description: Authorization information.
      allowed:
        $ref: '#/definitions/Allowed'
        description: The policies and statements that allowed the specified action.
      denied:
        $ref: '#/definitions/Denied'
        description: The policies and statements that denied the specified action.
      authDecision:
        $ref: '#/definitions/AuthDecision'
        description: The final authorization decision of this scenario. Multiple statements are taken into account when determining the authorization decision. An explicit deny statement can override multiple allow statements.
      missingContextValues:
        $ref: '#/definitions/MissingContextValues'
        description: Contains any missing context values found while evaluating policy.
    description: The authorizer result.
  AuthResults:
    type: array
    items:
      $ref: '#/definitions/AuthResult'
  AuthorizerArn:
    type: string
  AuthorizerConfig:
    type: object
    properties:
      defaultAuthorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The name of the authorization service for a domain configuration.
      allowAuthorizerOverride:
        $ref: '#/definitions/AllowAuthorizerOverride'
        description: A Boolean that specifies whether the domain configuration's authorization service can be overridden.
    description: An object that specifies the authorization service for a domain.
  AuthorizerFunctionArn:
    type: string
  TokenKeyName:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  PublicKeyMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/KeyValue'
  AuthorizerStatus:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
  DateType:
    type: string
    format: date-time
  BooleanKey:
    type: boolean
  AuthorizerDescription:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
      authorizerFunctionArn:
        $ref: '#/definitions/AuthorizerFunctionArn'
        description: The authorizer's Lambda function ARN.
      tokenKeyName:
        $ref: '#/definitions/TokenKeyName'
        description: The key used to extract the token from the HTTP headers.
      tokenSigningPublicKeys:
        $ref: '#/definitions/PublicKeyMap'
        description: The public keys used to validate the token signature returned by your custom authentication service.
      status:
        $ref: '#/definitions/AuthorizerStatus'
        description: The status of the authorizer.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the authorizer was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the authorizer was last updated.
      signingDisabled:
        $ref: '#/definitions/BooleanKey'
        description: Specifies whether AWS IoT validates the token signature in an authorization request.
    description: The authorizer description.
  AuthorizerSummary:
    type: object
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
      authorizerArn:
        $ref: '#/definitions/AuthorizerArn'
        description: The authorizer ARN.
    description: The authorizer summary.
  Authorizers:
    type: array
    items:
      $ref: '#/definitions/AuthorizerSummary'
  AutoRegistrationStatus:
    type: string
    enum:
      - ENABLE
      - DISABLE
  Average:
    type: number
    format: double
  AwsIotJobArn:
    type: string
  AwsIotJobId:
    type: string
  AwsJobExecutionsRolloutConfig:
    type: object
    properties:
      maximumPerMinute:
        $ref: '#/definitions/MaximumPerMinute'
        description: The maximum number of OTA update job executions started per minute.
    description: Configuration for the rollout of OTA updates.
  AwsJobPresignedUrlConfig:
    type: object
    properties:
      expiresInSec:
        $ref: '#/definitions/ExpiresInSeconds'
        description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 1800 seconds. Pre-signed URLs are generated when a request for the job document is received.'
    description: Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.
  BehaviorName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  BehaviorCriteria:
    type: object
    properties:
      comparisonOperator:
        $ref: '#/definitions/ComparisonOperator'
        description: The operator that relates the thing measured (<code>metric</code>) to the criteria (containing a <code>value</code> or <code>statisticalThreshold</code>).
      value:
        $ref: '#/definitions/MetricValue'
        description: The value to be compared with the <code>metric</code>.
      durationSeconds:
        $ref: '#/definitions/DurationSeconds'
        description: 'Use this to specify the time duration over which the behavior is evaluated, for those criteria which have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>). For a <code>statisticalThreshhold</code> metric comparison, measurements from all devices are accumulated over this time duration before being used to calculate percentiles, and later, measurements from an individual device are also accumulated over this time duration before being given a percentile rank.'
      consecutiveDatapointsToAlarm:
        $ref: '#/definitions/ConsecutiveDatapointsToAlarm'
        description: 'If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.'
      consecutiveDatapointsToClear:
        $ref: '#/definitions/ConsecutiveDatapointsToClear'
        description: 'If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.'
      statisticalThreshold:
        $ref: '#/definitions/StatisticalThreshold'
        description: A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
    description: The criteria by which the behavior is determined to be normal.
  ComparisonOperator:
    type: string
    enum:
      - less-than
      - less-than-equals
      - greater-than
      - greater-than-equals
      - in-cidr-set
      - not-in-cidr-set
      - in-port-set
      - not-in-port-set
  DurationSeconds:
    type: integer
  ConsecutiveDatapointsToAlarm:
    type: integer
    minimum: 1
    maximum: 10
  ConsecutiveDatapointsToClear:
    type: integer
    minimum: 1
    maximum: 10
  StatisticalThreshold:
    type: object
    properties:
      statistic:
        $ref: '#/definitions/EvaluationStatistic'
        description: 'The percentile which resolves to a threshold value by which compliance with a behavior is determined. Metrics are collected over the specified period (<code>durationSeconds</code>) from all reporting devices in your account and statistical ranks are calculated. Then, the measurements from a device are collected over the same period. If the accumulated measurements from the device fall above or below (<code>comparisonOperator</code>) the value associated with the percentile specified, then the device is considered to be in compliance with the behavior, otherwise a violation occurs.'
    description: A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
  Behaviors:
    type: array
    items:
      $ref: '#/definitions/Behavior'
    maxItems: 100
  BillingGroupId:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    minLength: 1
    maxLength: 128
  CreationDate:
    type: string
    format: date-time
  BillingGroupMetadata:
    type: object
    properties:
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The date the billing group was created.
    description: Additional information about the billing group.
  GroupNameAndArn:
    type: object
    properties:
      groupName:
        $ref: '#/definitions/ThingGroupName'
        description: The group name.
      groupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The group ARN.
    description: The name and ARN of a group.
  BillingGroupNameAndArnList:
    type: array
    items:
      $ref: '#/definitions/GroupNameAndArn'
  BillingGroupProperties:
    type: object
    properties:
      billingGroupDescription:
        $ref: '#/definitions/BillingGroupDescription'
        description: The description of the billing group.
    description: The properties of a billing group.
  Boolean:
    type: boolean
  BucketName:
    type: string
  CertificateArn:
    type: string
  CACertificateStatus:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
  CACertificate:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the CA certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the CA certificate.
      status:
        $ref: '#/definitions/CACertificateStatus'
        description: <p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the CA certificate was created.
    description: A CA certificate.
  CertificatePem:
    type: string
    description: The PEM of a certificate.
    minLength: 1
    maxLength: 65536
  CustomerVersion:
    type: integer
    minimum: 1
  GenerationId:
    type: string
  CertificateValidity:
    type: object
    properties:
      notBefore:
        $ref: '#/definitions/DateType'
        description: The certificate is not valid before this date.
      notAfter:
        $ref: '#/definitions/DateType'
        description: The certificate is not valid after this date.
    description: When the certificate is valid.
  CACertificateDescription:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The CA certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The CA certificate ID.
      status:
        $ref: '#/definitions/CACertificateStatus'
        description: The status of a CA certificate.
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The CA certificate data, in PEM format.'
      ownedBy:
        $ref: '#/definitions/AwsAccountId'
        description: The owner of the CA certificate.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date the CA certificate was created.
      autoRegistrationStatus:
        $ref: '#/definitions/AutoRegistrationStatus'
        description: Whether the CA certificate configured for auto registration of device certificates. Valid values are "ENABLE" and "DISABLE"
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date the CA certificate was last modified.
      customerVersion:
        $ref: '#/definitions/CustomerVersion'
        description: The customer version of the CA certificate.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the CA certificate.
      validity:
        $ref: '#/definitions/CertificateValidity'
        description: When the CA certificate is valid.
    description: Describes a CA certificate.
  CACertificateUpdateAction:
    type: string
    enum:
      - DEACTIVATE
  CACertificates:
    type: array
    items:
      $ref: '#/definitions/CACertificate'
  CancelAuditMitigationActionsTaskRequest:
    type: object
    properties: {}
  CancelAuditTaskRequest:
    type: object
    properties: {}
  CancelCertificateTransferRequest:
    type: object
    properties: {}
    description: The input for the CancelCertificateTransfer operation.
  ForceFlag:
    type: boolean
  ExpectedVersion:
    type: integer
  DetailsMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/DetailsValue'
  CancelJobExecutionRequest:
    type: object
    properties:
      expectedVersion:
        $ref: '#/definitions/ExpectedVersion'
        description: '(Optional) The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)'
      statusDetails:
        $ref: '#/definitions/DetailsMap'
        description: 'A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.'
  ReasonCode:
    type: string
    pattern: '[\p{Upper}\p{Digit}_]+'
    maxLength: 128
  CancelJobRequest:
    type: object
    properties:
      reasonCode:
        $ref: '#/definitions/ReasonCode'
        description: (Optional)A reason code string that explains why the job was canceled.
      comment:
        $ref: '#/definitions/Comment'
        description: An optional comment string describing why the job was canceled.
  CanceledChecksCount:
    type: integer
  CanceledFindingsCount:
    type: integer
  CanceledThings:
    type: integer
  CannedAccessControlList:
    type: string
    enum:
      - private
      - public-read
      - public-read-write
      - aws-exec-read
      - authenticated-read
      - bucket-owner-read
      - bucket-owner-full-control
      - log-delivery-write
  CertificateStatus:
    type: string
    enum:
      - ACTIVE
      - INACTIVE
      - REVOKED
      - PENDING_TRANSFER
      - REGISTER_INACTIVE
      - PENDING_ACTIVATION
  Certificate:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)
      status:
        $ref: '#/definitions/CertificateStatus'
        description: <p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date and time the certificate was created.
    description: Information about a certificate.
  TransferData:
    type: object
    properties:
      transferMessage:
        $ref: '#/definitions/Message'
        description: The transfer message.
      rejectReason:
        $ref: '#/definitions/Message'
        description: The reason why the transfer was rejected.
      transferDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer took place.
      acceptDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer was accepted.
      rejectDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer was rejected.
    description: Data used to transfer a certificate to an AWS account.
  CertificateDescription:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The ARN of the certificate.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate.
      caCertificateId:
        $ref: '#/definitions/CertificateId'
        description: The certificate ID of the CA certificate used to sign this certificate.
      status:
        $ref: '#/definitions/CertificateStatus'
        description: The status of the certificate.
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
      ownedBy:
        $ref: '#/definitions/AwsAccountId'
        description: The ID of the AWS account that owns the certificate.
      previousOwnedBy:
        $ref: '#/definitions/AwsAccountId'
        description: The ID of the AWS account of the previous owner of the certificate.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date and time the certificate was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date and time the certificate was last modified.
      customerVersion:
        $ref: '#/definitions/CustomerVersion'
        description: The customer version of the certificate.
      transferData:
        $ref: '#/definitions/TransferData'
        description: The transfer data.
      generationId:
        $ref: '#/definitions/GenerationId'
        description: The generation ID of the certificate.
      validity:
        $ref: '#/definitions/CertificateValidity'
        description: When the certificate is valid.
    description: Describes a certificate.
  CertificateName:
    type: string
  CertificatePathOnDevice:
    type: string
  CertificateSigningRequest:
    type: string
    minLength: 1
  Certificates:
    type: array
    items:
      $ref: '#/definitions/Certificate'
  ChannelName:
    type: string
  Cidr:
    type: string
    pattern: '[a-fA-F0-9:\.\/]+'
    minLength: 2
    maxLength: 43
  Cidrs:
    type: array
    items:
      $ref: '#/definitions/Cidr'
  ClearDefaultAuthorizerRequest:
    type: object
    properties: {}
  ClientRequestToken:
    type: string
    pattern: '^[a-zA-Z0-9-_]+$'
    minLength: 1
    maxLength: 64
  StateReason:
    type: string
  StateValue:
    type: string
  String:
    type: string
  Code:
    type: string
  SigningJobId:
    type: string
  StartSigningJobParameter:
    type: object
    properties:
      signingProfileParameter:
        $ref: '#/definitions/SigningProfileParameter'
        description: Describes the code-signing profile.
      signingProfileName:
        $ref: '#/definitions/SigningProfileName'
        description: The code-signing profile name.
      destination:
        $ref: '#/definitions/Destination'
        description: The location to write the code-signed file.
    description: Information required to start a signing job.
  CustomCodeSigning:
    type: object
    properties:
      signature:
        $ref: '#/definitions/CodeSigningSignature'
        description: The signature for the file.
      certificateChain:
        $ref: '#/definitions/CodeSigningCertificateChain'
        description: The certificate chain.
      hashAlgorithm:
        $ref: '#/definitions/HashAlgorithm'
        description: The hash algorithm used to code sign the file.
      signatureAlgorithm:
        $ref: '#/definitions/SignatureAlgorithm'
        description: The signature algorithm used to code sign the file.
    description: Describes a custom method used to code sign a file.
  CodeSigning:
    type: object
    properties:
      awsSignerJobId:
        $ref: '#/definitions/SigningJobId'
        description: The ID of the AWSSignerJob which was created to sign the file.
      startSigningJobParameter:
        $ref: '#/definitions/StartSigningJobParameter'
        description: Describes the code-signing job.
      customCodeSigning:
        $ref: '#/definitions/CustomCodeSigning'
        description: A custom method for code signing a file.
    description: Describes the method to use when code signing a file.
  InlineDocument:
    type: string
  CodeSigningCertificateChain:
    type: object
    properties:
      certificateName:
        $ref: '#/definitions/CertificateName'
        description: The name of the certificate.
      inlineDocument:
        $ref: '#/definitions/InlineDocument'
        description: A base64 encoded binary representation of the code signing certificate chain.
    description: Describes the certificate chain being used when code signing a file.
  Signature:
    type: string
  CodeSigningSignature:
    type: object
    properties:
      inlineDocument:
        $ref: '#/definitions/Signature'
        description: A base64 encoded binary representation of the code signing signature.
    description: Describes the signature for a file.
  CompliantChecksCount:
    type: integer
  ConfirmationToken:
    type: string
    minLength: 1
    maxLength: 2048
  ConfirmTopicRuleDestinationRequest:
    type: object
    properties: {}
  ConnectivityTimestamp:
    type: integer
  Count:
    type: integer
  CreateAuthorizerRequest:
    type: object
    required:
      - authorizerFunctionArn
    properties:
      authorizerFunctionArn:
        $ref: '#/definitions/AuthorizerFunctionArn'
        description: The ARN of the authorizer's Lambda function.
      tokenKeyName:
        $ref: '#/definitions/TokenKeyName'
        description: The name of the token key used to extract the token from the HTTP headers.
      tokenSigningPublicKeys:
        $ref: '#/definitions/PublicKeyMap'
        description: The public keys used to verify the digital signature returned by your custom authentication service.
      status:
        $ref: '#/definitions/AuthorizerStatus'
        description: The status of the create authorizer request.
      signingDisabled:
        $ref: '#/definitions/BooleanKey'
        description: Specifies whether AWS IoT validates the token signature in an authorization request.
  TagList:
    type: array
    items:
      $ref: '#/definitions/Tag'
  CreateBillingGroupRequest:
    type: object
    properties:
      billingGroupProperties:
        $ref: '#/definitions/BillingGroupProperties'
        description: The properties of the billing group.
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the billing group.
  CreateCertificateFromCsrRequest:
    type: object
    required:
      - certificateSigningRequest
    properties:
      certificateSigningRequest:
        $ref: '#/definitions/CertificateSigningRequest'
        description: The certificate signing request (CSR).
    description: The input for the CreateCertificateFromCsr operation.
  DomainConfigurationName:
    type: string
    pattern: '[\w.-]+'
    minLength: 1
    maxLength: 128
  DomainName:
    type: string
    minLength: 1
    maxLength: 253
  ServerCertificateArns:
    type: array
    items:
      $ref: '#/definitions/AcmCertificateArn'
    minItems: 0
    maxItems: 1
  ServiceType:
    type: string
    enum:
      - DATA
      - CREDENTIAL_PROVIDER
      - JOBS
  CreateDomainConfigurationRequest:
    type: object
    properties:
      domainName:
        $ref: '#/definitions/DomainName'
        description: The name of the domain.
      serverCertificateArns:
        $ref: '#/definitions/ServerCertificateArns'
        description: The ARNs of the certificates that AWS IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for AWS-managed domains.
      validationCertificateArn:
        $ref: '#/definitions/AcmCertificateArn'
        description: The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for AWS-managed domains.
      authorizerConfig:
        $ref: '#/definitions/AuthorizerConfig'
        description: An object that specifies the authorization service for a domain.
      serviceType:
        $ref: '#/definitions/ServiceType'
        description: The type of service delivered by the endpoint.
  DomainConfigurationArn:
    type: string
  ThingGroupProperties:
    type: object
    properties:
      thingGroupDescription:
        $ref: '#/definitions/ThingGroupDescription'
        description: The thing group description.
      attributePayload:
        $ref: '#/definitions/AttributePayload'
        description: The thing group attributes in JSON format.
    description: Thing group properties.
  IndexName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  QueryString:
    type: string
    minLength: 1
  QueryVersion:
    type: string
  CreateDynamicThingGroupRequest:
    type: object
    required:
      - queryString
    properties:
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The dynamic thing group properties.
      indexName:
        $ref: '#/definitions/IndexName'
        description: '<p>The dynamic thing group index name.</p> <note> <p>Currently one index is supported: "AWS_Things".</p> </note>'
      queryString:
        $ref: '#/definitions/QueryString'
        description: '<p>The dynamic thing group search query string.</p> <p>See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query Syntax</a> for information about query string syntax.</p>'
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: '<p>The dynamic thing group query version.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the dynamic thing group.
  ThingGroupId:
    type: string
    pattern: '[a-zA-Z0-9\-]+'
    minLength: 1
    maxLength: 128
  JobDocumentSource:
    type: string
    minLength: 1
    maxLength: 1350
  JobDocument:
    type: string
    maxLength: 32768
  PresignedUrlConfig:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
      expiresInSec:
        $ref: '#/definitions/ExpiresInSec'
        description: 'How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.'
    description: Configuration for pre-signed S3 URLs.
  TargetSelection:
    type: string
    enum:
      - CONTINUOUS
      - SNAPSHOT
  JobExecutionsRolloutConfig:
    type: object
    properties:
      maximumPerMinute:
        $ref: '#/definitions/MaxJobExecutionsPerMin'
        description: 'The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.'
      exponentialRate:
        $ref: '#/definitions/ExponentialRolloutRate'
        description: The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.
    description: Allows you to create a staged rollout of a job.
  TimeoutConfig:
    type: object
    properties:
      inProgressTimeoutInMinutes:
        $ref: '#/definitions/InProgressTimeoutInMinutes'
        description: 'Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can''t be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.'
    description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
  CreateJobRequest:
    type: object
    required:
      - targets
    properties:
      targets:
        $ref: '#/definitions/JobTargets'
        description: A list of things and thing groups to which the job should be sent.
      documentSource:
        $ref: '#/definitions/JobDocumentSource'
        description: An S3 link to the job document.
      document:
        $ref: '#/definitions/JobDocument'
        description: '<p>The job document.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>'
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
      presignedUrlConfig:
        $ref: '#/definitions/PresignedUrlConfig'
        description: Configuration information for pre-signed S3 URLs.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
      jobExecutionsRolloutConfig:
        $ref: '#/definitions/JobExecutionsRolloutConfig'
        description: Allows you to create a staged rollout of the job.
      abortConfig:
        $ref: '#/definitions/AbortConfig'
        description: Allows you to create criteria to abort a job.
      timeoutConfig:
        $ref: '#/definitions/TimeoutConfig'
        description: 'Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>.'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the job.
  CreateKeysAndCertificateRequest:
    type: object
    properties: {}
    description: The input for the CreateKeysAndCertificate operation.
  KeyPair:
    type: object
    properties:
      PublicKey:
        $ref: '#/definitions/PublicKey'
        description: The public key.
      PrivateKey:
        $ref: '#/definitions/PrivateKey'
        description: The private key.
    description: Describes a key pair.
  MitigationActionParams:
    type: object
    properties:
      updateDeviceCertificateParams:
        $ref: '#/definitions/UpdateDeviceCertificateParams'
        description: Parameters to define a mitigation action that changes the state of the device certificate to inactive.
      updateCACertificateParams:
        $ref: '#/definitions/UpdateCACertificateParams'
        description: Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
      addThingsToThingGroupParams:
        $ref: '#/definitions/AddThingsToThingGroupParams'
        description: 'Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.'
      replaceDefaultPolicyVersionParams:
        $ref: '#/definitions/ReplaceDefaultPolicyVersionParams'
        description: Parameters to define a mitigation action that adds a blank policy to restrict permissions.
      enableIoTLoggingParams:
        $ref: '#/definitions/EnableIoTLoggingParams'
        description: Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.
      publishFindingToSnsParams:
        $ref: '#/definitions/PublishFindingToSnsParams'
        description: Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
    description: 'The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).'
  CreateMitigationActionRequest:
    type: object
    required:
      - roleArn
      - actionParams
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that is used to apply the mitigation action.
      actionParams:
        $ref: '#/definitions/MitigationActionParams'
        description: Defines the type of action and the parameters for that action.
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata that can be used to manage the mitigation action.
  MitigationActionArn:
    type: string
  OTAUpdateId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  OTAUpdateDescription:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  Targets:
    type: array
    items:
      $ref: '#/definitions/Target'
    minItems: 1
  Protocols:
    type: array
    items:
      $ref: '#/definitions/Protocol'
    minItems: 1
    maxItems: 2
  OTAUpdateFiles:
    type: array
    items:
      $ref: '#/definitions/OTAUpdateFile'
    minItems: 1
    maxItems: 50
  CreateOTAUpdateRequest:
    type: object
    required:
      - targets
      - files
      - roleArn
    properties:
      description:
        $ref: '#/definitions/OTAUpdateDescription'
        description: The description of the OTA update.
      targets:
        $ref: '#/definitions/Targets'
        description: The targeted devices to receive OTA updates.
      protocols:
        $ref: '#/definitions/Protocols'
        description: 'The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.'
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.'
      awsJobExecutionsRolloutConfig:
        $ref: '#/definitions/AwsJobExecutionsRolloutConfig'
        description: Configuration for the rollout of OTA updates.
      awsJobPresignedUrlConfig:
        $ref: '#/definitions/AwsJobPresignedUrlConfig'
        description: Configuration information for pre-signed URLs.
      files:
        $ref: '#/definitions/OTAUpdateFiles'
        description: The files to be streamed by the OTA update.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The IAM role that allows access to the AWS IoT Jobs service.
      additionalParameters:
        $ref: '#/definitions/AdditionalParameterMap'
        description: A list of additional OTA update parameters which are name-value pairs.
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage updates.
  OTAUpdateArn:
    type: string
  OTAUpdateStatus:
    type: string
    enum:
      - CREATE_PENDING
      - CREATE_IN_PROGRESS
      - CREATE_COMPLETE
      - CREATE_FAILED
  PolicyDocument:
    type: string
  CreatePolicyRequest:
    type: object
    required:
      - policyDocument
    properties:
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: 'The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.'
    description: The input for the CreatePolicy operation.
  PolicyArn:
    type: string
  PolicyVersionId:
    type: string
    pattern: '[0-9]+'
  SetAsDefault:
    type: boolean
  CreatePolicyVersionRequest:
    type: object
    required:
      - policyDocument
    properties:
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: 'The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespace.'
    description: The input for the CreatePolicyVersion operation.
  IsDefaultVersion:
    type: boolean
  TemplateName:
    type: string
    pattern: '^[0-9A-Za-z_-]+$'
    minLength: 1
    maxLength: 36
  CreateProvisioningClaimRequest:
    type: object
    properties: {}
  TemplateDescription:
    type: string
    pattern: '[^\p{C}]*'
    minLength: 0
    maxLength: 500
  CreateProvisioningTemplateRequest:
    type: object
    required:
      - templateName
      - templateBody
      - provisioningRoleArn
    properties:
      templateName:
        $ref: '#/definitions/TemplateName'
        description: The name of the fleet provisioning template.
      description:
        $ref: '#/definitions/TemplateDescription'
        description: The description of the fleet provisioning template.
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The JSON formatted contents of the fleet provisioning template.
      enabled:
        $ref: '#/definitions/Enabled'
        description: 'True to enable the fleet provisioning template, otherwise false.'
      provisioningRoleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
      tags:
        $ref: '#/definitions/TagList'
        description: '<p>Metadata which can be used to manage the fleet provisioning template.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>'
  TemplateArn:
    type: string
  TemplateVersionId:
    type: integer
  CreateProvisioningTemplateVersionRequest:
    type: object
    required:
      - templateBody
    properties:
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The JSON formatted contents of the fleet provisioning template.
  RoleAlias:
    type: string
    pattern: '[\w=,@-]+'
    minLength: 1
    maxLength: 128
  CredentialDurationSeconds:
    type: integer
    minimum: 900
    maximum: 3600
  CreateRoleAliasRequest:
    type: object
    required:
      - roleArn
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN.
      credentialDurationSeconds:
        $ref: '#/definitions/CredentialDurationSeconds'
        description: How long (in seconds) the credentials will be valid.
  DayOfMonth:
    type: string
    pattern: '^([1-9]|[12][0-9]|3[01])$|^LAST$'
  DayOfWeek:
    type: string
    enum:
      - SUN
      - MON
      - TUE
      - WED
      - THU
      - FRI
      - SAT
  TargetAuditCheckNames:
    type: array
    items:
      $ref: '#/definitions/AuditCheckName'
  ScheduledAuditName:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  CreateScheduledAuditRequest:
    type: object
    required:
      - frequency
      - targetCheckNames
    properties:
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: 'How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY" or "MONTHLY". The start time of each audit is determined by the system.'
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit takes place. Can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: 'The day of the week on which the scheduled audit takes place. Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".'
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata that can be used to manage the scheduled audit.
  ScheduledAuditArn:
    type: string
  SecurityProfileDescription:
    type: string
    pattern: '[\p{Graph}\x20]*'
    maxLength: 1000
  CreateSecurityProfileRequest:
    type: object
    properties:
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: A description of the security profile.
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Specifies the destinations to which alerts are sent. (Alerts are always sent to the console.) Alerts are generated when a device (thing) violates a behavior.
      additionalMetricsToRetain:
        $ref: '#/definitions/AdditionalMetricsToRetainList'
        description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here.'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata that can be used to manage the security profile.
  SecurityProfileArn:
    type: string
  StreamId:
    type: string
    pattern: '[a-zA-Z0-9_-]+'
    minLength: 1
    maxLength: 128
  StreamDescription:
    type: string
    pattern: '[^\p{C}]+'
    maxLength: 2028
  StreamFiles:
    type: array
    items:
      $ref: '#/definitions/StreamFile'
    minItems: 1
    maxItems: 50
  CreateStreamRequest:
    type: object
    required:
      - files
      - roleArn
    properties:
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
      files:
        $ref: '#/definitions/StreamFiles'
        description: The files to stream.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: An IAM role that allows the IoT service principal assumes to access your S3 files.
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage streams.
  StreamArn:
    type: string
  StreamVersion:
    type: integer
    minimum: 0
    maximum: 65535
  CreateThingGroupRequest:
    type: object
    properties:
      parentGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The name of the parent thing group.
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The thing group properties.
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the thing group.
  ThingTypeName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  CreateThingRequest:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type associated with the new thing.
      attributePayload:
        $ref: '#/definitions/AttributePayload'
        description: '<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\"attributes\":{\"string1\":\"string2\"}}</code> </p>'
      billingGroupName:
        $ref: '#/definitions/BillingGroupName'
        description: The name of the billing group the thing will be added to.
    description: The input for the CreateThing operation.
  ThingId:
    type: string
  ThingTypeProperties:
    type: object
    properties:
      thingTypeDescription:
        $ref: '#/definitions/ThingTypeDescription'
        description: The description of the thing type.
      searchableAttributes:
        $ref: '#/definitions/SearchableAttributes'
        description: A list of searchable thing attribute names.
    description: 'The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.'
  CreateThingTypeRequest:
    type: object
    properties:
      thingTypeProperties:
        $ref: '#/definitions/ThingTypeProperties'
        description: 'The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.'
      tags:
        $ref: '#/definitions/TagList'
        description: Metadata which can be used to manage the thing type.
    description: The input for the CreateThingType operation.
  ThingTypeArn:
    type: string
  ThingTypeId:
    type: string
  TopicRuleDestinationConfiguration:
    type: object
    properties:
      httpUrlConfiguration:
        $ref: '#/definitions/HttpUrlDestinationConfiguration'
        description: Configuration of the HTTP URL.
    description: Configuration of the topic rule destination.
  CreateTopicRuleDestinationRequest:
    type: object
    required:
      - destinationConfiguration
    properties:
      destinationConfiguration:
        $ref: '#/definitions/TopicRuleDestinationConfiguration'
        description: The topic rule destination configuration.
  TopicRuleDestination:
    type: object
    properties:
      arn:
        $ref: '#/definitions/AwsArn'
        description: The topic rule destination URL.
      status:
        $ref: '#/definitions/TopicRuleDestinationStatus'
        description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
      statusReason:
        $ref: '#/definitions/String'
        description: Additional details or reason why the topic rule destination is in the current status.
      httpUrlProperties:
        $ref: '#/definitions/HttpUrlDestinationProperties'
        description: Properties of the HTTP URL.
    description: A topic rule destination.
  RuleName:
    type: string
    pattern: '^[a-zA-Z0-9_]+$'
    minLength: 1
    maxLength: 128
  TopicRulePayload:
    type: object
    required:
      - sql
      - actions
    properties:
      sql:
        $ref: '#/definitions/SQL'
        description: 'The SQL statement used to query the topic. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference">AWS IoT SQL Reference</a> in the <i>AWS IoT Developer Guide</i>.'
      description:
        $ref: '#/definitions/Description'
        description: The description of the rule.
      actions:
        $ref: '#/definitions/ActionList'
        description: The actions associated with the rule.
      ruleDisabled:
        $ref: '#/definitions/IsDisabled'
        description: Specifies whether the rule is disabled.
      awsIotSqlVersion:
        $ref: '#/definitions/AwsIotSqlVersion'
        description: The version of the SQL rules engine to use when evaluating the rule.
      errorAction:
        $ref: '#/definitions/Action'
        description: The action to take when an error occurs.
    description: Describes a rule.
  CreateTopicRuleRequest:
    type: object
    required:
      - topicRulePayload
    properties:
      topicRulePayload:
        $ref: '#/definitions/TopicRulePayload'
        description: The rule payload.
    description: The input for the CreateTopicRule operation.
  CreatedAtDate:
    type: string
    format: date-time
  HashAlgorithm:
    type: string
  SignatureAlgorithm:
    type: string
  DeleteScheduledAudits:
    type: boolean
  DeleteAccountAuditConfigurationRequest:
    type: object
    properties: {}
  DeleteAdditionalMetricsToRetain:
    type: boolean
  DeleteAlertTargets:
    type: boolean
  DeleteAuthorizerRequest:
    type: object
    properties: {}
  DeleteBehaviors:
    type: boolean
  OptionalVersion:
    type: integer
  DeleteBillingGroupRequest:
    type: object
    properties: {}
  DeleteCACertificateRequest:
    type: object
    properties: {}
    description: Input for the DeleteCACertificate operation.
  ForceDelete:
    type: boolean
  DeleteCertificateRequest:
    type: object
    properties: {}
    description: The input for the DeleteCertificate operation.
  DeleteDomainConfigurationRequest:
    type: object
    properties: {}
  DeleteDynamicThingGroupRequest:
    type: object
    properties: {}
  ExecutionNumber:
    type: integer
  DeleteJobExecutionRequest:
    type: object
    properties: {}
  DeleteJobRequest:
    type: object
    properties: {}
  DeleteMitigationActionRequest:
    type: object
    properties: {}
  DeleteStream:
    type: boolean
  ForceDeleteAWSJob:
    type: boolean
  DeleteOTAUpdateRequest:
    type: object
    properties: {}
  DeletePolicyRequest:
    type: object
    properties: {}
    description: The input for the DeletePolicy operation.
  DeletePolicyVersionRequest:
    type: object
    properties: {}
    description: The input for the DeletePolicyVersion operation.
  DeleteProvisioningTemplateRequest:
    type: object
    properties: {}
  DeleteProvisioningTemplateVersionRequest:
    type: object
    properties: {}
  DeleteRegistrationCodeRequest:
    type: object
    properties: {}
    description: The input for the DeleteRegistrationCode operation.
  DeleteRoleAliasRequest:
    type: object
    properties: {}
  DeleteScheduledAuditRequest:
    type: object
    properties: {}
  DeleteSecurityProfileRequest:
    type: object
    properties: {}
  DeleteStreamRequest:
    type: object
    properties: {}
  DeleteThingGroupRequest:
    type: object
    properties: {}
  DeleteThingRequest:
    type: object
    properties: {}
    description: The input for the DeleteThing operation.
  DeleteThingTypeRequest:
    type: object
    properties: {}
    description: The input for the DeleteThingType operation.
  DeleteTopicRuleDestinationRequest:
    type: object
    properties: {}
  DeleteTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the DeleteTopicRule operation.
  DeleteV2LoggingLevelRequest:
    type: object
    properties: {}
  DeliveryStreamName:
    type: string
  ImplicitDeny:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: 'Policies that don''t contain a matching allow or deny statement for the specified action on the specified resource. '
    description: Information that implicitly denies authorization. When policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.
  ExplicitDeny:
    type: object
    properties:
      policies:
        $ref: '#/definitions/Policies'
        description: The policies that denied the authorization.
    description: Information that explicitly denies authorization.
  UndoDeprecate:
    type: boolean
  DeprecateThingTypeRequest:
    type: object
    properties:
      undoDeprecate:
        $ref: '#/definitions/UndoDeprecate'
        description: 'Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.'
    description: The input for the DeprecateThingType operation.
  DeprecationDate:
    type: string
    format: date-time
  DescribeAccountAuditConfigurationRequest:
    type: object
    properties: {}
  DescribeAuditFindingRequest:
    type: object
    properties: {}
  DescribeAuditMitigationActionsTaskRequest:
    type: object
    properties: {}
  MitigationActionList:
    type: array
    items:
      $ref: '#/definitions/MitigationAction'
  DescribeAuditTaskRequest:
    type: object
    properties: {}
  TaskStatistics:
    type: object
    properties:
      totalChecks:
        $ref: '#/definitions/TotalChecksCount'
        description: The number of checks in this audit.
      inProgressChecks:
        $ref: '#/definitions/InProgressChecksCount'
        description: The number of checks in progress.
      waitingForDataCollectionChecks:
        $ref: '#/definitions/WaitingForDataCollectionChecksCount'
        description: The number of checks waiting for data collection.
      compliantChecks:
        $ref: '#/definitions/CompliantChecksCount'
        description: The number of checks that found compliant resources.
      nonCompliantChecks:
        $ref: '#/definitions/NonCompliantChecksCount'
        description: The number of checks that found noncompliant resources.
      failedChecks:
        $ref: '#/definitions/FailedChecksCount'
        description: The number of checks.
      canceledChecks:
        $ref: '#/definitions/CanceledChecksCount'
        description: The number of checks that did not run because the audit was canceled.
    description: Statistics for the checks performed during the audit.
  DescribeAuthorizerRequest:
    type: object
    properties: {}
  DescribeBillingGroupRequest:
    type: object
    properties: {}
  Version:
    type: integer
  DescribeCACertificateRequest:
    type: object
    properties: {}
    description: The input for the DescribeCACertificate operation.
  RegistrationConfig:
    type: object
    properties:
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The template body.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role.
    description: The registration configuration.
  DescribeCertificateRequest:
    type: object
    properties: {}
    description: The input for the DescribeCertificate operation.
  DescribeDefaultAuthorizerRequest:
    type: object
    properties: {}
  ReservedDomainConfigurationName:
    type: string
    pattern: '[\w.:-]+'
    minLength: 1
    maxLength: 128
  DescribeDomainConfigurationRequest:
    type: object
    properties: {}
  ServerCertificates:
    type: array
    items:
      $ref: '#/definitions/ServerCertificateSummary'
  DomainConfigurationStatus:
    type: string
    enum:
      - ENABLED
      - DISABLED
  DomainType:
    type: string
    enum:
      - ENDPOINT
      - AWS_MANAGED
      - CUSTOMER_MANAGED
  EndpointType:
    type: string
    maxLength: 128
  DescribeEndpointRequest:
    type: object
    properties: {}
    description: The input for the DescribeEndpoint operation.
  EndpointAddress:
    type: string
  DescribeEventConfigurationsRequest:
    type: object
    properties: {}
  EventConfigurations:
    type: object
    additionalProperties:
      $ref: '#/definitions/Configuration'
  LastModifiedDate:
    type: string
    format: date-time
  DescribeIndexRequest:
    type: object
    properties: {}
  IndexStatus:
    type: string
    enum:
      - ACTIVE
      - BUILDING
      - REBUILDING
  IndexSchema:
    type: string
  DescribeJobExecutionRequest:
    type: object
    properties: {}
  JobExecution:
    type: object
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to the job when it was created.
      status:
        $ref: '#/definitions/JobExecutionStatus'
        description: 'The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT, CANCELED, or REJECTED).'
      forceCanceled:
        $ref: '#/definitions/Forced'
        description: Will be <code>true</code> if the job execution was canceled with the optional <code>force</code> parameter set to <code>true</code>.
      statusDetails:
        $ref: '#/definitions/JobExecutionStatusDetails'
        description: A collection of name/value pairs that describe the status of the job execution.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing on which the job execution is running.
      queuedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job execution was queued.'
      startedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job execution started.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job execution was last updated.'
      executionNumber:
        $ref: '#/definitions/ExecutionNumber'
        description: 'A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used in commands which return or update job execution information. '
      versionNumber:
        $ref: '#/definitions/VersionNumber'
        description: The version of the job execution. Job execution versions are incremented each time they are updated by a device.
      approximateSecondsBeforeTimedOut:
        $ref: '#/definitions/ApproximateSecondsBeforeTimedOut'
        description: The estimated number of seconds that remain before the job execution status will be changed to <code>TIMED_OUT</code>. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The actual job execution timeout can occur up to 60 seconds later than the estimated duration. This value will not be included if the job execution has reached a terminal status.
    description: The job execution object represents the execution of a job on a particular device.
  DescribeJobRequest:
    type: object
    properties: {}
  Job:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: 'An ARN identifying the job with format "arn:aws:iot:region:account:job/jobId".'
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group. '
      status:
        $ref: '#/definitions/JobStatus'
        description: 'The status of the job, one of <code>IN_PROGRESS</code>, <code>CANCELED</code>, <code>DELETION_IN_PROGRESS</code> or <code>COMPLETED</code>. '
      forceCanceled:
        $ref: '#/definitions/Forced'
        description: Will be <code>true</code> if the job was canceled with the optional <code>force</code> parameter set to <code>true</code>.
      reasonCode:
        $ref: '#/definitions/ReasonCode'
        description: 'If the job was updated, provides the reason code for the update.'
      comment:
        $ref: '#/definitions/Comment'
        description: 'If the job was updated, describes the reason for the update.'
      targets:
        $ref: '#/definitions/JobTargets'
        description: A list of IoT things and thing groups to which the job should be sent.
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
      presignedUrlConfig:
        $ref: '#/definitions/PresignedUrlConfig'
        description: Configuration for pre-signed S3 URLs.
      jobExecutionsRolloutConfig:
        $ref: '#/definitions/JobExecutionsRolloutConfig'
        description: Allows you to create a staged rollout of a job.
      abortConfig:
        $ref: '#/definitions/AbortConfig'
        description: Configuration for criteria to abort the job.
      createdAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job was created.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job was last updated.'
      completedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job was completed.'
      jobProcessDetails:
        $ref: '#/definitions/JobProcessDetails'
        description: Details about the job process.
      timeoutConfig:
        $ref: '#/definitions/TimeoutConfig'
        description: 'Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.'
    description: The <code>Job</code> object contains details about a job.
  DescribeMitigationActionRequest:
    type: object
    properties: {}
  MitigationActionType:
    type: string
    enum:
      - UPDATE_DEVICE_CERTIFICATE
      - UPDATE_CA_CERTIFICATE
      - ADD_THINGS_TO_THING_GROUP
      - REPLACE_DEFAULT_POLICY_VERSION
      - ENABLE_IOT_LOGGING
      - PUBLISH_FINDING_TO_SNS
  DescribeProvisioningTemplateRequest:
    type: object
    properties: {}
  DescribeProvisioningTemplateVersionRequest:
    type: object
    properties: {}
  DescribeRoleAliasRequest:
    type: object
    properties: {}
  RoleAliasDescription:
    type: object
    properties:
      roleAlias:
        $ref: '#/definitions/RoleAlias'
        description: The role alias.
      roleAliasArn:
        $ref: '#/definitions/RoleAliasArn'
        description: The ARN of the role alias.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN.
      owner:
        $ref: '#/definitions/AwsAccountId'
        description: The role alias owner.
      credentialDurationSeconds:
        $ref: '#/definitions/CredentialDurationSeconds'
        description: The number of seconds for which the credential is valid.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the role alias was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The UNIX timestamp of when the role alias was last modified.
    description: Role alias description.
  DescribeScheduledAuditRequest:
    type: object
    properties: {}
  DescribeSecurityProfileRequest:
    type: object
    properties: {}
  DescribeStreamRequest:
    type: object
    properties: {}
  StreamInfo:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The stream version.
      description:
        $ref: '#/definitions/StreamDescription'
        description: The description of the stream.
      files:
        $ref: '#/definitions/StreamFiles'
        description: The files to stream.
      createdAt:
        $ref: '#/definitions/DateType'
        description: The date when the stream was created.
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: The date when the stream was last updated.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: An IAM role AWS IoT assumes to access your S3 files.
    description: Information about a stream.
  DescribeThingGroupRequest:
    type: object
    properties: {}
  ThingGroupMetadata:
    type: object
    properties:
      parentGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The parent thing group name.
      rootToParentThingGroups:
        $ref: '#/definitions/ThingGroupNameAndArnList'
        description: The root parent thing group.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The UNIX timestamp of when the thing group was created.
    description: Thing group metadata.
  DynamicGroupStatus:
    type: string
    enum:
      - ACTIVE
      - BUILDING
      - REBUILDING
  TaskId:
    type: string
    maxLength: 40
  DescribeThingRegistrationTaskRequest:
    type: object
    properties: {}
  RegistryS3BucketName:
    type: string
    pattern: '[a-zA-Z0-9._-]+'
    minLength: 3
    maxLength: 256
  RegistryS3KeyName:
    type: string
    pattern: '[a-zA-Z0-9!_.*''()-\/]+'
    minLength: 1
    maxLength: 1024
  Status:
    type: string
    enum:
      - InProgress
      - Completed
      - Failed
      - Cancelled
      - Cancelling
  Percentage:
    type: integer
    minimum: 0
    maximum: 100
  DescribeThingRequest:
    type: object
    properties: {}
    description: The input for the DescribeThing operation.
  DescribeThingTypeRequest:
    type: object
    properties: {}
    description: The input for the DescribeThingType operation.
  ThingTypeMetadata:
    type: object
    properties:
      deprecationDate:
        $ref: '#/definitions/DeprecationDate'
        description: The date and time when the thing type was deprecated.
      creationDate:
        $ref: '#/definitions/CreationDate'
        description: The date and time when the thing type was created.
    description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when time was deprecated.'
  S3Destination:
    type: object
    properties:
      bucket:
        $ref: '#/definitions/S3Bucket'
        description: The S3 bucket that contains the updated firmware.
      prefix:
        $ref: '#/definitions/Prefix'
        description: The S3 prefix.
    description: Describes the location of updated firmware in S3.
  Destination:
    type: object
    properties:
      s3Destination:
        $ref: '#/definitions/S3Destination'
        description: Describes the location in S3 of the updated firmware.
    description: Describes the location of the updated firmware.
  DetachPolicyRequest:
    type: object
    required:
      - target
    properties:
      target:
        $ref: '#/definitions/PolicyTarget'
        description: The target from which the policy will be detached.
  DetachPrincipalPolicyRequest:
    type: object
    properties: {}
    description: The input for the DetachPrincipalPolicy operation.
  DetachSecurityProfileRequest:
    type: object
    properties: {}
  DetachThingPrincipalRequest:
    type: object
    properties: {}
    description: The input for the DetachThingPrincipal operation.
  DetailsKey:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  DeviceCertificateUpdateAction:
    type: string
    enum:
      - DEACTIVATE
  DisableAllLogs:
    type: boolean
  DisableTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the DisableTopicRuleRequest operation.
  DomainConfigurationSummary:
    type: object
    properties:
      domainConfigurationName:
        $ref: '#/definitions/ReservedDomainConfigurationName'
        description: The name of the domain configuration. This value must be unique to a region.
      domainConfigurationArn:
        $ref: '#/definitions/DomainConfigurationArn'
        description: The ARN of the domain configuration.
      serviceType:
        $ref: '#/definitions/ServiceType'
        description: The type of service delivered by the endpoint.
    description: '<p>The summary of a domain configuration. A domain configuration specifies custom IoT-specific information about a domain. A domain configuration can be associated with an AWS-managed domain (for example, dbc123defghijk.iot.us-west-2.amazonaws.com), a customer managed domain, or a default endpoint.</p> <ul> <li> <p>Data</p> </li> <li> <p>Jobs</p> </li> <li> <p>CredentialProvider</p> </li> </ul> <note> <p>The domain configuration feature is in public preview and is subject to change.</p> </note>'
  DomainConfigurations:
    type: array
    items:
      $ref: '#/definitions/DomainConfigurationSummary'
  TableName:
    type: string
  DynamoOperation:
    type: string
  HashKeyField:
    type: string
  HashKeyValue:
    type: string
  DynamoKeyType:
    type: string
    enum:
      - STRING
      - NUMBER
  RangeKeyField:
    type: string
  RangeKeyValue:
    type: string
  PayloadField:
    type: string
  PutItemInput:
    type: object
    required:
      - tableName
    properties:
      tableName:
        $ref: '#/definitions/TableName'
        description: The table where the message data will be written.
    description: The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.
  EffectivePolicy:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
      policyDocument:
        $ref: '#/definitions/PolicyDocument'
        description: The IAM policy document.
    description: The policy that has the effect on the authorization results.
  EffectivePolicies:
    type: array
    items:
      $ref: '#/definitions/EffectivePolicy'
  ElasticsearchEndpoint:
    type: string
    pattern: 'https?://.*'
  ElasticsearchIndex:
    type: string
  ElasticsearchType:
    type: string
  ElasticsearchId:
    type: string
  EnableTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the EnableTopicRuleRequest operation.
  OTAUpdateErrorMessage:
    type: string
  ErrorInfo:
    type: object
    properties:
      code:
        $ref: '#/definitions/Code'
        description: The error code.
      message:
        $ref: '#/definitions/OTAUpdateErrorMessage'
        description: The error message.
    description: Error information.
  EvaluationStatistic:
    type: string
    pattern: (p0|p0\.1|p0\.01|p1|p10|p50|p90|p99|p99\.9|p99\.99|p100)
  EventType:
    type: string
    enum:
      - THING
      - THING_GROUP
      - THING_TYPE
      - THING_GROUP_MEMBERSHIP
      - THING_GROUP_HIERARCHY
      - THING_TYPE_ASSOCIATION
      - JOB
      - JOB_EXECUTION
      - POLICY
      - CERTIFICATE
      - CA_CERTIFICATE
  ExecutionNamePrefix:
    type: string
  RolloutRatePerMinute:
    type: integer
    minimum: 1
    maximum: 1000
  IncrementFactor:
    type: number
    format: double
    minimum: 1
    maximum: 5
  RateIncreaseCriteria:
    type: object
    properties:
      numberOfNotifiedThings:
        $ref: '#/definitions/NumberOfThings'
        description: The threshold for number of notified things that will initiate the increase in rate of rollout.
      numberOfSucceededThings:
        $ref: '#/definitions/NumberOfThings'
        description: The threshold for number of succeeded things that will initiate the increase in rate of rollout.
    description: Allows you to define a criteria to initiate the increase in rate of rollout for a job.
  FailedChecksCount:
    type: integer
  FailedFindingsCount:
    type: integer
  FailedThings:
    type: integer
  FieldName:
    type: string
  FieldType:
    type: string
    enum:
      - Number
      - String
      - Boolean
  Field:
    type: object
    properties:
      name:
        $ref: '#/definitions/FieldName'
        description: The name of the field.
      type:
        $ref: '#/definitions/FieldType'
        description: The datatype of the field.
    description: Describes the name and data type at a field.
  FileId:
    type: integer
    minimum: 0
    maximum: 255
  Stream:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      fileId:
        $ref: '#/definitions/FileId'
        description: The ID of a file associated with a stream.
    description: Describes a group of files that can be streamed.
  S3Location:
    type: object
    properties:
      bucket:
        $ref: '#/definitions/S3Bucket'
        description: The S3 bucket.
      key:
        $ref: '#/definitions/S3Key'
        description: The S3 key.
      version:
        $ref: '#/definitions/S3Version'
        description: The S3 bucket version.
    description: The S3 location.
  FileLocation:
    type: object
    properties:
      stream:
        $ref: '#/definitions/Stream'
        description: The stream that contains the OTA update.
      s3Location:
        $ref: '#/definitions/S3Location'
        description: The location of the updated firmware in S3.
    description: The location of the OTA update.
  FileName:
    type: string
  FirehoseSeparator:
    type: string
    pattern: '([\n\t])|(\r\n)|(,)'
  Forced:
    type: boolean
  FunctionArn:
    type: string
  GetCardinalityRequest:
    type: object
    required:
      - queryString
    properties:
      indexName:
        $ref: '#/definitions/IndexName'
        description: The name of the index to search.
      queryString:
        $ref: '#/definitions/QueryString'
        description: The search query.
      aggregationField:
        $ref: '#/definitions/AggregationField'
        description: The field to aggregate.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: The query version.
  GetEffectivePoliciesRequest:
    type: object
    properties:
      principal:
        $ref: '#/definitions/Principal'
        description: The principal.
      cognitoIdentityPoolId:
        $ref: '#/definitions/CognitoIdentityPoolId'
        description: The Cognito identity pool ID.
  GetIndexingConfigurationRequest:
    type: object
    properties: {}
  ThingIndexingConfiguration:
    type: object
    required:
      - thingIndexingMode
    properties:
      thingIndexingMode:
        $ref: '#/definitions/ThingIndexingMode'
        description: '<p>Thing indexing mode. Valid values are:</p> <ul> <li> <p>REGISTRY – Your thing index contains registry data only.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry and shadow data.</p> </li> <li> <p>OFF - Thing indexing is disabled.</p> </li> </ul>'
      thingConnectivityIndexingMode:
        $ref: '#/definitions/ThingConnectivityIndexingMode'
        description: '<p>Thing connectivity indexing mode. Valid values are: </p> <ul> <li> <p>STATUS – Your thing index contains connectivity status. To enable thing connectivity indexing, thingIndexMode must not be set to OFF.</p> </li> <li> <p>OFF - Thing connectivity status indexing is disabled.</p> </li> </ul>'
      managedFields:
        $ref: '#/definitions/Fields'
        description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
      customFields:
        $ref: '#/definitions/Fields'
        description: Contains custom field names and their data type.
    description: 'The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing Thing Indexing</a>.'
  ThingGroupIndexingConfiguration:
    type: object
    required:
      - thingGroupIndexingMode
    properties:
      thingGroupIndexingMode:
        $ref: '#/definitions/ThingGroupIndexingMode'
        description: Thing group indexing mode.
      managedFields:
        $ref: '#/definitions/Fields'
        description: Contains fields that are indexed and whose types are already known by the Fleet Indexing service.
      customFields:
        $ref: '#/definitions/Fields'
        description: <p>A list of thing group fields to index. This list cannot contain any managed fields. Use the GetIndexingConfiguration API to get a list of managed fields.</p> <p>Contains custom field names and their data type.</p>
    description: Thing group indexing configuration.
  GetJobDocumentRequest:
    type: object
    properties: {}
  GetLoggingOptionsRequest:
    type: object
    properties: {}
    description: The input for the GetLoggingOptions operation.
  GetOTAUpdateRequest:
    type: object
    properties: {}
  OTAUpdateInfo:
    type: object
    properties:
      otaUpdateId:
        $ref: '#/definitions/OTAUpdateId'
        description: The OTA update ID.
      otaUpdateArn:
        $ref: '#/definitions/OTAUpdateArn'
        description: The OTA update ARN.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the OTA update was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date when the OTA update was last updated.
      description:
        $ref: '#/definitions/OTAUpdateDescription'
        description: A description of the OTA update.
      targets:
        $ref: '#/definitions/Targets'
        description: The targets of the OTA update.
      protocols:
        $ref: '#/definitions/Protocols'
        description: 'The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.'
      awsJobExecutionsRolloutConfig:
        $ref: '#/definitions/AwsJobExecutionsRolloutConfig'
        description: Configuration for the rollout of OTA updates.
      awsJobPresignedUrlConfig:
        $ref: '#/definitions/AwsJobPresignedUrlConfig'
        description: Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also be run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when the thing is added to a target group, even after the OTA update was completed by all things originally in the group. '
      otaUpdateFiles:
        $ref: '#/definitions/OTAUpdateFiles'
        description: A list of files associated with the OTA update.
      otaUpdateStatus:
        $ref: '#/definitions/OTAUpdateStatus'
        description: The status of the OTA update.
      awsIotJobId:
        $ref: '#/definitions/AwsIotJobId'
        description: The AWS IoT job ID associated with the OTA update.
      awsIotJobArn:
        $ref: '#/definitions/AwsIotJobArn'
        description: The AWS IoT job ARN associated with the OTA update.
      errorInfo:
        $ref: '#/definitions/ErrorInfo'
        description: Error information associated with the OTA update.
      additionalParameters:
        $ref: '#/definitions/AdditionalParameterMap'
        description: A collection of name/value pairs
    description: Information about an OTA update.
  PercentList:
    type: array
    items:
      $ref: '#/definitions/Percent'
  GetPercentilesRequest:
    type: object
    required:
      - queryString
    properties:
      indexName:
        $ref: '#/definitions/IndexName'
        description: The name of the index to search.
      queryString:
        $ref: '#/definitions/QueryString'
        description: The query string.
      aggregationField:
        $ref: '#/definitions/AggregationField'
        description: The field to aggregate.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: The query version.
      percents:
        $ref: '#/definitions/PercentList'
        description: The percentile groups returned.
  Percentiles:
    type: array
    items:
      $ref: '#/definitions/PercentPair'
  GetPolicyRequest:
    type: object
    properties: {}
    description: The input for the GetPolicy operation.
  GetPolicyVersionRequest:
    type: object
    properties: {}
    description: The input for the GetPolicyVersion operation.
  GetRegistrationCodeRequest:
    type: object
    properties: {}
    description: The input to the GetRegistrationCode operation.
  RegistrationCode:
    type: string
    pattern: '(0x)?[a-fA-F0-9]+'
    minLength: 64
    maxLength: 64
  GetStatisticsRequest:
    type: object
    required:
      - queryString
    properties:
      indexName:
        $ref: '#/definitions/IndexName'
        description: The name of the index to search. The default value is <code>AWS_Things</code>.
      queryString:
        $ref: '#/definitions/QueryString'
        description: The query used to search. You can specify "*" for the query string to get the count of all indexed things in your AWS account.
      aggregationField:
        $ref: '#/definitions/AggregationField'
        description: The aggregation field name.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: The version of the query used to search.
  Statistics:
    type: object
    properties:
      count:
        $ref: '#/definitions/Count'
        description: The count of things that match the query.
      average:
        $ref: '#/definitions/Average'
        description: The average of the aggregated field values.
      sum:
        $ref: '#/definitions/Sum'
        description: The sum of the aggregated field values.
      minimum:
        $ref: '#/definitions/Minimum'
        description: The minimum aggregated field value.
      maximum:
        $ref: '#/definitions/Maximum'
        description: The maximum aggregated field value.
      sumOfSquares:
        $ref: '#/definitions/SumOfSquares'
        description: The sum of the squares of the aggregated field values.
      variance:
        $ref: '#/definitions/Variance'
        description: The variance of the aggregated field values.
      stdDeviation:
        $ref: '#/definitions/StdDeviation'
        description: The standard deviation of the aggregated field values.
    description: 'A map of key-value pairs for all supported statistics. Currently, only count is supported.'
  GetTopicRuleDestinationRequest:
    type: object
    properties: {}
  GetTopicRuleRequest:
    type: object
    properties: {}
    description: The input for the GetTopicRule operation.
  RuleArn:
    type: string
  TopicRule:
    type: object
    properties:
      ruleName:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      sql:
        $ref: '#/definitions/SQL'
        description: 'The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.'
      description:
        $ref: '#/definitions/Description'
        description: The description of the rule.
      createdAt:
        $ref: '#/definitions/CreatedAtDate'
        description: The date and time the rule was created.
      actions:
        $ref: '#/definitions/ActionList'
        description: The actions associated with the rule.
      ruleDisabled:
        $ref: '#/definitions/IsDisabled'
        description: Specifies whether the rule is disabled.
      awsIotSqlVersion:
        $ref: '#/definitions/AwsIotSqlVersion'
        description: The version of the SQL rules engine to use when evaluating the rule.
      errorAction:
        $ref: '#/definitions/Action'
        description: The action to perform when an error occurs.
    description: Describes a rule.
  GetV2LoggingOptionsRequest:
    type: object
    properties: {}
  HeaderKey:
    type: string
    minLength: 1
    maxLength: 256
  HttpActionHeader:
    type: object
    required:
      - key
      - value
    properties:
      key:
        $ref: '#/definitions/HeaderKey'
        description: The HTTP header key.
      value:
        $ref: '#/definitions/HeaderValue'
        description: The HTTP header value. Substitution templates are supported.
    description: The HTTP action header.
  HeaderList:
    type: array
    items:
      $ref: '#/definitions/HttpActionHeader'
    minItems: 0
    maxItems: 100
  HeaderValue:
    type: string
  Url:
    type: string
    maxLength: 2000
  HttpAuthorization:
    type: object
    properties:
      sigv4:
        $ref: '#/definitions/SigV4Authorization'
        description: 'Use Sig V4 authorization. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 Signing Process</a>.'
    description: The authorization method used to send messages.
  SigV4Authorization:
    type: object
    required:
      - signingRegion
      - serviceName
      - roleArn
    properties:
      signingRegion:
        $ref: '#/definitions/SigningRegion'
        description: The signing region.
      serviceName:
        $ref: '#/definitions/ServiceName'
        description: The service name to use while signing with Sig V4.
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the signing role.
    description: Use Sig V4 authorization.
  HttpContext:
    type: object
    properties:
      headers:
        $ref: '#/definitions/HttpHeaders'
        description: The header keys and values in an HTTP authorization request.
      queryString:
        $ref: '#/definitions/HttpQueryString'
        description: The query string keys and values in an HTTP authorization request.
    description: Specifies the HTTP context to use for the test authorizer request.
  HttpHeaderName:
    type: string
    minLength: 1
    maxLength: 8192
  HttpHeaderValue:
    type: string
    minLength: 1
    maxLength: 8192
  HttpUrlDestinationProperties:
    type: object
    properties:
      confirmationUrl:
        $ref: '#/definitions/Url'
        description: The URL used to confirm the HTTP topic rule destination URL.
    description: HTTP URL destination properties.
  HttpUrlDestinationSummary:
    type: object
    properties:
      confirmationUrl:
        $ref: '#/definitions/Url'
        description: The URL used to confirm ownership of or access to the HTTP topic rule destination URL.
    description: Information about an HTTP URL destination.
  InProgressChecksCount:
    type: integer
  InProgressThings:
    type: integer
  IndexNamesList:
    type: array
    items:
      $ref: '#/definitions/IndexName'
  InputName:
    type: string
    minLength: 1
    maxLength: 128
  MessageId:
    type: string
    maxLength: 128
  PutAssetPropertyValueEntryList:
    type: array
    items:
      $ref: '#/definitions/PutAssetPropertyValueEntry'
    minItems: 1
  IsAuthenticated:
    type: boolean
  JobStatus:
    type: string
    enum:
      - IN_PROGRESS
      - CANCELED
      - COMPLETED
      - DELETION_IN_PROGRESS
  JobProcessDetails:
    type: object
    properties:
      processingTargets:
        $ref: '#/definitions/ProcessingTargetNameList'
        description: The target devices to which the job execution is being rolled out. This value will be null after the job execution has finished rolling out to all the target devices.
      numberOfCanceledThings:
        $ref: '#/definitions/CanceledThings'
        description: The number of things that cancelled the job.
      numberOfSucceededThings:
        $ref: '#/definitions/SucceededThings'
        description: The number of things which successfully completed the job.
      numberOfFailedThings:
        $ref: '#/definitions/FailedThings'
        description: The number of things that failed executing the job.
      numberOfRejectedThings:
        $ref: '#/definitions/RejectedThings'
        description: The number of things that rejected the job.
      numberOfQueuedThings:
        $ref: '#/definitions/QueuedThings'
        description: The number of things that are awaiting execution of the job.
      numberOfInProgressThings:
        $ref: '#/definitions/InProgressThings'
        description: The number of things currently executing the job.
      numberOfRemovedThings:
        $ref: '#/definitions/RemovedThings'
        description: The number of things that are no longer scheduled to execute the job because they have been deleted or have been removed from the group that was a target of the job.
      numberOfTimedOutThings:
        $ref: '#/definitions/TimedOutThings'
        description: The number of things whose job execution status is <code>TIMED_OUT</code>.
    description: The job process details.
  JobExecutionStatus:
    type: string
    enum:
      - QUEUED
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
      - TIMED_OUT
      - REJECTED
      - REMOVED
      - CANCELED
  JobExecutionStatusDetails:
    type: object
    properties:
      detailsMap:
        $ref: '#/definitions/DetailsMap'
        description: The job execution status.
    description: Details of the job execution status.
  VersionNumber:
    type: integer
  JobExecutionSummary:
    type: object
    properties:
      status:
        $ref: '#/definitions/JobExecutionStatus'
        description: The status of the job execution.
      queuedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job execution was queued.'
      startedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job execution started.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job execution was last updated.'
      executionNumber:
        $ref: '#/definitions/ExecutionNumber'
        description: A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.
    description: The job execution summary.
  JobExecutionSummaryForJob:
    type: object
    properties:
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing on which the job execution is running.
      jobExecutionSummary:
        $ref: '#/definitions/JobExecutionSummary'
        description: Contains a subset of information about a job execution.
    description: Contains a summary of information about job executions for a specific job.
  JobExecutionSummaryForJobList:
    type: array
    items:
      $ref: '#/definitions/JobExecutionSummaryForJob'
  JobExecutionSummaryForThing:
    type: object
    properties:
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      jobExecutionSummary:
        $ref: '#/definitions/JobExecutionSummary'
        description: Contains a subset of information about a job execution.
    description: The job execution summary for a thing.
  JobExecutionSummaryForThingList:
    type: array
    items:
      $ref: '#/definitions/JobExecutionSummaryForThing'
  ProcessingTargetNameList:
    type: array
    items:
      $ref: '#/definitions/ProcessingTargetName'
  SucceededThings:
    type: integer
  RejectedThings:
    type: integer
  QueuedThings:
    type: integer
  RemovedThings:
    type: integer
  TimedOutThings:
    type: integer
  JobSummary:
    type: object
    properties:
      jobArn:
        $ref: '#/definitions/JobArn'
        description: The job ARN.
      jobId:
        $ref: '#/definitions/JobId'
        description: The unique identifier you assigned to this job when it was created.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The ID of the thing group.
      targetSelection:
        $ref: '#/definitions/TargetSelection'
        description: 'Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.'
      status:
        $ref: '#/definitions/JobStatus'
        description: The job summary status.
      createdAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job was created.'
      lastUpdatedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job was last updated.'
      completedAt:
        $ref: '#/definitions/DateType'
        description: 'The time, in seconds since the epoch, when the job completed.'
    description: The job summary.
  JobSummaryList:
    type: array
    items:
      $ref: '#/definitions/JobSummary'
  JsonDocument:
    type: string
  Key:
    type: string
  KeyName:
    type: string
    pattern: '[a-zA-Z0-9:_-]+'
    minLength: 1
    maxLength: 128
  PublicKey:
    type: string
    minLength: 1
  PrivateKey:
    type: string
    minLength: 1
    format: password
  StreamName:
    type: string
  PartitionKey:
    type: string
  LaserMaxResults:
    type: integer
    minimum: 1
    maximum: 250
  NextToken:
    type: string
  MaxResults:
    type: integer
    minimum: 1
    maximum: 250
  ListActiveViolationsRequest:
    type: object
    properties: {}
  Recursive:
    type: boolean
  Marker:
    type: string
    pattern: '[A-Za-z0-9+/]+={0,2}'
  PageSize:
    type: integer
    minimum: 1
    maximum: 250
  ListAttachedPoliciesRequest:
    type: object
    properties: {}
  ResourceIdentifier:
    type: object
    properties:
      deviceCertificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the certificate attached to the resource.
      caCertificateId:
        $ref: '#/definitions/CertificateId'
        description: The ID of the CA certificate used to authorize the certificate.
      cognitoIdentityPoolId:
        $ref: '#/definitions/CognitoIdentityPoolId'
        description: The ID of the Amazon Cognito identity pool.
      clientId:
        $ref: '#/definitions/ClientId'
        description: The client ID.
      policyVersionIdentifier:
        $ref: '#/definitions/PolicyVersionIdentifier'
        description: The version of the policy associated with the resource.
      account:
        $ref: '#/definitions/AwsAccountId'
        description: The account with which the resource is associated.
      iamRoleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that has overly permissive actions.
      roleAliasArn:
        $ref: '#/definitions/RoleAliasArn'
        description: The ARN of the role alias that has overly permissive actions.
    description: Information that identifies the noncompliant resource.
  ListAuditFindingsRequest:
    type: object
    properties:
      taskId:
        $ref: '#/definitions/AuditTaskId'
        description: 'A filter to limit results to the audit with the specified ID. You must specify either the taskId or the startTime and endTime, but not both.'
      checkName:
        $ref: '#/definitions/AuditCheckName'
        description: A filter to limit results to the findings for the specified audit check.
      resourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: Information identifying the noncompliant resource.
      maxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return at one time. The default is 25.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: The token for the next set of results.
      startTime:
        $ref: '#/definitions/Timestamp'
        description: 'A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
      endTime:
        $ref: '#/definitions/Timestamp'
        description: 'A filter to limit results to those found before the specified time. You must specify either the startTime and endTime or the taskId, but not both.'
  ListAuditMitigationActionsExecutionsRequest:
    type: object
    properties: {}
  ListAuditMitigationActionsTasksRequest:
    type: object
    properties: {}
  ListAuditTasksRequest:
    type: object
    properties: {}
  ListAuthorizersRequest:
    type: object
    properties: {}
  RegistryMaxResults:
    type: integer
    minimum: 1
    maximum: 250
  ListBillingGroupsRequest:
    type: object
    properties: {}
  ListCACertificatesRequest:
    type: object
    properties: {}
    description: Input for the ListCACertificates operation.
  ListCertificatesByCARequest:
    type: object
    properties: {}
    description: The input to the ListCertificatesByCA operation.
  ListCertificatesRequest:
    type: object
    properties: {}
    description: The input for the ListCertificates operation.
  ListDomainConfigurationsRequest:
    type: object
    properties: {}
  QueryMaxResults:
    type: integer
    minimum: 1
    maximum: 500
  ListIndicesRequest:
    type: object
    properties: {}
  ListJobExecutionsForJobRequest:
    type: object
    properties: {}
  ListJobExecutionsForThingRequest:
    type: object
    properties: {}
  ListJobsRequest:
    type: object
    properties: {}
  ListMitigationActionsRequest:
    type: object
    properties: {}
  MitigationActionIdentifierList:
    type: array
    items:
      $ref: '#/definitions/MitigationActionIdentifier'
  ListOTAUpdatesRequest:
    type: object
    properties: {}
  OTAUpdatesSummary:
    type: array
    items:
      $ref: '#/definitions/OTAUpdateSummary'
  ListOutgoingCertificatesRequest:
    type: object
    properties: {}
    description: The input to the ListOutgoingCertificates operation.
  OutgoingCertificates:
    type: array
    items:
      $ref: '#/definitions/OutgoingCertificate'
  ListPoliciesRequest:
    type: object
    properties: {}
    description: The input for the ListPolicies operation.
  ListPolicyPrincipalsRequest:
    type: object
    properties: {}
    description: The input for the ListPolicyPrincipals operation.
  Principals:
    type: array
    items:
      $ref: '#/definitions/PrincipalArn'
  ListPolicyVersionsRequest:
    type: object
    properties: {}
    description: The input for the ListPolicyVersions operation.
  PolicyVersions:
    type: array
    items:
      $ref: '#/definitions/PolicyVersion'
  ListPrincipalPoliciesRequest:
    type: object
    properties: {}
    description: The input for the ListPrincipalPolicies operation.
  ListPrincipalThingsRequest:
    type: object
    properties: {}
    description: The input for the ListPrincipalThings operation.
  ThingNameList:
    type: array
    items:
      $ref: '#/definitions/ThingName'
  ListProvisioningTemplateVersionsRequest:
    type: object
    properties: {}
  ProvisioningTemplateVersionListing:
    type: array
    items:
      $ref: '#/definitions/ProvisioningTemplateVersionSummary'
  ListProvisioningTemplatesRequest:
    type: object
    properties: {}
  ProvisioningTemplateListing:
    type: array
    items:
      $ref: '#/definitions/ProvisioningTemplateSummary'
  ListRoleAliasesRequest:
    type: object
    properties: {}
  RoleAliases:
    type: array
    items:
      $ref: '#/definitions/RoleAlias'
  ListScheduledAuditsRequest:
    type: object
    properties: {}
  ScheduledAuditMetadataList:
    type: array
    items:
      $ref: '#/definitions/ScheduledAuditMetadata'
  ListSecurityProfilesForTargetRequest:
    type: object
    properties: {}
  SecurityProfileTargetMappings:
    type: array
    items:
      $ref: '#/definitions/SecurityProfileTargetMapping'
  ListSecurityProfilesRequest:
    type: object
    properties: {}
  SecurityProfileIdentifiers:
    type: array
    items:
      $ref: '#/definitions/SecurityProfileIdentifier'
  ListStreamsRequest:
    type: object
    properties: {}
  StreamsSummary:
    type: array
    items:
      $ref: '#/definitions/StreamSummary'
  ResourceArn:
    type: string
  ListTagsForResourceRequest:
    type: object
    properties: {}
  ListTargetsForPolicyRequest:
    type: object
    properties: {}
  PolicyTargets:
    type: array
    items:
      $ref: '#/definitions/PolicyTarget'
  ListTargetsForSecurityProfileRequest:
    type: object
    properties: {}
  SecurityProfileTargets:
    type: array
    items:
      $ref: '#/definitions/SecurityProfileTarget'
  ListThingGroupsForThingRequest:
    type: object
    properties: {}
  ThingGroupNameAndArnList:
    type: array
    items:
      $ref: '#/definitions/GroupNameAndArn'
  RecursiveWithoutDefault:
    type: boolean
  ListThingGroupsRequest:
    type: object
    properties: {}
  ListThingPrincipalsRequest:
    type: object
    properties: {}
    description: The input for the ListThingPrincipal operation.
  ReportType:
    type: string
    enum:
      - ERRORS
      - RESULTS
  ListThingRegistrationTaskReportsRequest:
    type: object
    properties: {}
  S3FileUrlList:
    type: array
    items:
      $ref: '#/definitions/S3FileUrl'
  ListThingRegistrationTasksRequest:
    type: object
    properties: {}
  TaskIdList:
    type: array
    items:
      $ref: '#/definitions/TaskId'
  ListThingTypesRequest:
    type: object
    properties: {}
    description: The input for the ListThingTypes operation.
  ThingTypeList:
    type: array
    items:
      $ref: '#/definitions/ThingTypeDefinition'
  ListThingsInBillingGroupRequest:
    type: object
    properties: {}
  ListThingsInThingGroupRequest:
    type: object
    properties: {}
  ListThingsRequest:
    type: object
    properties: {}
    description: The input for the ListThings operation.
  ThingAttributeList:
    type: array
    items:
      $ref: '#/definitions/ThingAttribute'
  TopicRuleDestinationMaxResults:
    type: integer
    minimum: 1
    maximum: 1000
  ListTopicRuleDestinationsRequest:
    type: object
    properties: {}
  TopicRuleDestinationSummaries:
    type: array
    items:
      $ref: '#/definitions/TopicRuleDestinationSummary'
  Topic:
    type: string
  TopicRuleMaxResults:
    type: integer
    minimum: 1
    maximum: 10000
  ListTopicRulesRequest:
    type: object
    properties: {}
    description: The input for the ListTopicRules operation.
  TopicRuleList:
    type: array
    items:
      $ref: '#/definitions/TopicRuleListItem'
  SkyfallMaxResults:
    type: integer
    minimum: 1
    maximum: 250
  ListV2LoggingLevelsRequest:
    type: object
    properties: {}
  LogTargetConfigurations:
    type: array
    items:
      $ref: '#/definitions/LogTargetConfiguration'
  ListViolationEventsRequest:
    type: object
    properties: {}
  ViolationEvents:
    type: array
    items:
      $ref: '#/definitions/ViolationEvent'
  LogTarget:
    type: object
    required:
      - targetType
    properties:
      targetType:
        $ref: '#/definitions/LogTargetType'
        description: The target type.
      targetName:
        $ref: '#/definitions/LogTargetName'
        description: The target name.
    description: A log target.
  LogTargetConfiguration:
    type: object
    properties:
      logTarget:
        $ref: '#/definitions/LogTarget'
        description: A log target
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The logging level.
    description: The target configuration.
  LoggingOptionsPayload:
    type: object
    required:
      - roleArn
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the IAM role that grants access.
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The log level.
    description: Describes the logging options payload.
  Maximum:
    type: number
    format: double
  Message:
    type: string
    maxLength: 128
  MessageFormat:
    type: string
    enum:
      - RAW
      - JSON
  UnsignedLong:
    type: integer
    minimum: 0
  Ports:
    type: array
    items:
      $ref: '#/definitions/Port'
  Minimum:
    type: number
    format: double
  MissingContextValue:
    type: string
  MitigationAction:
    type: object
    properties:
      name:
        $ref: '#/definitions/MitigationActionName'
        description: A user-friendly name for the mitigation action.
      id:
        $ref: '#/definitions/MitigationActionId'
        description: A unique identifier for the mitigation action.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The IAM role ARN used to apply this mitigation action.
      actionParams:
        $ref: '#/definitions/MitigationActionParams'
        description: 'The set of parameters for this mitigation action. The parameters vary, depending on the kind of action you apply.'
    description: Describes which changes should be applied as part of a mitigation action.
  MitigationActionIdentifier:
    type: object
    properties:
      actionName:
        $ref: '#/definitions/MitigationActionName'
        description: The friendly name of the mitigation action.
      actionArn:
        $ref: '#/definitions/MitigationActionArn'
        description: The IAM role ARN used to apply this mitigation action.
      creationDate:
        $ref: '#/definitions/Timestamp'
        description: The date when this mitigation action was created.
    description: Information that identifies a mitigation action. This information is returned by ListMitigationActions.
  MqttContext:
    type: object
    properties:
      username:
        $ref: '#/definitions/MqttUsername'
        description: The value of the <code>username</code> key in an MQTT authorization request.
      password:
        $ref: '#/definitions/MqttPassword'
        description: The value of the <code>password</code> key in an MQTT authorization request.
      clientId:
        $ref: '#/definitions/MqttClientId'
        description: The value of the <code>clientId</code> key in an MQTT authorization request.
    description: Specifies the MQTT context to use for the test authorizer request
  NonCompliantChecksCount:
    type: integer
  ResourceType:
    type: string
    enum:
      - DEVICE_CERTIFICATE
      - CA_CERTIFICATE
      - IOT_POLICY
      - COGNITO_IDENTITY_POOL
      - CLIENT_ID
      - ACCOUNT_SETTINGS
      - ROLE_ALIAS
      - IAM_ROLE
  StringMap:
    type: object
    additionalProperties:
      $ref: '#/definitions/String'
  NumberOfThings:
    type: integer
    minimum: 1
  OTAUpdateFileVersion:
    type: string
  OTAUpdateSummary:
    type: object
    properties:
      otaUpdateId:
        $ref: '#/definitions/OTAUpdateId'
        description: The OTA update ID.
      otaUpdateArn:
        $ref: '#/definitions/OTAUpdateArn'
        description: The OTA update ARN.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the OTA update was created.
    description: An OTA update summary.
  OutgoingCertificate:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: The certificate ARN.
      certificateId:
        $ref: '#/definitions/CertificateId'
        description: The certificate ID.
      transferredTo:
        $ref: '#/definitions/AwsAccountId'
        description: The AWS account to which the transfer was made.
      transferDate:
        $ref: '#/definitions/DateType'
        description: The date the transfer was initiated.
      transferMessage:
        $ref: '#/definitions/Message'
        description: The transfer message.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The certificate creation date.
    description: A certificate that has been transferred but not yet accepted.
  Parameter:
    type: string
  Parameters:
    type: object
    additionalProperties:
      $ref: '#/definitions/Value'
  PercentValue:
    type: number
    format: double
  PercentPair:
    type: object
    properties:
      percent:
        $ref: '#/definitions/Percent'
        description: The percentile.
      value:
        $ref: '#/definitions/PercentValue'
        description: The value of the percentile.
    description: Describes the percentile and percentile value.
  Platform:
    type: string
  Policy:
    type: object
    properties:
      policyName:
        $ref: '#/definitions/PolicyName'
        description: The policy name.
      policyArn:
        $ref: '#/definitions/PolicyArn'
        description: The policy ARN.
    description: Describes an AWS IoT policy.
  PolicyDocuments:
    type: array
    items:
      $ref: '#/definitions/PolicyDocument'
  PolicyNames:
    type: array
    items:
      $ref: '#/definitions/PolicyName'
  PolicyTemplateName:
    type: string
    enum:
      - BLANK_POLICY
  PolicyVersion:
    type: object
    properties:
      versionId:
        $ref: '#/definitions/PolicyVersionId'
        description: The policy version ID.
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: Specifies whether the policy version is the default.
      createDate:
        $ref: '#/definitions/DateType'
        description: The date and time the policy was created.
    description: Describes a policy version.
  Port:
    type: integer
    minimum: 0
    maximum: 65535
  Prefix:
    type: string
  PrincipalArn:
    type: string
  PrincipalId:
    type: string
    pattern: '[a-zA-Z0-9]+'
    minLength: 1
    maxLength: 128
  ProcessingTargetName:
    type: string
  ProvisioningTemplateSummary:
    type: object
    properties:
      templateArn:
        $ref: '#/definitions/TemplateArn'
        description: The ARN of the fleet provisioning template.
      templateName:
        $ref: '#/definitions/TemplateName'
        description: The name of the fleet provisioning template.
      description:
        $ref: '#/definitions/TemplateDescription'
        description: The description of the fleet provisioning template.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the fleet provisioning template summary was created.
      lastModifiedDate:
        $ref: '#/definitions/DateType'
        description: The date when the fleet provisioning template summary was last modified.
      enabled:
        $ref: '#/definitions/Enabled'
        description: 'True if the fleet provision template is enabled, otherwise false.'
    description: A summary of information about a fleet provisioning template.
  ProvisioningTemplateVersionSummary:
    type: object
    properties:
      versionId:
        $ref: '#/definitions/TemplateVersionId'
        description: The ID of the fleet privisioning template version.
      creationDate:
        $ref: '#/definitions/DateType'
        description: The date when the fleet provisioning template version was created
      isDefaultVersion:
        $ref: '#/definitions/IsDefaultVersion'
        description: 'True if the fleet provisioning template version is the default version, otherwise false.'
    description: A summary of information about a fleet provision template version.
  SnsTopicArn:
    type: string
    maxLength: 350
  PutAssetPropertyValueEntry:
    type: object
    required:
      - propertyValues
    properties:
      entryId:
        $ref: '#/definitions/AssetPropertyEntryId'
        description: Optional. A unique identifier for this entry that you can define to better track which message caused an error in case of failure. Accepts substitution templates. Defaults to a new UUID.
      assetId:
        $ref: '#/definitions/AssetId'
        description: The ID of the AWS IoT SiteWise asset. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.
      propertyId:
        $ref: '#/definitions/AssetPropertyId'
        description: The ID of the asset's property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.
      propertyAlias:
        $ref: '#/definitions/AssetPropertyAlias'
        description: The name of the property alias associated with your asset property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.
      propertyValues:
        $ref: '#/definitions/AssetPropertyValueList'
        description: 'A list of property values to insert that each contain timestamp, quality, and value (TQV) information.'
    description: An asset property value entry containing the following information.
  Qos:
    type: integer
    minimum: 0
    maximum: 1
  QueueUrl:
    type: string
  RegisterCACertificateRequest:
    type: object
    required:
      - caCertificate
      - verificationCertificate
    properties:
      caCertificate:
        $ref: '#/definitions/CertificatePem'
        description: The CA certificate.
      verificationCertificate:
        $ref: '#/definitions/CertificatePem'
        description: The private key verification certificate.
      registrationConfig:
        $ref: '#/definitions/RegistrationConfig'
        description: Information about the registration configuration.
    description: The input to the RegisterCACertificate operation.
  SetAsActiveFlag:
    type: boolean
  RegisterCertificateRequest:
    type: object
    required:
      - certificatePem
    properties:
      certificatePem:
        $ref: '#/definitions/CertificatePem'
        description: 'The certificate data, in PEM format.'
      caCertificatePem:
        $ref: '#/definitions/CertificatePem'
        description: The CA certificate used to sign the device certificate being registered.
      status:
        $ref: '#/definitions/CertificateStatus'
        description: The status of the register certificate request.
    description: The input to the RegisterCertificate operation.
  RegisterThingRequest:
    type: object
    required:
      - templateBody
    properties:
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: 'The provisioning template. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html">Programmatic Provisioning</a> for more information.'
      parameters:
        $ref: '#/definitions/Parameters'
        description: 'The parameters for provisioning a thing. See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/programmatic-provisioning.html">Programmatic Provisioning</a> for more information.'
  ResourceArns:
    type: object
    additionalProperties:
      $ref: '#/definitions/ResourceArn'
  RejectCertificateTransferRequest:
    type: object
    properties:
      rejectReason:
        $ref: '#/definitions/Message'
        description: The reason the certificate transfer was rejected.
    description: The input for the RejectCertificateTransfer operation.
  RelatedResource:
    type: object
    properties:
      resourceType:
        $ref: '#/definitions/ResourceType'
        description: The type of resource.
      resourceIdentifier:
        $ref: '#/definitions/ResourceIdentifier'
        description: Information that identifies the resource.
      additionalInfo:
        $ref: '#/definitions/StringMap'
        description: Other information about the resource.
    description: Information about a related resource.
  RemoveAuthorizerConfig:
    type: boolean
  RemoveAutoRegistration:
    type: boolean
  RemoveThingFromBillingGroupRequest:
    type: object
    properties:
      billingGroupName:
        $ref: '#/definitions/BillingGroupName'
        description: The name of the billing group.
      billingGroupArn:
        $ref: '#/definitions/BillingGroupArn'
        description: The ARN of the billing group.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing to be removed from the billing group.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to be removed from the billing group.
  RemoveThingFromThingGroupRequest:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The group name.
      thingGroupArn:
        $ref: '#/definitions/ThingGroupArn'
        description: The group ARN.
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing to remove from the group.
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The ARN of the thing to remove from the group.
  RemoveThingType:
    type: boolean
  ReplaceTopicRuleRequest:
    type: object
    required:
      - topicRulePayload
    properties:
      topicRulePayload:
        $ref: '#/definitions/TopicRulePayload'
        description: The rule payload.
    description: The input for the ReplaceTopicRule operation.
  TopicPattern:
    type: string
  Resource:
    type: string
  ResourceLogicalId:
    type: string
  S3Bucket:
    type: string
    minLength: 1
  S3FileUrl:
    type: string
    maxLength: 65535
  S3Key:
    type: string
    minLength: 1
  S3Version:
    type: string
  SalesforceToken:
    type: string
    minLength: 40
  SalesforceEndpoint:
    type: string
    pattern: 'https://ingestion-[a-zA-Z0-9]{1,12}\.[a-zA-Z0-9]+\.((sfdc-matrix\.net)|(sfdcnow\.com))/streams/\w{1,20}/\w{1,20}/event'
    maxLength: 2000
  ScheduledAuditMetadata:
    type: object
    properties:
      scheduledAuditName:
        $ref: '#/definitions/ScheduledAuditName'
        description: The name of the scheduled audit.
      scheduledAuditArn:
        $ref: '#/definitions/ScheduledAuditArn'
        description: The ARN of the scheduled audit.
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: How often the scheduled audit occurs.
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit is run (if the <code>frequency</code> is "MONTHLY"). If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: The day of the week on which the scheduled audit is run (if the <code>frequency</code> is "WEEKLY" or "BIWEEKLY").
    description: Information about the scheduled audit.
  SearchIndexRequest:
    type: object
    required:
      - queryString
    properties:
      indexName:
        $ref: '#/definitions/IndexName'
        description: The search index name.
      queryString:
        $ref: '#/definitions/QueryString'
        description: The search query string.
      nextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to get the next set of results, or <code>null</code> if there are no additional results.'
      maxResults:
        $ref: '#/definitions/QueryMaxResults'
        description: The maximum number of results to return at one time.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: The query version.
  ThingDocumentList:
    type: array
    items:
      $ref: '#/definitions/ThingDocument'
  ThingGroupDocumentList:
    type: array
    items:
      $ref: '#/definitions/ThingGroupDocument'
  Seconds:
    type: integer
  SecurityProfileIdentifier:
    type: object
    required:
      - name
      - arn
    properties:
      name:
        $ref: '#/definitions/SecurityProfileName'
        description: The name you have given to the security profile.
      arn:
        $ref: '#/definitions/SecurityProfileArn'
        description: The ARN of the security profile.
    description: Identifying information for a Device Defender security profile.
  SecurityProfileTarget:
    type: object
    required:
      - arn
    properties:
      arn:
        $ref: '#/definitions/SecurityProfileTargetArn'
        description: The ARN of the security profile.
    description: A target to which an alert is sent when a security profile behavior is violated.
  SecurityProfileTargetMapping:
    type: object
    properties:
      securityProfileIdentifier:
        $ref: '#/definitions/SecurityProfileIdentifier'
        description: Information that identifies the security profile.
      target:
        $ref: '#/definitions/SecurityProfileTarget'
        description: Information about the target (thing group) associated with the security profile.
    description: Information about a security profile and the target associated with it.
  ServerCertificateStatus:
    type: string
    enum:
      - INVALID
      - VALID
  ServerCertificateStatusDetail:
    type: string
  ServerCertificateSummary:
    type: object
    properties:
      serverCertificateArn:
        $ref: '#/definitions/AcmCertificateArn'
        description: The ARN of the server certificate.
      serverCertificateStatus:
        $ref: '#/definitions/ServerCertificateStatus'
        description: The status of the server certificate.
      serverCertificateStatusDetail:
        $ref: '#/definitions/ServerCertificateStatusDetail'
        description: Details that explain the status of the server certificate.
    description: An object that contains information about a server certificate.
  ServiceName:
    type: string
  SetDefaultAuthorizerRequest:
    type: object
    required:
      - authorizerName
    properties:
      authorizerName:
        $ref: '#/definitions/AuthorizerName'
        description: The authorizer name.
  SetDefaultPolicyVersionRequest:
    type: object
    properties: {}
    description: The input for the SetDefaultPolicyVersion operation.
  SetLoggingOptionsRequest:
    type: object
    required:
      - loggingOptionsPayload
    properties:
      loggingOptionsPayload:
        $ref: '#/definitions/LoggingOptionsPayload'
        description: The logging options payload.
    description: The input for the SetLoggingOptions operation.
  SetV2LoggingLevelRequest:
    type: object
    required:
      - logTarget
      - logLevel
    properties:
      logTarget:
        $ref: '#/definitions/LogTarget'
        description: The log target.
      logLevel:
        $ref: '#/definitions/LogLevel'
        description: The log level.
  SetV2LoggingOptionsRequest:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the role that allows IoT to write to Cloudwatch logs.
      defaultLogLevel:
        $ref: '#/definitions/LogLevel'
        description: The default logging level.
      disableAllLogs:
        $ref: '#/definitions/DisableAllLogs'
        description: If true all logs are disabled. The default is false.
  SigningRegion:
    type: string
  SigningProfileName:
    type: string
  SigningProfileParameter:
    type: object
    properties:
      certificateArn:
        $ref: '#/definitions/CertificateArn'
        description: Certificate ARN.
      platform:
        $ref: '#/definitions/Platform'
        description: The hardware platform of your device.
      certificatePathOnDevice:
        $ref: '#/definitions/CertificatePathOnDevice'
        description: The location of the code-signing certificate on your device.
    description: Describes the code-signing profile.
  SkippedFindingsCount:
    type: integer
  UseBase64:
    type: boolean
  StartAuditMitigationActionsTaskRequest:
    type: object
    required:
      - target
      - auditCheckToActionsMapping
      - clientRequestToken
    properties:
      target:
        $ref: '#/definitions/AuditMitigationActionsTaskTarget'
        description: 'Specifies the audit findings to which the mitigation actions are applied. You can apply them to a type of audit check, to all findings from an audit, or to a speecific set of findings.'
      auditCheckToActionsMapping:
        $ref: '#/definitions/AuditCheckToActionsMapping'
        description: 'For an audit check, specifies which mitigation actions to apply. Those actions must be defined in your AWS account.'
      clientRequestToken:
        $ref: '#/definitions/ClientRequestToken'
        description: 'Each audit mitigation task must have a unique client request token. If you try to start a new task with the same token as a task that already exists, an exception occurs. If you omit this value, a unique client request token is generated automatically.'
  StartOnDemandAuditTaskRequest:
    type: object
    required:
      - targetCheckNames
    properties:
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: 'Which checks are performed during the audit. The checks you specify must be enabled for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.'
  StartThingRegistrationTaskRequest:
    type: object
    required:
      - templateBody
      - inputFileBucket
      - inputFileKey
      - roleArn
    properties:
      templateBody:
        $ref: '#/definitions/TemplateBody'
        description: The provisioning template.
      inputFileBucket:
        $ref: '#/definitions/RegistryS3BucketName'
        description: The S3 bucket that contains the input file.
      inputFileKey:
        $ref: '#/definitions/RegistryS3KeyName'
        description: The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each line contains the parameter values to provision one device (thing).
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The IAM role ARN that grants permission the input file.
  StateMachineName:
    type: string
  Sum:
    type: number
    format: double
  SumOfSquares:
    type: number
    format: double
  Variance:
    type: number
    format: double
  StdDeviation:
    type: number
    format: double
  StopThingRegistrationTaskRequest:
    type: object
    properties: {}
  StreamSummary:
    type: object
    properties:
      streamId:
        $ref: '#/definitions/StreamId'
        description: The stream ID.
      streamArn:
        $ref: '#/definitions/StreamArn'
        description: The stream ARN.
      streamVersion:
        $ref: '#/definitions/StreamVersion'
        description: The stream version.
      description:
        $ref: '#/definitions/StreamDescription'
        description: A description of the stream.
    description: A summary of a stream.
  SucceededFindingsCount:
    type: integer
  TagValue:
    type: string
  TagKeyList:
    type: array
    items:
      $ref: '#/definitions/TagKey'
  TagResourceRequest:
    type: object
    required:
      - resourceArn
      - tags
    properties:
      resourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The ARN of the resource.
      tags:
        $ref: '#/definitions/TagList'
        description: The new or modified tags for the resource.
  TotalChecksCount:
    type: integer
  WaitingForDataCollectionChecksCount:
    type: integer
  TotalFindingsCount:
    type: integer
  TestAuthorizationRequest:
    type: object
    required:
      - authInfos
    properties:
      principal:
        $ref: '#/definitions/Principal'
        description: The principal.
      cognitoIdentityPoolId:
        $ref: '#/definitions/CognitoIdentityPoolId'
        description: The Cognito identity pool ID.
      authInfos:
        $ref: '#/definitions/AuthInfos'
        description: A list of authorization info objects. Simulating authorization will create a response for each <code>authInfo</code> object in the list.
      policyNamesToAdd:
        $ref: '#/definitions/PolicyNames'
        description: 'When testing custom authorization, the policies specified here are treated as if they are attached to the principal being authorized.'
      policyNamesToSkip:
        $ref: '#/definitions/PolicyNames'
        description: 'When testing custom authorization, the policies specified here are treated as if they are not attached to the principal being authorized.'
  Token:
    type: string
    minLength: 1
    maxLength: 6144
  TokenSignature:
    type: string
    pattern: '[A-Za-z0-9+/]+={0,2}'
    minLength: 1
    maxLength: 2560
  TlsContext:
    type: object
    properties:
      serverName:
        $ref: '#/definitions/ServerName'
        description: The value of the <code>serverName</code> key in a TLS authorization request.
    description: Specifies the TLS context to use for the test authorizer request.
  TestInvokeAuthorizerRequest:
    type: object
    properties:
      token:
        $ref: '#/definitions/Token'
        description: The token returned by your custom authentication service.
      tokenSignature:
        $ref: '#/definitions/TokenSignature'
        description: The signature made with the token and your custom authentication service's private key.
      httpContext:
        $ref: '#/definitions/HttpContext'
        description: Specifies a test HTTP authorization request.
      mqttContext:
        $ref: '#/definitions/MqttContext'
        description: Specifies a test MQTT authorization request.
      tlsContext:
        $ref: '#/definitions/TlsContext'
        description: Specifies a test TLS authorization request.
  ThingAttribute:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The name of the thing.
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: 'The name of the thing type, if the thing has been associated with a type.'
      thingArn:
        $ref: '#/definitions/ThingArn'
        description: The thing ARN.
      attributes:
        $ref: '#/definitions/Attributes'
        description: A list of thing attributes which are name-value pairs.
      version:
        $ref: '#/definitions/Version'
        description: The version of the thing record in the registry.
    description: 'The properties of the thing, including thing name, thing type name, and a list of thing attributes.'
  ThingConnectivity:
    type: object
    properties:
      connected:
        $ref: '#/definitions/Boolean'
        description: True if the thing is connected to the AWS IoT service; false if it is not connected.
      timestamp:
        $ref: '#/definitions/ConnectivityTimestamp'
        description: 'The epoch time (in milliseconds) when the thing last connected or disconnected. If the thing has been disconnected for more than a few weeks, the time value might be missing.'
    description: The connectivity status of the thing.
  ThingGroupNameList:
    type: array
    items:
      $ref: '#/definitions/ThingGroupName'
  ThingDocument:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The thing name.
      thingId:
        $ref: '#/definitions/ThingId'
        description: The thing ID.
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The thing type name.
      thingGroupNames:
        $ref: '#/definitions/ThingGroupNameList'
        description: Thing group names.
      attributes:
        $ref: '#/definitions/Attributes'
        description: The attributes.
      shadow:
        $ref: '#/definitions/JsonDocument'
        description: The shadow.
      connectivity:
        $ref: '#/definitions/ThingConnectivity'
        description: Indicates whether the thing is connected to the AWS IoT service.
    description: The thing search index document.
  ThingGroupDocument:
    type: object
    properties:
      thingGroupName:
        $ref: '#/definitions/ThingGroupName'
        description: The thing group name.
      thingGroupId:
        $ref: '#/definitions/ThingGroupId'
        description: The thing group ID.
      thingGroupDescription:
        $ref: '#/definitions/ThingGroupDescription'
        description: The thing group description.
      attributes:
        $ref: '#/definitions/Attributes'
        description: The thing group attributes.
      parentGroupNames:
        $ref: '#/definitions/ThingGroupNameList'
        description: Parent group names.
    description: The thing group search index document.
  ThingGroupList:
    type: array
    items:
      $ref: '#/definitions/ThingGroupName'
  ThingTypeDefinition:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      thingTypeArn:
        $ref: '#/definitions/ThingTypeArn'
        description: The thing type ARN.
      thingTypeProperties:
        $ref: '#/definitions/ThingTypeProperties'
        description: The ThingTypeProperties for the thing type.
      thingTypeMetadata:
        $ref: '#/definitions/ThingTypeMetadata'
        description: 'The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.'
    description: 'The definition of the thing type, including thing type name and description.'
  TopicRuleDestinationStatus:
    type: string
    enum:
      - ENABLED
      - IN_PROGRESS
      - DISABLED
      - ERROR
  TopicRuleDestinationSummary:
    type: object
    properties:
      arn:
        $ref: '#/definitions/AwsArn'
        description: The topic rule destination ARN.
      status:
        $ref: '#/definitions/TopicRuleDestinationStatus'
        description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
      statusReason:
        $ref: '#/definitions/String'
        description: The reason the topic rule destination is in the current status.
      httpUrlSummary:
        $ref: '#/definitions/HttpUrlDestinationSummary'
        description: Information about the HTTP URL.
    description: Information about the topic rule destination.
  TopicRuleListItem:
    type: object
    properties:
      ruleArn:
        $ref: '#/definitions/RuleArn'
        description: The rule ARN.
      ruleName:
        $ref: '#/definitions/RuleName'
        description: The name of the rule.
      topicPattern:
        $ref: '#/definitions/TopicPattern'
        description: The pattern for the topic names that apply.
      createdAt:
        $ref: '#/definitions/CreatedAtDate'
        description: The date and time the rule was created.
      ruleDisabled:
        $ref: '#/definitions/IsDisabled'
        description: Specifies whether the rule is disabled.
    description: Describes a rule.
  TransferCertificateRequest:
    type: object
    properties:
      transferMessage:
        $ref: '#/definitions/Message'
        description: The transfer message.
    description: The input for the TransferCertificate operation.
  UntagResourceRequest:
    type: object
    required:
      - resourceArn
      - tagKeys
    properties:
      resourceArn:
        $ref: '#/definitions/ResourceArn'
        description: The ARN of the resource.
      tagKeys:
        $ref: '#/definitions/TagKeyList'
        description: A list of the keys of the tags to be removed from the resource.
  UpdateAccountAuditConfigurationRequest:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: 'The ARN of the role that grants permission to AWS IoT to access information about your devices, policies, certificates and other items as required when performing an audit.'
      auditNotificationTargetConfigurations:
        $ref: '#/definitions/AuditNotificationTargetConfigurations'
        description: Information about the targets to which audit notifications are sent.
      auditCheckConfigurations:
        $ref: '#/definitions/AuditCheckConfigurations'
        description: '<p>Specifies which audit checks are enabled and disabled for this account. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are currently enabled.</p> <p>Some data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted.</p> <p>You cannot disable a check if it is used by any scheduled audit. You must first delete the check from the scheduled audit or delete the scheduled audit itself.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required and must specify at least one enabled check.</p>'
  UpdateAuthorizerRequest:
    type: object
    properties:
      authorizerFunctionArn:
        $ref: '#/definitions/AuthorizerFunctionArn'
        description: The ARN of the authorizer's Lambda function.
      tokenKeyName:
        $ref: '#/definitions/TokenKeyName'
        description: 'The key used to extract the token from the HTTP headers. '
      tokenSigningPublicKeys:
        $ref: '#/definitions/PublicKeyMap'
        description: The public keys used to verify the token signature.
      status:
        $ref: '#/definitions/AuthorizerStatus'
        description: The status of the update authorizer request.
  UpdateBillingGroupRequest:
    type: object
    required:
      - billingGroupProperties
    properties:
      billingGroupProperties:
        $ref: '#/definitions/BillingGroupProperties'
        description: The properties of the billing group.
      expectedVersion:
        $ref: '#/definitions/OptionalVersion'
        description: 'The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>UpdateBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.'
  UpdateCACertificateRequest:
    type: object
    properties:
      registrationConfig:
        $ref: '#/definitions/RegistrationConfig'
        description: Information about the registration configuration.
      removeAutoRegistration:
        $ref: '#/definitions/RemoveAutoRegistration'
        description: 'If true, removes auto registration.'
    description: The input to the UpdateCACertificate operation.
  UpdateCertificateRequest:
    type: object
    properties: {}
    description: The input for the UpdateCertificate operation.
  UpdateDomainConfigurationRequest:
    type: object
    properties:
      authorizerConfig:
        $ref: '#/definitions/AuthorizerConfig'
        description: An object that specifies the authorization service for a domain.
      domainConfigurationStatus:
        $ref: '#/definitions/DomainConfigurationStatus'
        description: The status to which the domain configuration should be updated.
      removeAuthorizerConfig:
        $ref: '#/definitions/RemoveAuthorizerConfig'
        description: Removes the authorization configuration from a domain.
  UpdateDynamicThingGroupRequest:
    type: object
    required:
      - thingGroupProperties
    properties:
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The dynamic thing group properties to update.
      expectedVersion:
        $ref: '#/definitions/OptionalVersion'
        description: The expected version of the dynamic thing group to update.
      indexName:
        $ref: '#/definitions/IndexName'
        description: '<p>The dynamic thing group index to update.</p> <note> <p>Currently one index is supported: ''AWS_Things''.</p> </note>'
      queryString:
        $ref: '#/definitions/QueryString'
        description: The dynamic thing group search query string to update.
      queryVersion:
        $ref: '#/definitions/QueryVersion'
        description: '<p>The dynamic thing group query version to update.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>'
  UpdateEventConfigurationsRequest:
    type: object
    properties:
      eventConfigurations:
        $ref: '#/definitions/EventConfigurations'
        description: The new event configuration values.
  UpdateIndexingConfigurationRequest:
    type: object
    properties:
      thingIndexingConfiguration:
        $ref: '#/definitions/ThingIndexingConfiguration'
        description: Thing indexing configuration.
      thingGroupIndexingConfiguration:
        $ref: '#/definitions/ThingGroupIndexingConfiguration'
        description: Thing group indexing configuration.
  UpdateJobRequest:
    type: object
    properties:
      description:
        $ref: '#/definitions/JobDescription'
        description: A short text description of the job.
      presignedUrlConfig:
        $ref: '#/definitions/PresignedUrlConfig'
        description: Configuration information for pre-signed S3 URLs.
      jobExecutionsRolloutConfig:
        $ref: '#/definitions/JobExecutionsRolloutConfig'
        description: Allows you to create a staged rollout of the job.
      abortConfig:
        $ref: '#/definitions/AbortConfig'
        description: Allows you to create criteria to abort a job.
      timeoutConfig:
        $ref: '#/definitions/TimeoutConfig'
        description: 'Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>. '
  UpdateMitigationActionRequest:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the IAM role that is used to apply the mitigation action.
      actionParams:
        $ref: '#/definitions/MitigationActionParams'
        description: Defines the type of action and the parameters for that action.
  UpdateProvisioningTemplateRequest:
    type: object
    properties:
      description:
        $ref: '#/definitions/TemplateDescription'
        description: The description of the fleet provisioning template.
      enabled:
        $ref: '#/definitions/Enabled'
        description: 'True to enable the fleet provisioning template, otherwise false.'
      defaultVersionId:
        $ref: '#/definitions/TemplateVersionId'
        description: The ID of the default provisioning template version.
      provisioningRoleArn:
        $ref: '#/definitions/RoleArn'
        description: The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.
  UpdateRoleAliasRequest:
    type: object
    properties:
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: The role ARN.
      credentialDurationSeconds:
        $ref: '#/definitions/CredentialDurationSeconds'
        description: The number of seconds the credential will be valid.
  UpdateScheduledAuditRequest:
    type: object
    properties:
      frequency:
        $ref: '#/definitions/AuditFrequency'
        description: 'How often the scheduled audit takes place. Can be one of "DAILY", "WEEKLY", "BIWEEKLY", or "MONTHLY". The start time of each audit is determined by the system.'
      dayOfMonth:
        $ref: '#/definitions/DayOfMonth'
        description: 'The day of the month on which the scheduled audit takes place. Can be "1" through "31" or "LAST". This field is required if the "frequency" parameter is set to "MONTHLY". If days 29-31 are specified, and the month does not have that many days, the audit takes place on the "LAST" day of the month.'
      dayOfWeek:
        $ref: '#/definitions/DayOfWeek'
        description: 'The day of the week on which the scheduled audit takes place. Can be one of "SUN", "MON", "TUE", "WED", "THU", "FRI", or "SAT". This field is required if the "frequency" parameter is set to "WEEKLY" or "BIWEEKLY".'
      targetCheckNames:
        $ref: '#/definitions/TargetAuditCheckNames'
        description: 'Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
  UpdateSecurityProfileRequest:
    type: object
    properties:
      securityProfileDescription:
        $ref: '#/definitions/SecurityProfileDescription'
        description: A description of the security profile.
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
      alertTargets:
        $ref: '#/definitions/AlertTargets'
        description: Where the alerts are sent. (Alerts are always sent to the console.)
      additionalMetricsToRetain:
        $ref: '#/definitions/AdditionalMetricsToRetainList'
        description: 'A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile''s <code>behaviors</code>, but it is also retained for any metric specified here.'
      deleteBehaviors:
        $ref: '#/definitions/DeleteBehaviors'
        description: 'If true, delete all <code>behaviors</code> defined for this security profile. If any <code>behaviors</code> are defined in the current invocation, an exception occurs.'
      deleteAlertTargets:
        $ref: '#/definitions/DeleteAlertTargets'
        description: 'If true, delete all <code>alertTargets</code> defined for this security profile. If any <code>alertTargets</code> are defined in the current invocation, an exception occurs.'
      deleteAdditionalMetricsToRetain:
        $ref: '#/definitions/DeleteAdditionalMetricsToRetain'
        description: 'If true, delete all <code>additionalMetricsToRetain</code> defined for this security profile. If any <code>additionalMetricsToRetain</code> are defined in the current invocation, an exception occurs.'
  UpdateStreamRequest:
    type: object
    properties:
      description:
        $ref: '#/definitions/StreamDescription'
        description: The description of the stream.
      files:
        $ref: '#/definitions/StreamFiles'
        description: The files associated with the stream.
      roleArn:
        $ref: '#/definitions/RoleArn'
        description: An IAM role that allows the IoT service principal assumes to access your S3 files.
  UpdateThingGroupRequest:
    type: object
    required:
      - thingGroupProperties
    properties:
      thingGroupProperties:
        $ref: '#/definitions/ThingGroupProperties'
        description: The thing group properties.
      expectedVersion:
        $ref: '#/definitions/OptionalVersion'
        description: 'The expected version of the thing group. If this does not match the version of the thing group being updated, the update will fail.'
  UpdateThingGroupsForThingRequest:
    type: object
    properties:
      thingName:
        $ref: '#/definitions/ThingName'
        description: The thing whose group memberships will be updated.
      thingGroupsToAdd:
        $ref: '#/definitions/ThingGroupList'
        description: The groups to which the thing will be added.
      thingGroupsToRemove:
        $ref: '#/definitions/ThingGroupList'
        description: The groups from which the thing will be removed.
      overrideDynamicGroups:
        $ref: '#/definitions/OverrideDynamicGroups'
        description: 'Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.'
  UpdateThingRequest:
    type: object
    properties:
      thingTypeName:
        $ref: '#/definitions/ThingTypeName'
        description: The name of the thing type.
      attributePayload:
        $ref: '#/definitions/AttributePayload'
        description: '<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\"attributes\":{\"name1\":\"value2\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>'
      expectedVersion:
        $ref: '#/definitions/OptionalVersion'
        description: 'The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.'
      removeThingType:
        $ref: '#/definitions/RemoveThingType'
        description: 'Remove a thing type association. If <b>true</b>, the association is removed.'
    description: The input for the UpdateThing operation.
  UpdateTopicRuleDestinationRequest:
    type: object
    required:
      - arn
      - status
    properties:
      arn:
        $ref: '#/definitions/AwsArn'
        description: The ARN of the topic rule destination.
      status:
        $ref: '#/definitions/TopicRuleDestinationStatus'
        description: '<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>'
  Valid:
    type: boolean
  ValidateSecurityProfileBehaviorsRequest:
    type: object
    required:
      - behaviors
    properties:
      behaviors:
        $ref: '#/definitions/Behaviors'
        description: 'Specifies the behaviors that, when violated by a device (thing), cause an alert.'
  ValidationErrors:
    type: array
    items:
      $ref: '#/definitions/ValidationError'
  ValidationError:
    type: object
    properties:
      errorMessage:
        $ref: '#/definitions/ErrorMessage'
        description: The description of an error found in the behaviors.
    description: Information about an error found in a behavior specification.
  ViolationEventType:
    type: string
    enum:
      - in-alarm
      - alarm-cleared
      - alarm-invalidated
  ViolationEvent:
    type: object
    properties:
      violationId:
        $ref: '#/definitions/ViolationId'
        description: The ID of the violation event.
      thingName:
        $ref: '#/definitions/DeviceDefenderThingName'
        description: The name of the thing responsible for the violation event.
      securityProfileName:
        $ref: '#/definitions/SecurityProfileName'
        description: The name of the security profile whose behavior was violated.
      behavior:
        $ref: '#/definitions/Behavior'
        description: The behavior which was violated.
      metricValue:
        $ref: '#/definitions/MetricValue'
        description: The value of the metric (the measurement).
      violationEventType:
        $ref: '#/definitions/ViolationEventType'
        description: The type of violation event.
      violationEventTime:
        $ref: '#/definitions/Timestamp'
        description: The time the violation event occurred.
    description: Information about a Device Defender security profile behavior violation.
